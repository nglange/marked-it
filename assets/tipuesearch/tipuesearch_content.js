var tipuesearch = {
  "pages": [
    {
      "title": "ZenHub",
      "text": "---title: ZenHub---## OverviewZenHub is Agile Project Management that adds predictability and visibility to software development within [GitHub](github). ZenHub helps teams identify bottlenecks and increase productivity by bringing [Kanban-style](https://www.safaribooksonline.com/search/?query=kanban) workflows right into GitHub.## Why ZenHub- Integrated right into the GitHub Enterprise UI (or available as a webapp)- Modern, lightweight, fast user experience- Drag and drop to change state and priority- Adds Agile Estimation and Reporting (Story Points, Burndown, Velocity, Burnup)- Allows you to track multiple projects on the same board to see the big picture- Everything is bookmarkable allowing you to create custom filtered views and share them with anyone## OnboardingZenHub is now available as a Web App for any browser (including iOS on iPad!)- Log in here: [https://zenhub.ibm.com/app/](https://zenhub.ibm.com/app/)ZenHub is also available as a browser plugin for Chrome and Firefox that adds ZenHub directly into IBMs GitHub.- Install here: [https://zenhub.ibm.com/setup/download](https://zenhub.ibm.com/setup/download)    (The Chrome store version will not work with IBMs GitHub)> ProTip: ZenHub, like many applications, is noticeably faster in Chrome. We strongly recommend switching from Firefox to Chrome...## The BoardZenHub adds a Kanban-style board view right into the GitHub UI. It allows you to drag and drop between state (new issues, backlog, in progress, etc). It allows you to drag and drop to set priority. Use the Board to visualize the state of your project. And it looks good while doing it all.Issues flow across the board allowing you to visualize where all of the moving pieces are.### The Kanban Flow Explained([click to enlarge](https://pages.github.ibm.com/the-playbook/resources/images/github/kanban.png))### Maximizing the Board and ColumnsHave a big screen in your Agile workspace? Set up a maximized ZenHub board and run your standups with ease. Need to see more of your Backlog at once? Expand the column to see more on the board at once.- Click the View Dropdown and then Expand to Full Screen (or just press the letter F on the keyboard)- To expand a column, click the gear icon at the top of the column and select Expand Pipeline> ProTip: When you expand a ZenHub column, prioritization reads like a book. Top left card is the most important, bottom right is least important.### Multi-select Cards and Send to Top/BottomYou can select multiple cards and apply labels, estimates, assignees and more.- Hover your mouse over the top right corner of a card until a gear icon appears- Click the Gear Icon, then Click Select Issues from the popup- Select your issues and apply the label, estimate, assignee, or anything you want to edit in bulk- Click the big green Done button when youre done>ProTip: You can send a card to the top or bottom of a column quickly by using the Send to Top or Send to Bottom popup under the same gear icon.- Note that you can select all cards as well. This is really helpful when adding Issues to a Release (to generate Burnup charts, see below)## EpicsZenHub brings hierarchy to GitHub Issues by adding Epic Issues. Epic Issues allow us to easily see all of the child dependencies of an Issue with ease.See the [Planning and Tracking Work](../planning-and-tracking-work/ongoing-delivery) page for details about breaking down work into Epics and Stories.### Creating an EpicHeres how it works.- Open an Issue, scroll down until you see Epics in the right side bar. Click it and select Convert to epic.- Click the Add or modify issues in this epic and youll be brought to the Epic Builder View.- Find your child issues by searching, filtering, or scrolling, the check the checkbox. Theyll be added to the list on the left.- Click Update Epic and youll be brough back to the Epic Issue. The table will be populated and the progress bars will reflect the Open v Closed status and Story Point Completion status for each of the child Issues.### Show all issues in an EpicThe Kanban board adds a Show all issues in this epic button to every Epic card.Click it and you filter the board to show only the Epic Issue and all child Issues. It works with Epics of Epics as well, so youll be able visualize _all of the work_ associated with your Epic.The very first day we had the update, we started testing it out with Watson Conversation epics and immediately saw that we had an Epic in the Closed column, while it still had a child story in the backlog! ZenHub makes it incredibly easy to spot probrems.Fast, simple, clean, powerful.## NOT: FilteringAll of the dropdowns in ZenHub now support NOT: filtering. Just type not: into any of the dropdown filters.## OR Filtering (ANY Filtering)You can _finally_ filter using OR. Heres how you use it:- Select multiple labels on the board- Click the `Matching all filters`- Select `Matching any filters`Done## Agile EstimationAgile Estimation and Reporting using Story Points, Burndown, Velocity, and Burnup are the keys to understanding what a team can accomplish. These tools help you get teams to predictibility. See our [Estimates and Reports](../enterprise-agile/practices/estimates-and-reports) page that shows how to estimate and report using ZenHub.## Exporting Issue DataWe get it, sometimes you need to really dig in and figure out whats what. We asked the team at ZenHub to give us the ability to easily export data from ZenHub.They delivered. Three main steps.- Create a Release Report- Add the Issues you want to export to the Release Report- Scroll to the bottom of the Release Report and click Export Issues## Webinar ReplaysWe recently held a series of Webinars with the team from ZenHub.io, the recordings are [here](https://ibm.box.com/s/t44usd7tjzmb1axdz1kfumywcie8to2s) and [here](https://ibm.box.com/s/m0zyixat68wdw4kspf00iopvmf6aavrm).The content is largely the same, but different questions came up at each one...## Whats Next? Working in Sprints...Now that youre getting the most out of ZenHub, visit the [Enterprise Agile Events](../enterprise-agile/events) page to dive deep into optimizing your process...## GitHubIf you came here from the GitHub guide, the next page is [Hills, Epics, Stories](../github/08-hills-epics-stories-tasks)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/zenhub/",
    },
    {
      "title": "CodeRetreat",
      "text": "---title: CodeRetreat---CodeRetreat is a FUN intensive workshop, focusing on the fundamentals of software development and design.  Practicing the principles of modular and object-oriented design, Unit Testing, JUnit, Pair Programming, TDD and BDD, engineers can improve their ability to write code that minimizes the cost of change over time.  By providing engineers the opportunity to take part in focused practice, away from the pressures of getting things done, the CodeRetreat format has proven itself to be a highly effective means of skill improvement.F. A. Q.Is this a classroom/lecture style workshop?No!  We spend the day writing code.I dont write code, should I come?If you dont write code, you can certainly come and get exposure to the concepts, but first and foremost, CodeRetreat is place where we can grow pre-existing coding skills.Ive been before, should I come again?Yes! Come work in a new/old/different language than you used the last time! You can also ask for one of the alternate thought problems if youve worked on one of the standard ones.What language is used at CodeRetreat?All of the concepts are language agnostic, but our reference materials and examples are in Java due to its wide adoption within IBM.  If you dont know Java, thats ok, weve had people coding in C#, Scala, Ruby, Python, Perl and more!  Well do our best to help pair you up with people working in the same language, but that may not be possible at every CodeRetreat.Where have we held CodeRetreat?Littleton MA, Dublin OH, Austin TX, Raleigh NC, Rochester MN, Astor Place (NYC), Herndon VA, Denver, CO and at the Almaden and Yorktown Research Centers.  Engineers that came to CodeRetreat have delivered THOUSANDS of new Unit Tests this year!Where and when is the next CodeRetreat?Check out the [events list on the blog](https://w3-connections.ibm.com/blogs/widp?tags=code-retreat%20event&lang=en) to see where and when the next CodeRetreat is.What should I bring to CodeRetreat?- Your fully charged laptop.    - Dont forget the power adapter for your laptop (well have recharge zones available)- Your favorite editor/IDE setup and ready to write code ([Atom](http://atom.io), [Eclipse](http://www.eclipse.org), vi, whatever you want)    - If Javascript is your main language, a good editor plus mocha or whatever test framework you prefer    - If Java is your main language, make sure [Eclipse](http://www.eclipse.org) and JUnit are installed and working    - If C# is your main language, make sure [VisualStudio](https://www.visualstudio.com) and NUnit are installed and working    - If you plan on working in another language, bring your favorite coding environment and Unit Test Framework ready for use- Dont know what Unit Test framework to use?  Check out [this enormous list of Unit Test Frameworks](https://en.wikipedia.org/wiki/List_of_unit_testing_frameworks) by language on wikipedia.- Your lunch (lunch is not provided)    - Most labs have Cafeterias, so you can purchase your lunch    - To make the most of our limited time, we ask that you eat your lunch in the roomWhat attendees are saying...>Ive spent a large amount of time in school, and I have taught at the university level. I have seen a lot of teaching, mostly bad. So please understand what it means when I say I can not think of a single thing that I would change if I were teaching this education session. It represents everything that should be taught at the university level, but isnt. This education session should be required for all new developers, and should be repeated often.(May 2014 - Dublin, OH)>Why isnt this part of onboarding?(June 2016 - Austin, TX) - BTW, CodeRetreat _is_ now part of onboarding! Thanks for asking!>So youre telling me that testing is part of development?(February 2015 - Yorktown Heights, NY)>What will I do differently?  I liked testing because Ive never done that before(May 2015 - Littleton MA)>Id like to see this sort of thing happen more often. Especially as new hires come on board. It would have been extremely helpful half a year ago, for instance.  But as for the session itself, it was pretty much perfect.(May 2014 - Dublin, OH)>I cant think of anything. I really enjoyed it!(June 2014 - Littleton, MA)>It would be great if we could dedicate more than a single day to these activities. You get out what you put in.(May 2014 - Austin, TX)>This is the first thing Ive been told I had to do since joining the organization that hasnt sucked.(August 2014 - San Jose, CA)Check out [these blog posts](https://w3-connections.ibm.com/blogs/home/search?lang=en_us&t=entry&f=all&q=CodeRetreat) for more goodness!",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/code-retreat/",
    },
    {
      "title": "Thank you!",
      "text": "---title: Thank you!---Thank you for your feedback, we really appreciate it! Well bring you back to the homepage now...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/nps/",
    },
    {
      "title": "GHE Social Coding Ecosystem",
      "text": "---title: GHE Social Coding Ecosystem---## OverviewToday, _all IBMers_ can see pretty much everything in our GitHub. To keep Watson (and a few other high-profile projects) as safe as possible, while still allowing our parters to search and contribiute to our source code, we need to manage access a little differently. Here’s what will change:- Access to Watson GitHub Organizations and Repositories will move from _all_ IBMers to _many_ IBMers    - Anyone reporting up through Beth Smith will automatically have access    - All of our partners across Research, Cloud Platform, Analytics, CIO, and many others will automatically have access.    - IBMers in a small number of countries where there are heightened risks of intellectual property loss will be _automatically_ removed as collaborators.- Access will be controlled by a “Cognitive Social Coding” GitHub Team that will be _automatically_ added to your public repositories. This will only grant read-only access to the people in the list.    - Once the “Cognitive Social Coding” GitHub Team has been added, your repositories will be automatically switched from public to private (keeping your current team membership).    - On a nightly basis, any newly created repositories will be updated with the “Cognitive Social Coding” GitHub Team and switched to private.    - The large “Cognitive Social Coding” GitHub Team will allow us to be as open as we need to, while still preparing us for a move to using GitHub Privacy controls in the style that will be used by GitHub for Business.- You will see additional names when you @mention or assign issues to people. Don’t worry, you’ll continue to be able to add GitHub members to your organizations, teams and repositories. You’ll continue to be able to create “truly” private repositories when you need to. You’ll continue to be able to accept Pull Requests from colleagues throughout IBM and theyll be able to search our projects to find example code.We’re not moving away from Social Coding, we’re continuing to embrace it, we just need to tweak how we’re managing access to reduce the risk to our business.If you have a new project starting up that is not currently managed through the ecosystem, follow these steps...## How to PrepareThere are three main things that youll need to do. Check permissions before the switch, merge any Pull Requests opened from project forks, and create new forks after the switch.Before the switch- Ensure your GitHub Organizations Default repository permission is set to None    - If it is currently set to Write or Admin, change it to None        - Settings are here: `https://github.ibm.com/organizations/your-organization-name/settings/member_privileges`    - Ask everyone to check their access and make sure everythings correct- Merge any Pull Requests opened from project forks as they will become disconnected after the switch    - If you dont do this, you wont be able to add additional commits to the Pull Request after the switch    - If you arent ready to merge the Pull Request, you can close it and create a new one after the switchIf you have a repository that contains something that you need to remain truly private (a repository with deployment keys for example) you can easily do that.- Ensure the Repository is Private and the name ends with `-private`    - Any repository name that ends in `-private` will automatically be excluded from the Ecosystem...After the switchAnytime you have a fork of a repo that gets switched from public to private, it will be disconnected during the switch. Heres the easy fix:- Rename your existing fork- Create a new fork- Push any changes from your existing fork to your new fork- Delete your old fork (once your changes have been merged)If you have any questions or concerns, hit the #cio-tools-in-watson channel on ibm-watson.slack.com...## Dealing with Exceptions...Even though theres been great care taken to craft the access lists, someone, somewhere will find they wont be able to access a repository they used to.> ProTip:>> Only GitHub Organziation Owners can perform these steps to add exceptions themselves...Create a Team and Add them as Members- Create a GitHub Team in your organization (e.g. our-partners)- Add the GitHub Users that need access to your repository to the our-partners teamAdd the Team to your Repository- Go to your repository and click on Settings- Click on Collaborators & teams- Add the our-partners team to your Repository(Repeat for any other repositories they need access to)> Important!: If you want to add a user outside of the US and EU, ask for help in the #cio-tools-in-watson channel on ibm-watson.slack.com...### Real World ExampleA real world example of how we use the exception process in Watson is for GVT / Translation work. We did the following:- Created the team: gssc-translation-team in the Watson Organization- Added members to the gssc-translation-team- Added the gssc-translation-team to the gvt-translation-hub repository with write accessWe now use the gvt-translation-hub repository for all file exchange between the GSSC Translation Team and our Watson Service Teams.- Watson Service Team Members commit json (or other resource files) and open an issue for the GVT Translation Team- The GSSC Translation Team opens Pull Requests with their changes- Watson Service Team Members review the PRs, merge the commits, and then moves the updated resource files to their own reposThis allows us to:- Allow members of the GSSC Translation Team to work with Watson Team Members in a secure space.- It takes our file exchange process out of Email and Box, and into GitHub (where its versioned)- Provide transparency into whats being worked on## Keeping Repositories PublicIf you have a repository that doesnt contain source code that you want to remain public (an issue tracker for example) you can easily do that.Option One:- rename your repository so that the name ends with `tracker` or `requests` or `deploys`- Switch the repository to Public and remove the GHE Social Coding Ecosystem Team from the Collaborators & teams access listOption Two:If you would like to request an alternate naming convention, [click here to open an issue](http://github.ibm.com/watson/github-requests/issues/new?template=ruleset-change-request.md&title=Please+update+the+ruleset+naming+convention)## Keeping Repositories PrivateIf you have a repository that contains something that you need to remain truly private (a repository with deployment keys for example) you can easily do that even after your Organization has been added to the Social Coding Ecosystem.Option One:- Rename the Repository so that the name ends with `-private` or `secrets`- Switch the Repository to Private and remove the GHE Social Coding Ecosystem Team from the Collaborators & teams access listOption Two:If you would like to request an alternate naming convention, [click here to open an issue](http://github.ibm.com/watson/github-requests/issues/new?template=ruleset-change-request.md&title=Please+update+the+ruleset+naming+convention)## Adding new organizationsWeve worked with the CIOs Office to streamline the process to onboard a new GitHub organization to the GHE Social Coding Ecosystem. Do the following:- Prepare your Organziation by following the steps in [how to prepare](ghe-social-coding-ecosystem#how-to-prepare)- Compile a list of repositories that are _already private_ and will need to stay private- [Click here to open an issue requesting your org be added](http://github.ibm.com/watson/github-requests/issues/new?template=add-org-to-ecosystem.md&title=Please+add+org+to+the+ecosystem)- Once you get a notification from the CIO team, announce the date with the team, then add the user `ghecosys` as an Owner of your GitHub OrganizationThats it. Once youve completed those steps, your organization will be converted overnight. Please note that the CIOs Office prefers converting no more than two organizations per night.## Approval ProcessWondering how this all works from an approval process? Here it is:### Configuration- Each GitHub Organization that is protected by the Ecosystem is controlled by a GitHub Ecosystem Repository owned by the IBM CIO Office (Toolbox@IBM Team)- Each GitHub Ecosystem Repository has a rules.yml file that contains a list of email addresses (henceforth the report-to list)- Beth Smith approves updates to each report-to list- Changes to the report-to lists are made and tracked via GitHub Pull Requests.- The Ecosystem checks each report-to list for each GitHub Organization every night and automatically adds/removes IBMers to a GitHub Ecosystem Access Team    - IBMers that are in [D1 countries](https://www.gpo.gov/fdsys/pkg/CFR-2012-title15-vol2/pdf/CFR-2012-title15-vol2-part740-appNo-.pdf) are automatically blocked from being added to the GitHub Ecosystem Access Team- The GitHub Ecosystem Access Team is added to every GitHub Repository in the GitHub Organziation### New Team Member- When a new Team Member starts reporting to a manager that reports up to someone in the report-to list, they are automatically added to the GitHub Ecosystem Access Team### IBMers not included in the report-to lists- Product Leaders are approved to add IBMers using the [Exceptions](#exceptions) process outlined above as long as they are not in a [D1 country](https://www.gpo.gov/fdsys/pkg/CFR-2012-title15-vol2/pdf/CFR-2012-title15-vol2-part740-appNo-.pdf)- Product Leaders can seek approval from Watson Segment Leader to add individuals in a [D1 country](https://www.gpo.gov/fdsys/pkg/CFR-2012-title15-vol2/pdf/CFR-2012-title15-vol2-part740-appNo-.pdf) when there are clearly understandable business needs. Beth Smith approves these exceptions.### Handling Exceptions- Product Leaders are approved to exclude GitHub Repositories from the GitHub Social Coding Ecosystem if they do not contain Product Source Code### AdministrationA handful of people have access to update the rules used by the ecosystem. Follow these steps if you have access...- Go to the GitHub Social Coding Ecosystem Organization ([found here](https://github.ibm.com/ghe-ecosystem-auth))- Find the repository that has the same name as your GitHub Organization- Edit the rules.yml file, updating the RegEx pattern to include the name of your repository.E.g. to keep a repository named `tracker` public, change:    `pattern: ^((?!secrets|vault|conan|-private|[Dd]eployment-[Kk]eys).)$`    to    `pattern: ^((?!secrets|vault|conan|-private|[Dd]eployment-[Kk]eys|tracker).)$`- Open a Pull Request, the CIO Team will merge the changes",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/ghe-social-coding-ecosystem/",
    },
    {
      "title": "Slack",
      "text": "---title: Slack---[Overview](../slack)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Best Practices](../slack/best-practices)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Integrations](../slack/integrations)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Audio & Video Calling](../slack/slack-calls)[Slack](https://whitewater.ibm.com/tools/slack?tab=overview) is messaging done right. Your conversations follow you no matter what device you use (web / app / tablet / phone). We live in Slack.WorkspacesSlack is organized around Workspaces. Workspaces bring people together in an open, collaborative environment. IBM has a great many Slack Workspaces, [join a few](../onboarding#slack).ChannelsOrganize your conversations in open channels. Make a channel for a project, a topic, a Squad, or anything—everyone has a transparent view of all that’s going on. For truly sensitive information, [create private channels](#private) and invite a few team members. Slack Enterprise Grid brings us the ability to create IBM-wide [shared channels](#shared). Share what you know, help each other out, break those bottlenecks by working out in the open.Direct MessagesSend messages directly to another person or to a small group of people for more focused conversations.CallsTake a conversation from typing to face-to-face by starting a voice or video call in any Channel or Direct Message. [Make one-on-one or group calls](../../slack/slack-calls/) right from Slack without needing to open another app or share invite links.Apps and IntegrationsConnect all the tools you use to Slack and avoid all that constant switching between apps. [Set up your integration](../../slack/integrations/) so that you get all your notifications directly within Slack—from support requests, code check-ins, and error logs to sales leads—all of them searchable in one central archive.### Getting access- See the [onboarding](../onboarding#slack) page to request access to Slack- All Slack users must read the [Slack@IBM Training Guide](https://ibm.biz/slack-training) and the [Slack@IBM FAQ](https://ibm.biz/slack-faq).### Getting Help- The CIOs Office has created a number of helpful [Guides for using Slack at IBM](https://whitewater.ibm.com/tools/slack?tab=training)- Hit the #slack-at-ibm channel in your Slack Team### Apps for Slack...Amongst high-functioning and highly-collaborative teams, Slacks extendability is essential. There are a number of apps that plug directly in to Slack, providing a great amount of functionality beyond simple messaging directly in to the communication stream of teams. Not every Slack App can be used at IBM. Head to the [Integrations](../../slack/integrations) page to see what you can and cant use. Slack also provides a very extensive [API](https://api.slack.com/) to allow custom integrations to be built. This extendability makes Slack an ideal platform to build [ChatOps](https://www.pagerduty.com/blog/what-is-chatops/) on top of, which has been show to improve team communication and collaboration.### ChannelsThere are _thousands_ of internally-public channels covering a myriad of topics on Slack.- Click CHANNELS in the Slack sidebar to search our list of channels.- Your Squad members will have some suggestions, ask them...### Shared ChannelsTo help different groups to work together efficiently, you can share channels with specific Slack Teams or with all Slack Teams.> Tip: Read about shared channels in the [IBM Slack guide](https://whitewater.ibm.com/guides/slack/using-shared-channels) before you request one.#### Request a shared channelSlack channels are not shared by default. An admin can create a shared channel or convert an existing channel. If you work in Watson Core Platform (you use the _ibm-watson.slack.com_ IBM Watson Slack team), open a [Github issue](https://github.ibm.com/watson/slack-channel-requests/issues/new?title=Shared%20Channel%20Request&body=Please%20share%20the%20following%20channel%20in%20the%20IBM%20Watson%20Slack%20Team.%0A%0AChannel%20name:%0A%0APlease%20let%20us%20know%20if%20you%20would%20like%20to%20share%20the%20channel%20with%20all%20IBM%20Teams%20or%20just%20specific%20teams...%0A) and ask to share a channel. Or if you are part of other Slack teams, ask how to request a shared channel in your _#general_ channel.> Important: You cant go back. Shared channels cant be “unshared”.### Private Channels> Note: This section is specifically for the ibm-watson.slack.com team, different Slack teams have different rules, ask in your #general channel...We work out in the open in Slack (internally-open that is). This is possible due to the fact that entire IBM Watson Slack Team is managed as an IBM Confidential Slack Team. You can discuss virtually any topic with other Watson Team members in our channels.Previously, to comply with IBM Legal and Security controls, only Admins were allowed to create private channels (so that an export of that channel could be guaranteed if requested by Legal/Security).With Slacks [recent changes to comply with GDPR](https://slack.com/gdpr), Slack can now provide our CIOs Office with the ability to export a channel (even private channels) if we need to comply with a specific Legal/Security request.As a result, we are switching back to allowing the creation of Private Channels to everyone.Before you do though, remember that there are still only a _very_ few good reasons to use private channels (temporary acquisition channels, legal clauses in a specific client contract). We work out in the open so that everyone can be on the same page, please dont forget that.> Important: You cant go back. Private channels cant ever be made public. Think before you switch.### Private Guest ChannelsFor those projects working closely with external partners, we have the ability to create Private Guest Channels by request. These channels allow you to invite external users that can then join that single channel and communicate with your team. These external guests can only see the contents of that specific channel and members. They cannot see anything else.If you are a member of the Watson AI Organization you can request a Private Guest Channel for the IBM Watson Slack Workspace by [opening an issue](http://github.ibm.com/watson/slack-channel-requests/issues/new?title=Private guest channel request&body=Please create a private guest channel to be used with external partners.%0A%0AChannel name:%0A%0AList of external partner email addresses %28one per line%29:%0A%0A)- A Slack Admin will need to be a member of the channel- Private channels can never be made public once they have been created.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/slack/",
    },
    {
      "title": "Client Owned IP",
      "text": "---title: Client Owned IP---Special Watson Group projects where a client will retain the IP (as opposed to IBM) at the completion of the project are now allowed on github.ibm.com when the following rules are followed.The rules...- All code repositories for the special project are private (to prevent Client IP leaking to IBM and prevent IBM IP leaking into the repo)- Access is strictly controlled to the direct members of the special project- The README for all code repositories contains the following:    > \`\`\`    > PLEASE NOTE    >    > IBM will NOT retain the IP contained in this repository after this project completes.    >    > This repository must remain private and access to this repository is strictly limited to those IBMers directly working on this project.    >    > IBMers with access to this project are forbidden from copying/pasting IBM IP into this project and copying IP from this project into other projects.    > \`\`\`- Members of the special project watch the following [3 minute video](https://ibm.box.com/s/8gtc93ilo5d16ulhuz21n2mr7auzjgz1)This policy is in place for members of the IBM Watson Group (under David Kenny) per an agreement reached with the CIOs Office on 2016-09-06, details are available in [this GitHub issue](https://github.ibm.com/Watson/transformation-tracker/issues/144)...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/client-owned-ip/",
    },
    {
      "title": "Aha!",
      "text": "---title: Aha!---## OverviewOur Organization uses Aha! to define our Personas and Strategy, get ideas from our customers, and build our Roadmaps. It plugs into GitHub so we can track the execution of a Delivery Plan in GitHub right from our Roadmaps in Aha! You may need to request access differently based on your role in the Organization.## Accessing Aha!Once you have [requested (and received) access](#request-access) to Aha!, you can log in using your w3ID:- Aha! for IBM: [https://bigblue.aha.io](https://bigblue.aha.io)- [Ideas Portals](../aha/ideas)> Note - While most business units use the BigBlue instance of Aha!, Watson Health does not. If you are unsure which instance to request access to, check with your Offering Management Team...## Request AccessThere are three types of users in Aha!, Reviewer, Contributor, and Product Owner.### Reviewer (Most Users)- Can comment throughout and respond to To-Dos. Can also create Ideas from within Aha!- Use the [Reviewer Access Self-Service Tool](https://bigblueaha.w3ibm.mybluemix.net/login) to request access to the BigBlue instance of Aha! and be made a Reviewer at the IBM Level    Watson Data & AI Platform Segment    - If you have a valid business need to access the Watson Data & AI Product Lines in Aha, [click here](https://github.ibm.com/watson/aha-requests/issues/new?title=Watson%20Product%20Line%20Access%20Request) to request reviewer access. You will need to have a current Watson Manager approve your access...### Contributor (Some Users)- Can add and manage strategy, notes, milestones, hills, and epics.  Can create and manage Notebooks.- As a paid seat, Contributor access will only be assigned to users with a clear business case. _Most_ Offering Managers can request a Contributor license.  All Watson and Cloud Platform Segments (Except Watson Data & AI Platform)  - To request Aha! Contributor Access, [click here](https://bigbluepaidseat.ideas.aha.io/ideas), dont forget to select your Business Segment  Watson Data & AI Platform Segment  - To request Aha! Contributor Access, [click here](https://github.ibm.com/watson/aha-product-contributor-requests/issues/new?title=New%20Product%20Contributor%20License%20Request)### Product Owner (Few Users)- Can create new products, manage users, create integrations, and customize product settings.- Aha! Administrators and Aha! Liaisons will receive Product Owner access in Aha!. These users will maintain responsibility for their products and product lines, as well as integrations and user accounts.## GitHub IntegrationYou can send Aha! Epics to your GitHub Issue Tracker. When an Epic is closed in GitHub, it is closed in Aha!> Prerequisite: Your Segment, Product Line and Product must be set up before requesting GitHub Integration### All Watson and Cloud Platform Segments (Except Watson Core Platform)- To request Aha! <> GitHub integration for your GitHub Issue Tracker, [click here](https://ibm.box.com/v/GHEIntegration)### Watson Core Platform Segment- To request Aha! <> GitHub integration for your GitHub Issue Tracker, [click here](https://github.ibm.com/watson/aha-github-integration-requests/issues/new).For details on how GitHub Integration works, visit the [Getting Organized with Planning and Tracking Tools](../planning-and-tracking-work/getting-organized#github-integration). Aha Administrators can set up integration by following [these steps](../aha/github-integration-guide).## Getting Organized in Aha!If your Product is new to Aha! then start here: [Planning and Tracking Work - Getting Organized](../planning-and-tracking-work/getting-organized)### Watson Core Platform Saved Reports- The Watson Core Platform Segment has standardized on a few views and saved reports, start here: [Watson Core Platform Standard Reporting](../aha/watson-standard-reporting)## Using Aha! for Ongoing DeliveryOnce youve gotten organized, learn how to use Aha! here: [Planning and Tracking Work - Ongoing Delivery](../planning-and-tracking-work/ongoing-delivery)## Using Aha! NotebooksNotebooks are an easy way to take almost any view from Aha! and publish it as a PDF or a secure web page: [Notebooks](../aha/notebooks)## Help- How do I allow IBMers to see my Product Area in Aha?  - If you are an OM in the Watson AI organization, [watch this video](https://ibm.box.com/s/0txlnq7cevj97um1x2gqshwbfvzd0nc2) - Note: The Product area has been renamed since this video was recorded - the current name of the Product Area is Watson AI- Need help? Hit Slack...  - W&CP bigblue-aha: [https://ibm-cloudplatform.slack.com/messages/bigblue-aha](https://ibm-cloudplatform.slack.com/messages/bigblue-aha)- Aha Website with Videos, FAQ and Product Management Guidance: [http://www.aha.io/roadmapping/guide/product-roadmap](http://www.aha.io/roadmapping/guide/product-roadmap)- Global OM Site to Learn more about how IBM uses Aha!: [https://apps.na.collabserv.com/wikis/home?lang=en-us#!/wiki/We1a1010f4f7d_4fe6_bf15_948315eab9d7/page/LEARN%20about%20Aha](https://apps.na.collabserv.com/wikis/home?lang=en-us#!/wiki/We1a1010f4f7d_4fe6_bf15_948315eab9d7/page/LEARN%20about%20Aha)- Internal Demo with Q&A: [https://ibm.ent.box.com/s/7143ppzoficpesaizgvdvbqp71whrmvx](https://ibm.ent.box.com/s/7143ppzoficpesaizgvdvbqp71whrmvx)- Aha FAQ document = [https://ibm.box.com/v/AhaFAQs](https://ibm.box.com/v/AhaFAQs)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/aha/",
    },
    {
      "title": "GitHub Enterprise",
      "text": "---title: GitHub Enterprise---GitHub Enterprise (GitHub, or GHE) is a web-based [Git](git-scm.com) repository hosting service offered by the [CIOs office](https://whitewater.ibm.com/) and only accessible by IBM employees or contractors. It offers distributed revision control, source code management, project issue tracking, and access control in support of a [collaborative](https://whitewater.ibm.com/field-guide/practices/social-coding) development workflow.## Getting Access- GitHub is automatically available to all IBMers (including contractors). Log in with your w3ID here: [http://github.ibm.com](http://github.ibm.com)## Social CodingGitHub is designed as a Social Coding platform, and as such source code is expected to be _publicly available_ (available only to IBMers inside the IBM Firewall). GHE, and especially Social Coding on it, are [approved for Proprietary Source Code development](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W591f471daa37_4d0e_b162_c3a4c07e0f9e/page/Source%20Code%20Asset%20Protection%20Guidelines).- Jewel Code is allowed if [specific policies are followed](https://whitewater.ibm.com/field-guide/policies/repository-visibility).- Special Watson Group Projects that complete with a client retaining the IP (as opposed to IBM) _can now be allowed_ on GHE as long as [specific policies are followed](../client-owned-ip/).### Terminology- term: Organization  definition: >    A top-level repository owner designed to simplify [management and permissions](https://github.com/blog/2020-improved-organization-permissions) of group-owned repositories, including the ability to divide a group up in to teams with specific repository access and permissions.- term: Team  definition: >    An collection of users in an organization that can be granted specific permissions to specific organization-owned repositories and can be notified by `@mentioning` the team name.- term: Repository  definition: >    Source code with included issues and optional wiki. This is the home for a project and cross-discipline team communication and collaboration about that project.      &nbsp;    Getting Started with GitHub &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/",
    },
    {
      "title": "Suggested Reading List...",
      "text": "---title: Suggested Reading List...---With SafariBooksOnline being freely available to us, we thought wed check to see which of our favorite recent reads are there.Almost all of them!Before I get to our read list, heres a brand new release thats our next thing to read. Now available on Safari!### Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations>by Nicole Forsgren PhD,‎ Jez Humble,‎ Gene Kim>>>[https://www.safaribooksonline.com/library/view/accelerate/9781457191435/](https://www.safaribooksonline.com/library/view/accelerate/9781457191435/)>>How can we apply technology to drive business value? For years, weve been told that the performance of software delivery teams doesnt matter―that it cant provide a competitive advantage to our companies. Through four years of groundbreaking research to include data collected from the State of DevOps reports conducted with Puppet, Dr. Nicole Forsgren, Jez Humble, and Gene Kim set out to find a way to measure software delivery performance―and what drives it―using rigorous statistical methods. This book presents both the findings and the science behind that research, making the information accessible for readers to apply in their own organizations.>>Readers will discover how to measure the performance of their teams, and what capabilities they should invest in to drive higher performance. This book is ideal for management at every level.Cool!Now, heres a list of things weve paid for out of pocket that we can all now read for free.### Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, Video Enhanced Edition>by Jez Humble, David Farley>>[https://www.safaribooksonline.com/library/view/continuous-delivery-reliable/9780321670250/](https://www.safaribooksonline.com/library/view/continuous-delivery-reliable/9780321670250/)>Getting software released to users is often a painful, risky, and time-consuming process. This groundbreaking new book sets out the principles and technical practices that enable rapid, incremental delivery of high quality, valuable new functionality to users. Through automation of the build, deployment, and testing process, and improved collaboration between developers, testers, and operations, delivery teams can get changes released in a matter of hours— sometimes even minutes–no matter what the size of a project or the complexity of its code base.### Lean Enterprise>by Barry OReilly, Jez Humble, Joanne Molesky>>[https://www.safaribooksonline.com/library/view/lean-enterprise/9781491946527/](https://www.safaribooksonline.com/library/view/lean-enterprise/9781491946527/)>>How well does your organization respond to changing market conditions, customer needs, and emerging technologies when building software-based products? This practical guide presents Lean and Agile principles and patterns to help you move fast at scale—and demonstrates why and how to apply these methodologies throughout your organization, rather than with just one department or team.### The Progress Principle: Using Small Wins to Ignite Joy, Engagement, and Creativity at Work>by Steven Kramer, Teresa Amabile>>[https://www.safaribooksonline.com/library/view/the-progress-principle/9781422142738/](https://www.safaribooksonline.com/library/view/the-progress-principle/9781422142738/)>>Brimming with honest examples from the companies studied, The Progress Principle equips aspiring and seasoned leaders alike with the insights they need to maximize their people’s performance.The book shows how to remove obstacles to progress, including meaningless tasks and toxic relationships. As Teresa Amabile and Steven Kramer explain in The Progress Principle, seemingly mundane workday events can make or break employees’ inner work lives.### The Phoenix Project>by George Spafford, Kevin Behr, Gene Kim>>[https://www.safaribooksonline.com/library/view/the-phoenix-project/9781457191350/](https://www.safaribooksonline.com/library/view/the-phoenix-project/9781457191350/)>>Readers will not only learn how to improve their own IT organizations, theyll never view IT the same way again.>(Wow, we cant believe thats what they have for their description. This is a look at an upcoming product launch seen through the eyes of a newly promoted leader. Yes its fictionalized, but it rings true and at times has an all too familiar feeling.)### Agile Testing: A Practical Guide for Testers and Agile Teams>by Janet Gregory, Lisa Crispin>>[https://www.safaribooksonline.com/library/view/agile-testing-a/9780321616944/](https://www.safaribooksonline.com/library/view/agile-testing-a/9780321616944/)>>Readers will come away from this book understanding How to get testers engaged in agile development Where testers and QA managers fit on an agile team What to look for when hiring an agile tester How to transition from a traditional cycle to agile development How to complete testing activities in short iterations How to use tests to successfully guide development How to overcome barriers to test automation This book is a must for agile testers, agile teams, their managers, and their customers. In Agile Testing, Crispin and Gregory define agile testing and illustrate the tester’s role with examples from real agile teams. ... The eBook edition of Agile Testing also is available as part of a two-eBook collection, The Agile Testing Collection (9780134190624).### Site Reliability Engineering>by Niall Richard Murphy, Jennifer Petoff, Chris Jones, Betsy Beyer>>[https://www.safaribooksonline.com/library/view/site-reliability-engineering/9781491929117/](https://www.safaribooksonline.com/library/view/site-reliability-engineering/9781491929117/)>>The overwhelming majority of a software system’s lifespan is spent in use, not in design or implementation. So, why does conventional wisdom insist that software engineers focus primarily on the design and development of large-scale computing systems?>In this collection of essays and articles, key members of Google’s Site Reliability Team explain how and why their commitment to the entire lifecycle has enabled the company to successfully build, deploy, monitor, and maintain some of the largest software systems in the world. You’ll learn the principles and practices that enable Google engineers to make systems more scalable, reliable, and efficient—lessons directly applicable to your organization.Whats missing? SafariBooksOnline doesnt have everything, here are some key missing titles...### Kanban: Successful Evolutionary Change for Your Technology Business>by David J. Anderson>>[http://a.co/9qZBD3R](http://a.co/9qZBD3R)>>Kanban is becoming a popular way to visualize and limit work-in-progress in software development and information technology work. Teams around the world are adding kanban around their existing processes to catalyze cultural change and deliver better business agility. This book answers the questions: What is Kanban? Why would I want to use Kanban? How do I go about implementing Kanban? How do I recognize improvement opportunities and what should I do about them?### Scrum: The Art of Doing Twice the Work in Half the Time> by Jeff Sutherland, J.J. Sutherland >>[http://a.co/8eRbK1G](http://a.co/8eRbK1G)> >For those who believe that there must be a more agile and efficient way for people to get things done, here is a brilliantly discursive, thought-provoking book about the leadership and management process that is changing the way we live.### Sprint: How to Solve Big Problems and Test New Ideas in Just Five Days>by Jake Knapp  (Author),‎ John Zeratsky  (Author),‎ Braden Kowitz  (Author)>>[http://a.co/3dJXST4](http://a.co/3dJXST4)>>From three partners at Google Ventures, a unique five-day process for solving tough problems, proven at more than a hundred companies.>>Entrepreneurs and leaders face big questions every day: What’s the most important place to focus your effort, and how do you start? What will your idea look like in real life? How many meetings and discussions does it take before you can be sure you have the right solution?>>Now there’s a surefire way to answer these important questions...### The Power of Moments: Why Certain Experiences Have Extraordinary Impact>by Chip Heath,‎ Dan Heath>>[http://a.co/3c9vPPC](http://a.co/3c9vPPC)>>While human lives are endlessly variable, our most memorable positive moments are dominated by four elements: elevation, insight, pride, and connection. If we embrace these elements, we can conjure more moments that matter. What if a teacher could design a lesson that he knew his students would remember twenty years later? What if a manager knew how to create an experience that would delight customers?",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/reading-list/",
    },
    {
      "title": "Get Support",
      "text": "---title: Get Support---Who you gonna call?",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/support/",
    },
    {
      "title": "Box",
      "text": "---title: Box---Box enables you to securely store and access content in the cloud. It also allows you to share files and collaborate with other IBMers from anywhere on any registered device.Unlimited storage._Unlimited storage!_Box.com is not only approved for IBM Confidential material, but some kinds of client and sensitive data as well. See [Box@IBM Help](https://w3.ibm.com/help/#/article/40138) for details.Log in here: [https://ibm.box.com](https://ibm.box.com)> ProTip: Sharing Files with all IBMersBy default, Box.com sets the default permissions to people you invite to share (one by one, using their email address). For _much_ of the content we all work with, you can set the access rights to People in your company. This will open access up to all IBMers. Obviously, you should use this option appropriately, use your judgement.## Troubleshooting> ProTip: Documents and folders have owners, make sure your team takes care of that before people leave, heres a [link with details](https://community.box.com/t5/Collaboration-and-Sharing/How-Do-I-Change-The-Owner-Of-A-Folder/ta-p/149).Q: A former IBMer left the company already and I need access to data they previously owned.A: If you need access to data from an inactive Box@IBM account, a Box@IBM Admin can transfer all or some of the data stored in the inactive account to another Box@IBM account.  In order for this request to be processed, the IBM@Box Admin will need the following information emailed to ibmbox@us.ibm.com with a subject line Transfer Ownership- The w3id of the inactive account (ex. ibmbox@us.ibm.com)- The specific folder or data which needs to be transferred- A functional managers approval of this transfer. To speed up the process, please have the functional managers approval before sending the initial email to Box@IBM.Other troubleshooting information [can be found on w3](https://w3.ibm.com/help/#/mac/us_imt/en/article/41366).## Watson Platform Box Folder...The Watson Platform organization has a standard folder where all of our Tribes, Products, and Squads can store information in an open way.The hierarchy looks like this:To move existing folders into the common folder, use the box.com web interface.- Find your existing folder- Select your folder, click the three dots icon, and then select Move or Copy- Scroll down and expand the Watson Platform Folder until you find your Tribe, Product, and Squad.- Select Move, Box will take care of the rest...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/box/",
    },
    {
      "title": "Lessons Learned",
      "text": "---title: Lessons Learned---Over the last few years, weve taken the things weve learned and created the Playbook. Weve got several forms of reference material here, lists of links, long form guidebooks, short form experience reports, and Case Studies.## Why so many forms of content?Because everyone learns and adapts differently. Its often helpful to be able to affiliate with the challenges a Team has been experiencing and then learn how they are working to overcome those challenges.## Our Lessons Learned- [One Week Sprints](../enterprise-agile/lessons-learned/one-week-sprints/) (not as crazy as it sounds)- [Squad Camp](../enterprise-agile/lessons-learned/squad-camp/) (a focused day of improvement)- [Scrum Masters](../enterprise-agile/lessons-learned/iteration-managers/) (how Scrum Masters dramatically improved our ability to deliver value)- [Brooks law at work](../enterprise-agile/lessons-learned/brooks-law-at-work/) (adding people to a late project makes it later...)- [Getting started with User Value-based Roadmaps](../enterprise-agile/lessons-learned/user-value-based-roadmaps/) (using user value to drive priority)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/lessons-learned/",
    },
    {
      "title": "Leadership",
      "text": "---title: Leadershipweight: 3---Enterprise Agile focuses on optimizing the [Organization](../organization/), [Events](../events/), and the [Leadership](../leadership/) to support our Squad Members. Heres how it works...## Scrum MastersScrum Masters are key to helping squads Accelerate their development by Removing Impediments, Managing the Iteration and embodying Servant Leadership.The run the Daily Standup, bring blockers to the Daily Product Standup, and ensure that the Sprint Plans as defined by the Squad are aligned with the Product Roadmap.They break bottlenecks, align our Squads, and drive the execution of our delivery plan.> Scrum Masters are the Guardians of the Process which means that they continually look at how we can do things better and ensure we are following the existing processes. Weve got a page dedicated to the [Scrum Master](../../roles/scrum-master/)...## Product OwnersEach Tribe typically supports a number of Products / Offerings, Services or Projects within it that are aligned around common Goals. They have one or more Squads. A Product / Offering / Service is sold, while a Project is not currently sold (though may be in the future).Each Product has one or more Product Owners. They spend part of their time working with customers, doing market analysis, working on strategy, and part of their time working with the Squad to build the Product Roadmap and Backlog.> Note: At IBM, Product Owners are known by the title Offering Manager who typically have additional duties. Weve got a page dedicated to the [Product Owner](../../roles/product-owner/) aspect of the Offering Manager Role...## The Leadership TeamThe Leadership Team typically consists of a Development Leader, a Product Owner (Offering Manager), a Design Leader and an Architect. These four work together to define the backlog and guide the overall project. Together, they are responsible for: Defining Hills Decomposing Hills into Epics Assigning Epics to Releases Assigning Epics to Squads Managing the overall release plan> ProTip: Your Product Owner is _usually_ synonymous with an Offering Manager or a Senior Offering Manager (using IBM-specific terms)## Transformation LeadersWorking with the Leadership Team at the Tribe level are our Transformation Leaders. Each Tribe should have a number of Transformation Leaders working across the organization. They work with the Squads _throughout the Sprint_. They coach Scrum Masters on running Agile Ceremonies, drive the adoption of Agile Practices, eliminate waste by streamlining process, and build a culture of Continuous Improvement.## Release ManagersWorking with the Leadership Team at the Product / Offering / Service level are our Release Managers. Each Product should have a Release Manager. They work with the Squads on a _daily basis_ to ensure that the Sprint goals are being met. They do this in three key ways:ComplianceIf youve never heard of a miniSD, or had to make an update to Clearinghouse, or had to deal with Disaster Recovery process, or youve never heard of the OMD process, you can thank your Release Manager. No, really, bring them coffee or chocolate or balloons. They deserve your thanks because they are shielding you from very time consuming, but necessary, components of our releases. Release Managers have a never ending responsibility to be aware of any and all compliance related activities that may impact a timeline of a particular feature or capability. They are responsible for knowing exactly what it takes to get a product from an experimental to a GA service in Cloud. If youd like to learn more about the various compliance requirements that Release Managers deal with here are a few links that will give you a taste or a headache of all of the things that they are responsible for knowing about to help you get your products out the door: [IBM Cloud Service Framework (fka Bluemix Onboarding)](https://pages.github.ibm.com/ibmcloud/Service-Framework/transitiontoOneCloudSummary.html) [IBM Offering deliverables Catalog](https://apps.na.collabserv.com/wikis/home?lang=en-us#!/wiki/W10a5829829f4_4da8_aee4_d4bca1dd120d/page/Welcome%20to%20IBM%20Offering%20Deliverables) [Cumulus DPA URL Search](https://www.ibm.com/software/reports/compatibility/clarity/softwareReqsForProduct.html) Link to the [cumulus tool](https://saascapabilities.w3ibm.mybluemix.net/SaaSCapabilities/index.jsp)Communication and PlanningRelease Managers work with the product leadership team to ensure that the communication and planning is as effective and efficient as it can be. They are the enablers who look across teams to identify where there are dependencies and advise Offering Managers on prioritization in relations to those dependencies. Please help your Release Manager by letting them know as early as possible when you plan to GA a product or would like to make changes to pricing or plans. They can help you understand the timeline of the process so you can plan the release and announcements accordingly.Agile ProcessRelease Managers help with problem solving and are part of the Leadership Team that can help remove blockers and try to keep the noise of competing priorities and demands. The are the enforcers of the process. Once the product team has agreed to operate in alignment with Agile process they can help reinforce those practices and principles and advise when we are out of alignment.## Managers and ExecutivesManagers and executives are Agile Servant Leaders. They act as coaches to support the self-directed squads.Agile Servant Leaders:- Set up their squads to be successful- Support agile teams, develop and inspire people- Measure what matters- Set clear goals- Remove blockers- Enable and empower teams to do their work- Listen and seek feedback- Encourage innovation- Hold teams accountable- Provide an environment where learning is encouraged and it is safe to fail## For More InformationFor more information, see the following resources.- [Entperise Agile Team Organization](organization/) (Squads, Tribes, and Guilds)- The IBM Agile Academy [Leadership and Strategy course](https://agile-ibm.mybluemix.net/courses/agile-leadership-strategy) and [Product Ownership course](https://agile-ibm.mybluemix.net/courses/agile-product-ownership)- The [Scrum@Scale Guide](https://www.scrumatscale.com/scrum-at-scale-guide/)- Large-scale scrum [role of the manager](https://less.works/less/management/role-of-manager.html)- Agile Project Management for Dummies [Team Roles Within an Agile Management Framework](http://www.dummies.com/careers/project-management/team-roles-within-an-agile-management-framework/)- An Executives Guide to Disciplined Agile [Roles on Agile Teams from Small to Large Teams](http://www.ambysoft.com/essays/agileRoles.html)## Extended Team Roles and Ceremonies...Each and every Product Team is supported by a large number of extended team members. Heres an overview of the roles and ceremonies that happen on a continuous basis.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/leadership/",
    },
    {
      "title": "Events",
      "text": "---title: Eventsweight: 2---Enterprise Agile focuses on optimizing the [Organization](../organization/), [Events](../events/), and the [Leadership](../leadership/) to support our Squad Members. Heres how it works...We need our [Squad members](../organization/) to have big blocks of time to get things done. To accomplish this, we always start with the minimum viable process possible.The following pages provide a Play by Play for how to work in a disciplined agile way that works at Enterprise scale...#### Rethink and Reorganize your Organization- [Enteprise Agile Organization](../organization/)#### Provide Time and Structure for Squad Members to Work- [Agile Calendars](agile-calendars/)#### Every Day- [15 Minute Daily Standup (Early AM)](daily-standups/)- [15 Minute Daily Scrum Master Standup (Early AM)](daily-standups/#15-minute-daily-scrum-master-standup)- [15 Minute Daily Director Standup (Early AM)](daily-standups/#15-minute-daily-director-standup-optional)- [30 Minute Daily Product Roadmap Refinement (Early AM)](product-refinement/)- [30 Minute Daily Squad Backlog Refinement (Late PM)](squad-backlog-refinement/)#### Last Day of the Sprint- [End of Sprint Demos (Whole Team)](end-of-sprint-demo/)- [Hold a Retrospective (Every Squad)](retrospectives/)- [Plan for your next Sprint (Every Squad)](sprint-planning/)#### Continuously- [Capacity Planning](../practices/capacity-planning/)- [Process Acceleration using Value Stream Mapping and Lead/Cycle/Process Time](../practices/process-acceleration/)#### Dependencies- [Dealing with Dependencies](../practices/dependencies/)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/",
    },
    {
      "title": "Organization",
      "text": "---title: Organizationweight: 1---Enterprise Agile focuses on optimizing the [Organization](../organization/), [Events](../events/), and the [Leadership](../leadership/) to support our Squad Members. Heres how it works...## Business SegmentsThe Cognitive Solutions Organization is made up of different Buisness Segments. Each Segment has a Segment Leader and one or more [Leadership Teams](../leadership/). Each Leadership Team supports a number of Squads. Most look something like this:## SquadsA Squad is a small, cross-functional, self-organizing team who has end-to-end responsibility for the stuff they build, including: Design, Development, Documentation, Quality, Performance, and Delivery. A Squad leaders job is to communicate what needs to be solved and why, then Squads collaborate to find the best solution. Even though each Squad has its own mission, they need to be aligned with product strategy, company priorities, and other Squads. The Scrum Master (a Squad Member) helps align the Squad with other Squads and ensures that work flows. Squads are assigned Epics in their tracker by the [Leadership Team](../leadership/). The Squad will decompose the highest priority Epics into Stories (just focusing on the next few Sprints) and keep their board up to date as those Stories progress from thought to production. Dont write six months worth of Stories, your mission will change before you know it!Ideally, a well-performing Squad: Is small, no bigger than 10 people Is co-located in the same physical space or timezone Includes Designers, Developers, Offering Management and a Scrum Master Practices [Enterprise Agile Egents](../events) Works autonomously, but is aligned with other Squads Is empowered to put their work into production Is capability-focused Makes decisions independently, rather than by committee or decree Minimizes handoffs and waitingTogether, the Squad will: Refine Epics into Stories Estimate Story level of effort Plan their own Sprints Execute work in Sprints as a cross-functional teamSquads thrive when they have a mission, are co-located, multi-disciplinary, and small.Most people should be on one and only one Squad. This should be followed unless there are _extreme_ resource issues requiring someone to split focus on multiple missions (e.g. not enough Designers working on a Product). One exeception to this guidance is that a Product Owners will typically be a Part Time Squad member, helping during Refinement and Planning. Product Owners often work with multiple Squads.> IBM Agile Academy - Get started with a [5 minute video about Squads](http://agileacademy.w3ibm.mybluemix.net/standalone/cross-functional_teams/)## TribesTribe is another term weve borrowed from Spotify. Tribes are groups of Products / Services or Projects aligned around common Goals.Each Tribe typically supports a number of Products / Offerings, Services or Projects within it that are aligned around common Goals. They have one or more Squads. A Product / Offering / Service is sold, while a Project is not currently sold (though may be in the future).Tribes include team members from Development, Offering Management, and Design.  Other disciplines are also present in the Tribe, such as Marketing, Finance, Support, etc., but they usually dont organize into the squads.The Tribe is supported by a [Leadership Team](../leadership/) that prioritizes and assigns Epics across all squads.## GuildsSupporting our Segments, Squads, and Tribes are our Guilds. The Guild concept (like Tribes and Squads) come to us from the fine folks at Spotify and are how we maintain alignment and drive efficiency across the entire Watson and Cloud Platform organization. Guilds are organized around disciplines (like the Cloud Engineering Guild, the Offering Management Guild). Each Guild is made up of members from all of our Segments. Each Guild has one or more Slack channels, has defined leaders, and is the source for discipline-based best practices.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/organization/",
    },
    {
      "title": "Webinars!",
      "text": "---title: Webinars!---## Webinar Recordings - Now on Your Learning!For the last few years, weve run a Webinar series that aims to bring the Playbook to life by taking you through how we work across our Organizations. Listed below are recordings from each of the sessions (hosted on box.com). We cover virtually everything you need to bring the guidance contained within the Playbook to your Squads.Note, the order listed on Your Learning is the recommended viewing order, not necessarily the original order the sessions.Have a question / comment / or just want to say thanks? Join the conversation in the #the-playbook channel in Slack...## The Playbook Channel on Your Learning[https://ibm.biz/the-playbook-webinars](https://ibm.biz/the-playbook-webinars)## Overview and IntroductionIn this webinar, well provide an overview of Roadmaps, Release Planning and Delivery in Watson Platform. Part one of a new training series on how we Get Things Done in Watson...[Recording](https://yourlearning.ibm.com/#activity/URL-1534877713324)## Communication & RolesIn this webinar, well help you make sense who everyone is and how we align through our communication channels. This session will help you see not just your picture, but the whole picture, and how to ensure your voice is heard...[Recording](https://yourlearning.ibm.com/#activity/URL-1534883491040)## RoadmapsIn this webinar, well cover everything about Roadmaps, what they are, how to build them, and things to avoid when you plot out your course...[Recording](https://yourlearning.ibm.com/#activity/URL-1534883597370)## Quarterly PlanningIn this webinar, well cover how the leadership team can plan out the upcoming quarter including updates to the roadmap, creating a new release plan, and collaborating across the tribe, product team, and squads to get alignment.[Recording](https://yourlearning.ibm.com/#activity/URL-1534883755670)## Hills, Epics and StoriesIn this webinar, well cover Hills, Epics, and Stories, our patterns for describing who were building things for, what its about, and why were doing it in the first place, oh yeah, a nice wow factor for those Hills. These patterns are a powerful communication tool that, when used well, can help align the whole team around a mission...[Recording](https://yourlearning.ibm.com/#activity/URL-1534883880717)## How to SprintIn this webinar, well cover how to Sprint, everything from the daily/weekly ceremonies to how to playback/improve/plan.[Recording](https://yourlearning.ibm.com/#activity/URL-1534883973845)## Release Planning with Agile ReportsIn this webinar, we learn how to turn a roadmap into an actionable plan, then track its progress over time! This is a crucial session for Release Managers, Offering Managers, Dev Managers, and Design Managers. Dont miss it![Recording](https://yourlearning.ibm.com/#activity/URL-1534884818885)## Measuring ProgressIn this webinar, well cover how we measure progress in an Agile world. Well look at the progress every step of the way, from Roadmaps to Sprint Plans, getting the most of our kanban boards, and how to use our Agile Reports (burn down, velocity, and burn up).[Recording](https://yourlearning.ibm.com/#activity/URL-1534884974231)## Dependencies, Defects, and Release ReportsIn this webinar, well cover how to deal with dependencies (inside and outside the Squad), how well be tracking Customer Reported Bugs, and how to get the most out of Release Reports (aka Burn up).[Recording](https://yourlearning.ibm.com/#activity/URL-1534885110826)## Process AccelerationIn this webinar, well cover how we use practices adapted from Lean Manufacturing here in our Software Teams. Taking you through Value Stream Mapping, Lead/Cycle/Process Time, and how to mine your ZenHub for data that can be used to spark continuous acceleration efforts. Since this is the era of acceleration, you wont want to miss this![Recording](https://yourlearning.ibm.com/#activity/URL-1534885254241)## Iteration ManagementIn this webinar, well cover Iteration Management. We look at the special role that Scrum Masters play in well running teams. Dont have anyone acting in the Scrum Master role? Dont even know what a Scrum Master is or what they do? Watch the recording and find out!>Note: This session uses the IBM-only term Iteration Manager in place of Scrum Master. After the webinar, most people were giving us a blank stare every time we said Iteration Manager but then said oh, ok when we replied that an Iteration Manager is a Scrum Master. Weve decided to throw in the towel on being good corporate citizens and just use the same role title that the entire rest of the world uses. This recording still uses Iteration Manager - we mean Scrum Master every time we say it...[Recording](https://yourlearning.ibm.com/#activity/URL-1534885462020)## Leading a SquadIn this webinar, well cover Leading a Squad. Not just the GTD Squad this time, well have a special guest (Stephan Roorda!) that will take us through how they run their Squad. DO NOT MISS THIS ONE! (Apologies! For some reason, Stephans video is not showing up in the recording. As a result, its better to listen to, rather than watch this one)[Recording](https://yourlearning.ibm.com/#activity/URL-1534885589521)## RetrospectivesIn this webinar, well cover the most important Agile Practice: Retrospectives. We cover the who/what/why/and how of running these vital events![Recording](https://yourlearning.ibm.com/#activity/URL-1534885681946)## Product OwnersIn this webinar, well cover Product Owners and the vital role they play in building software. Not a role name you often hear around IBM, well cover how organizations sometimes split the duties of a Product Owner, and how you can course correct if your org is out of alignment with Industry norms. Not in OM? You should come too so you can understand how you can help your Product Owner and how they can help you![Recording](https://yourlearning.ibm.com/#activity/URL-1538676544516)## Scrum MastersEarlier this year we did a webinar where we focused on on the Agile@IBM discipline of Iteration Management (aka Scrum Master). We have learned a lot since then so in this session we will share with you new things weve learned, refresh on things that arent quite so new and provide you with information on how to get started as a Scrum Master for your team. Not working as a Scrum Master? You should still attend as you might be able to help your Squad spend less time sitting in BORING status meetings![Recording](https://yourlearning.ibm.com/#activity/URL-AA53C0F8DACA)## Value-based Estimation and Roadmap BuildingThe next quarter is right around the corner. Hopefully youve been working on your product roadmaps and are getting ready to review them with your product teams. One area that product teams often struggle with is estimations and prioritization of large features, functionality and capabilities. We have a simple and easy solution to show you how to effectively size your roadmap and manage the priorities within the capacity of your product team to deliver.[Recording](https://yourlearning.ibm.com/#activity/URL-B5323379793C)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/webinars/replays/",
    },
    {
      "title": "Lessons Learned&#58; Brooks Law at Work...",
      "text": "---title: Lessons Learned&#58; Brooks Law at Work...---Scene 1: WebEx call for a project that’s fallen behind schedule...> _Linda: So, after looking at the teams capacity, velocity, project timeline and scope, we’re not going to make the deadline if we dont pull something out._>> _Paul: Would additional people help you?_>> _Linda: Well, if we can get 5 more people on the team maybe they could pick up some of this new work since its becoming the main bottleneck for us._>> _Paul: Ok, we have a team in another lab thats about to complete a project. Ill get them assigned to you soon..._Scene 2: WebEx call, eight weeks later...> _Linda: I dont know what happened. The new team members came on board and it seems like everything is taking much longer._>> _Paul: Will you make your deadline?_>> _Linda: I dont see how we can! I think were going to have to reduce the scope, we need to work through whats left._>> _Paul: I dont understand, we gave you more people..._Sound familiar? It should, our industry has been struggling with this for _decades_. The phenomenom was first described by former IBMer Fred Brooks.In 1975 Fred Brooks released [_The Mythical Man-Month_](https://www.safaribooksonline.com/library/view/mythical-man-month-the/0201835959/) and in it observed the following:> Adding people to a late project makes it later... usually temporarilyThis is now known as Brooks Law, and believe it or not, it is absolutely, positively real.It comes down to the following:- It takes time for new people to ramp up and become productive, while existing team members become less productive as they help the new team members get up and running- It requires more time for new people to get their bearings, which increases the amount of communication overhead- It takes time for a team to adjust how they divide work, while some work is less divisible than other workWhile Brooks Law is usually temporary, the impact can be long lived and very disruptive.Weve been working with the NLU team helping them reduce their Lead Time so they could improve time to market for new work. We found that after focusing on managing their iterations and being disciplined about how they work, they were able to reduce their Lead Time from 60 to 46 days. This surpassed our expectations as the team had recently shrunk from 24 to 19. This was the perfect time for them to accelerate how they work because they had deliverables that the team felt they were not going to be able to meet.Then, they added people...We knew that there would likely be a productivity hit to the existing team members, we simply didnt know how much.Now we do.![NLU LEAD TIME](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/brooks-law/quarter-by-quarter-lead-time.png)In Q1 the team closed 295 Issues with an average Lead Time of 46 days.During Q2 the team grew from 19 people to 26, all remote from the original team.By the end of Q2 the new, substantially larger team, had closed 356 issues. An increase, but nearly 50 issues short of the expected 404 issues (if work had scaled in line with the number of people added).The pre-existing Squad that worked the most with the new Squad slowed down the most, and the pre-existing Squad that worked with the new Squad the least slowed down the least.In short, the work to help the new team members become productive had a negative impact on the productivity of the whole team.Additionally, their average Lead Time _increased_ from 46 to 56 days, 10 extra days per issue. Of those ten days, they spent four days (on average) being blocked.The effort in getting the new team up and running can be easily seen in the dramatic increase in volume of Slack messages once the new team joined at the start of Q2.![NLU LEAD TIME](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/brooks-law/slack-messages-chart.png)What lesson can we take away from this then? Brooks Law tells us that throwing more people at a project is not the best solution if youre trying to meet a deadline.However, now that you know that adding people to a late project makes it later, you can use this to help you decide when you should grow your team. You can use it to find the best time to add new people thoughtfully and proactively...### Questions and Answers...Q: Does this mean that the acceleration weve documented previously failed or that teams should be smaller?A: No! Brooks’ Law is usually a _temporary situation_ due to the need to have the original team members spend part of their time focusing on helping new team members become productive. The decrease in productivity will reduce over time as the whole team starts accelerating, together.Q: Why publish this now?A: We keep seeing this pattern over and over again. It’s too important a lesson to keep under wraps!Q: Could there be more going on?A: Of course! Nothing is ever as simple as it seems. That being said, the data in GitHub is clear and patterns are obvious. `We’ll continue to be open and transparent on this and report back over time and let you know what we learn.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/lessons-learned/brooks-law-at-work/",
    },
    {
      "title": "Lessons Learned&#58; Getting started with User-value based Roadmaps",
      "text": "---title: Lessons Learned&#58; Getting started with User-value based Roadmaps---_Editors Note:  If you have a fine grained, KPI-based scoring system that provides you incredibly accurate prioritization that ensures your team builds exactly the right things in exactly the right order, you can probably skip this one. If thats not the case, read on!_> Our highest priority is to satisfy the customer through the early and continuous delivery of valuable software.Thats the first principle of [Agile Development](http://agilemanifesto.org/principles.html) and its nearly perfect.Nearly perfect because in the day and age of DevOps and Design Thinking and that our competitors push out new stuff every eleven seconds, youd probably want it tweaked like this:> Our highest priority is to satisfy our customers through the early and continuous delivery of valuable user experiences.Valuable User Experiences are your differentiators. User Experience should be at the heart of what we do, and must be front and center when we prioritize our Roadmaps.Hopefully youve worked through the Design Thinking Effort/Value prioritization grid process where you place your stickies to find the balance between effort and value? You know, the one in the [Design Thinking Field Guide](https://apps.na.collabserv.com/wikis/home?lang=en-us#!/wiki/W7f56e729786b_4896_9219_5d09c6265ad2/page/Download%20the%20Current%20Version):![Design Thinking Prioritization Grid](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/user-value-driven-roadmaps/design-thinking-prioritzation-grid.png)Its a great process. It can help you uncover no brainers (low effort/high value) AND figure out where your BIG BETS are.## The Problem...We had a problem though. We had a team with a list full of things that they wanted to do next Quarter, but the prioritization grid process wasnt done when they came up with the list.Weve also observed that this process isnt perfect when you have a _new idea_ that you need to insert _somewhere_ into your roadmap.So, we looked around at whats happening outside of IBM. It turns out lots of people have had these problems and there is a _very simple solution_. Here it is.## A Solution...Its a grid, right? In order to place anything on a grid, we really just need two numbers, one for effort, one for user value. We need an X, and we need a Y.So, we need some numbers! Numbers that represent effort and user value. Sounds like points. Perfect! Anytime we need to estimate anything in points, we turn group-based relative sizing.First, we picked a reference Epic of Medium effort AND user value. This was an Epic that the team completed a quarter or two ago.Why a reference Epic? Humans are simply more adept at comparing piles of rocks and saying this pile of rocks is bigger or smaller than another pile of rocks than they are at trying to figure out how big a pile of rocks should be and how much time itll take them to build a pile of rocks.This Epic was about 150 Points, so 150 becomes our Medium. Well fill in the scale using a big Fibonacci sequence. XXS = 30, XS = 60, SM = 90, M = 150, L = 240, XL = 390, XXL = 630._Dont get hung up on the point values - points are not comparable between teams! Dont even think about it..._With a reference Epic, we can compare _potential_ new work to something the team has already done.Next, we gathered a multi-disciplinary group of people from the team that completed the work.This is important, because if we are to work together as a one team, it is vital that we have the right experts at the table.Offering Managers, Designers, and Developers all take part in voting.Is that comfortable for everyone? Nope. Will some people skip voting on some things? Yep. Again, were trying to get the most out of our multi-disciplinary teams and have diverse viewpoints guiding us.It turns out this is really important for Watson because we build services _used by developers_. Our customers might be companies building smarter solutions for their customers, but the _users_ of our services are overwhelmingly _developers_. Who better to have a say in how valuable something _could_ be to developers than developers?On the flip side, many of our Offering Managers are frustrated when seemingly random mandates are put higher on their roadmaps than they want them to be? By having everyone vote on the work being put on a roadmap, OM would get to have a say in the value they believe those mandates would bring to their users (yes, that means we had to put the mandates on the Roadmap and put them through the same process).## Running the eventTwo people run the event. Blake (the teams Offering Manager) shared his screen in Aha and walked everyone through everything. George (GTD Squad) facilitated the event, acted as the vote runner running the voting, and captured the data.Next, Blake walked everyone through the reference Epic. Asked if there were any questions. Everyone was familiar with it.Blake then brought up the first Epic under consideration. He talked through the Acceptance Criteria, and then George spun up a vote using IBM Slack Polls.![Vote!](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/user-value-driven-roadmaps/rough-estimate-voting.png)For the first vote (Effort compared to our 150 Point Reference Epic) all answers were within three Fibonacci numbers, so we took the average and moved on (if you have a problem with this, go argue with [Jeff Sutherland](https://www.google.com/search?q=jeff+sutherland))For the second vote (Value compared to our 150 Point Reference Epic), we had outliers. We asked the person who voted the lowest to state their case in 30 seconds or less, then asked the person who voted the highest to state their case in 30 seconds or less. We then gave people 15 seconds to change their vote.Then, we took the average and moved on. (again, argue with [Jeff Sutherland](https://www.google.com/search?q=jeff+sutherland))Before Blake closed the Epic, he recorded the votes using our _very simple scorer_ in Aha. It divides Value by Effort and gives you a number. Well use that number soon...![Score!](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/user-value-driven-roadmaps/value-effort-scorecard.png)Repeat.When we came to an Epic that wasnt clear, didnt have Acceptance Criteria, or needed to be refined, we flagged it and moved on.We spent a few hours on a Monday doing that. We gave the team a few days to fill in the gaps with the remaining work, and then spent a few hours doing it again on a Friday.Then, we sorted the view in Aha based on the Epic Value Score.![Priority!](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/user-value-driven-roadmaps/prioritized-by-user-value-score.png)This is the first pass at prioritization.Then, we brought the team back together for an hour and Blake (the OM) reviewed the ranked list.We then asked everyone to go through and post in Slack which Epics had dependencies on other Epics. We had everyone use this simple format:![Dependencies!](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/user-value-driven-roadmaps/dependencies.png)Blake then dragged and dropped the cards around in Aha to ensure that we were aligned to Dependency. (Note, we _should have let everyone go the moment they felt done_, but we didnt make that clear, so some people ended up watching Blake drag things up and down, apologies, lesson learned).At this point, the team had a good idea what _could_ fit in the Quarter and what _absolutely wont_. How? Aha draws a nice capacity limit line in the column. How did we figure out their capacity? Their average Quarterly Capacity is their Sprint Velocity multiplied by the number of Sprints in the Quarter minus a Sprint for the holidays, and minus an allocation of points for keeping the lights on, bug fixing, etc. Filtering those reports in ZenHub sure can come in handy when trying to figure things like this out.Now we had a list of work that was prioritized first by user value, and then by technical dependencies. All that was left was to further refine priority based on business considerations (deals, contracts, corporate mandates, etc). The Offering Management Team took care of that.Again, if you have a fine grained, KPI-based scoring system that provides incredibly accurate prioritization that ensures your team builds exactly the right things in exactly the right order, well done! Share what youve learned!Most of our teams dont have that today.So, until they get there, were starting them off using a simpler system. This is giving them a place to start.Crawl, walk, run.## ResultsHows it working?So far, so good.Ten days ago, the Watson Assistant & NLC teams had 125+ Epics they wanted to put on their Q4 Roadmaps. They had no effort-based estimates, no value scoring, and they didnt know what could and what couldnt fit in the Quarter.We spent a few hours a day over the course of a few days and helped them fix that. Believe it or not, they were not feel-good sessions, they were intense.Yesterday they took the Senior Leadership Team through a Q4 Roadmap that was prioritized _first_ by low effort / high value work (using the simple scoring system), then tweaked to take technical dependencies into consideration, then tweaked a third time to deal with business concerns.Moving forward, the team has committed to doing this on a continuous basis so that these activities arent all jam packed into the end or start of a Quarter.Helping people get through stuff like this is challenging. Thats ok. Work should be challenging. Were up to the task. Well continue to work through change in an open and transparent way.Stay tuned for more...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/lessons-learned/user-value-based-roadmaps/",
    },
    {
      "title": "Lessons Learned&#58; The Transformative Power of Scrum Masters",
      "text": "---title: Lessons Learned&#58; The Transformative Power of Scrum Masters---> In 2Q 2018, the GTD Squad helped two product teams generate over half a million dollars in productivity improvement without adding to their headcount. Read on to learn how..._The First Principle of Agile Development_ - Our highest priority is to satisfy the customer through the early and continuous delivery of valuable software.## ProblemThe ability to satisfy this first principle is disrupted daily by forces external _and internal to_ an organization.High performing organizations know how to effectively respond to and manage these disruptions. They actively manage their planning process and their iterations. Thus they are able to be agile (little a) and responsive to the changing needs of their customers and to those disruptions that occur in every industry.Dysfunctional organizations struggle to manage their planning process, their iterations, and become stressed when changes occur or when they are asked to move in a new direction. We have all observed that when people are under stress, they often skip or ignore practices that are proven to make things better for themselves. What isnt universally considered is that in the drive to find a quick fix it is more costly in not just the long run, but in the short term as well!Some familiar patterns of short-term thinking include:- Squads cancel or change the frequency of the 15 Minute Daily Standups. The reason they cite most often is that they believe they will save time by meeting only two or three times a week. This behavior results in longer queues and issues staying blocked longer. Those twice weekly meetings take much longer than the Daily Standup and additional meetings are added to solve the problems created by longer queues and resolving blocked issues.- Squad Members, looking for shortcuts, skip writing Unit Tests but then spend more time debugging the work theyre trying to deliver.- Product Teams skip refinement sessions only to find that they have unwieldy, unprioritized backlogs leading to an inability to understand when they can achieve their commitments.We found that these are not isolated incidents and, sadly, have become far too common. Squad Members often find themselves in situations where they have work on features, unplanned work (Pager Duty/bugs), and cross-product initiatives needed to comply with one regulation or another all competing with each other during a finite window of time.This dysfunction and lack of iteration management results in Squads living day-to-day under the kind of stress that leads to short-term gain thinking. This also means that individuals are less satisfied with their work and the contributions they are able to make because they cannot seem to get off the hamster wheel of constant bombardment.When the GTD Squad observes these behaviors and dysfunctions we ask always ourselves, How can we help prevent this short-term gain thinking?## Hypothesis> _If we focus on Iteration Management as a discipline, and provide education and coaching, then we can reduce short-term gain thinking and accelerate our teams._First we had to define what _minimum viable process_ is needed to actively manage iterations. We defined the MVP as follows:- Who manages Iterations? The Scrum Master.- Leadership must identify one person on Each Squad to act as a Scrum Master    - This must be someone from within the existing team[``](#footnotes) who will be responsible for the iteration process    - They would receive education and coaching from the GTD Squad    - If one Squad Member per Squad could not be achieved, They should work with no more than two Squads- All Squads must hold 15-Minute Daily Standups (to rapidly surface and solve impediments)- The Product Leadership Team must groom the backlog multiple times a week- The Squad must do Retrospectives at the end of each SprintSecond we developed a plan to provide the education and training, identified the metrics to test our hypothesis and measure progress, and used that data to identify the teams we would work with.In order to determine what to measure, we turned back to the first principle of Agile Development and selected delivering value to customers (Lead Time) as our primary measure of progress.Lead Time in Lean Manufacturing is traditionally thought of as the elapsed time between an order being received and that order being available to a customer. In GitHub-land, were using the elapsed time between Issues being created and Issues being closed. This raw throughput is easily measured and is universally comparable across teams[``](#footnotes).## DataIn mid-Q1 we pulled data from GitHub and ZenHub to determine Lead Time for our Product Teams.After reviewing everyones Lead Time averages, we picked two Product Teams to run our experiments on and another to act as a control.## TeamsWho were the teams?### NLU- The Natural Language Understanding Team (NLU) is a smaller Product Team with a few Squads that had seen a reduction in team size due to attrition during the initial measurement period.- They averaged 92 days for their Lead Time for more than half of their issues![NLU Q1](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/lead-time-results/nlu-q1.png)### KG- The Knowledge Graph Team (KG) is a one Squad Product Team that was constant in size during the initial measurement period.- They averaged 71 days for their Lead Time for more than half of their issues![KG Q1](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/lead-time-results/kg-q1.png)### Control- Our control was a team comprised of multiple Squads. Team size was not constant, but did not change as dramatically as NLU did.- Our control team did not have Iteration Managers in place, they did not perform regular Squad Backlog Refinement, nor did they ensure 15 minute Daily Standups were the norm for all Squads[``](#footnotes).- They averaged around 90 days for their Lead Time for more than half of their issues## ActionsBetween Mid-Q1 & Mid-Q2, we did the following:- Created Playbook content covering Iteration Management- Ran a [GTD Webinar on Iteration Management](https://pages.github.ibm.com/the-playbook/getting-things-done/replays/#iteration-management)- Worked with the the NLU and KG Tribe Leader to identify existing team members to work as Scrum Masters on NLU & KG- Provided focused training, education and coaching on Iteration Management with NLU and KG Scrum Masters:    - Ensured 15 Minute Daily Standups were the standard for all Squads    - Scrum Masters implemented recurring retrospectives    - Scrum Masters worked with OM and Dev Leaders to groom the backlog multiple times per week    - Coached the Scrum Masters to inspect the boards daily looking for bottlenecks## Day to DayScrum Masters used their boards daily to uncover:- Queuing Problems    - Problem: Issues were waiting for Code Reviews too long - ideally 1-2 days        - Fix: They worked across all Squads to ensure that squad leaders identified issues that required reviews during their 15 Minute Daily Standup    - Problem: Issues were waiting for OM & Dev Leaders to sign off for more than half a sprint on average        - Fix: OM & Dev Leaders review and sign off on issues continuously throughout the sprint    - Problem: Issues were waiting for more than a sprint to be reviewed, sized, and prioritized        - Fix: Product Leadership Team meets throughout the week to review, prioritize and then have the Squads size the work- Blocking Problems    - Problem: Issues from one Squad were blocked waiting for another Squad to do something        - Fix: Squad Leaders brought their blockers to other Squads dailyThe daily impact of these changes to individual Squad members were minimal. Our Scrum Masters spent approximately 50% of their days looking for, and helping to break, bottlenecks.## ResultsIn Mid-Q2, we pulled data for the previous 90 day window and compared against Q1[``](#footnotes).These are the results...### NLU (Results)- NLU reduced their Lead Time from 92 Days to 66 Days - a 28% productivity improvement- They were able to deliver nearly the same number of Issues in both time periods, even though they had a dramatically smaller team[``](#footnotes)![NLU Q2](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/lead-time-results/nlu-q2.png)### KG (Results)- KG reduced their Lead Time from 71 Days to 27 Days - a 62% productivity improvement![KG Q2](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/lead-time-results/kg-q2.png)### Control (Results)- Our control teams Lead Time was virtually unchanged, a difference of one day.## Show me the moneyLets put some dollar figures to this data. We reached out to HR to ask for a representative dollar figure that we could use in our analysis. Heres what they provided:- Representative Squad Member Salary + Fringe: $600 a dayNow that we know the daily cost we can derive the value of the Lead Time Reduction:| Team | Team Salary per Day  &nbsp; &nbsp; &nbsp; | Lead Time Change | Value of Lead Time Improvement ||---|---|---|---|| NLU (19 Members) | $11,400  | 26 Days | $296,400  || KG (8 Members) | $4,800 | 44 Days | $211,200  |We had hoped for maybe a 10-15% improvement of Lead Time of the teams we focused on and were surprised that the results went way beyond our expectations.When we shared this with our experiment teams, they were blown away with their results so far and are continuing to seek out ways to further reduce their queues and break those bottlenecks. The NLU team has been able to recover from their attrition and has added another Squad. The KG Squad recently asked what to do when they had nothing left to groom!Oh, and that control team? Were starting to work with them in Q3. Well let you know how they do...## How to do thisWe suspect you are now wondering how you can achieve the results above. Well its as simple as follows:- Leadership must identify one person on each Squad to act as a _Scrum Master_    - This must be someone from within the existing team[``](#footnotes) who will be responsible for the iteration process    - They would receive education and coaching from the GTD Squad    - If one Squad Member per Squad could not be achieved, They should work with no more than two Squads- All Squads must hold 15-Minute Daily Standups (to rapidly surface and solve impediments)- The Product Leadership Team must groom the backlog multiple times a week - daily is preferred- The Squad must do Retrospectives at the end of each SprintSee the [Process Acceleration Page](https://pages.github.ibm.com/the-playbook/enterprise-agile/practices/process-acceleration/) to dig deeper on Lead Time and how to measure your projectsBTW, If you think this all just sounds like doing some basic Agile Practices with discipline, youre not wrong. Thats essentially what were doing and the Squads that are doing this are reaping the rewards. You can too.## Footnotes>Note: Since writing this, weve moved from _mid-quarter reporting_ to _end of quarter reporting_. If you see Lead Time data on Watson service teams now, it may not line up with whats published here due to the difference in reporting windows...&nbsp;>Another Note: The initial version of this page used the IBM-only term Iteration Manager in place of Scrum Master. Why the change? Most people were giving us a blank stare every time we said Iteration Manager but then said oh, ok when we replied that an Iteration Manager is a Scrum Master. Weve decided to throw in the towel on being good corporate citizens and just use the same role title that the entire rest of the world uses...`` Why someone from the existing Team? Why not just hire a project manager? Scrum Masters should come from within because they have skin in the game. There is a shared sense of ownership that you just dont get from someone thats not actively delivering on the project.`` Why didnt we use Story Points? Points are unique to the Squad and not comparable. Why? Points are about _effort_ not _time_. As our Squads are staffed with people, not robots, the amount of effort it takes one member is not the same as another. Its also true that for those teams that use Aha, our Lead Time numbers may not be perfect as we arent measuring the elapsed time from the creation of an Aha Idea to the work being available in Production. Weve had to rely on GitHub because the Aha lacks the rich, open API that GitHub offers which provides us access to the data...`` How could we let a team suffer? Why didnt we help them as well? We didnt prevent our control team from improving, we simply found a team that we were unable to work with that Quarter. We are a _very_ small Squad and simply dont have the bandwidth to help everyone at all times.`` We are not measuring states that are purposely long-lived (Roadmap / Epics / Parking Lots / Someday / Ideas/ etc).`` We believe they would have accelerated even more if they had not had a smaller team in the second time period. Were not saying overall team size should be smaller to speed up, though Squad size does matter. Theres a ton of research that shows the perfect Squad size is 5 people. Check out [Scrum - the art of doing twice the work in half the time](../../../getting-things-done/reading-list/#scrum-the-art-of-doing-twice-the-work-in-half-the-time) for details.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/lessons-learned/iteration-managers/",
    },
    {
      "title": "Lessons Learned&#58; One Week Sprints",
      "text": "---title: Lessons Learned&#58; One Week Sprints---## Playbook Case Study: Weekly sprints (Not as crazy as it sounds)So does this sound like you? Its the start of your sprint, you have planned out your stories and everyone on the team knows what to do. You get half way through your sprint and then bam! You suddenly receive news that your team has another top priority item that needs to be incorporated into your already well planned sprint. So what do you do? You do what every caring IBMer does, you add it to the plan and work late and over the weekend to get it all done. Then you start the cycle all over again, but youre not bitter, no its fine to miss out on your sisters wedding or nephews bar mitzvah, right? How would you like to avoid all of this and enjoy your weekend with your boyfriend and his new puppy? Have we got your attention, great!This is where the Watson End to End Experience Squad was in the Spring of 2017 when they went from constant re-planning to a smooth as silk existence. Heres how we did it.## ContextThe Watson End to End Experience Squad (flows right off the tongue, doesnt it) had an upcoming launch of the Watson Developer Console with a huge backlog of technical priorities and they were in a bind with no idea how they were going to meet the looming deadline. Now, I know youre thinking, wait, Agile isnt supposed to have deadlines, how can this still be a thing? And then we exchange a look and laugh and laugh. The reality is businesses will always have deadlines and Agile does not eliminate them but what it can do is find a way to respond to changing business needs, you know, by being agile...see what I did there. In addition to the impending deadline, the team had recently lost a number of resources but there was to be no change to the existing launch schedule. So while their leaders worked to leverage additional resources from the Bluemix organization, the Squad was stuck. It was clear that something needed to change, and while there were many opinions, there wasnt a clear path forward.The team was struggling to identify their capacity and to be predictable about what they could get done in what time frame. They also were frustrated by the amount of meetings and nothing seemed to be improving. Thats when they called for outside help.Unlike our traditional Product organizations, our E2EE Squad didnt have an Agile Coach working with them so a Watson coach was brought in to help try and turn things around. Because this was a joint effort with the Bluemix organization and they had an Agile coach as well, we added not one, but two Agile coaches. On the very first day of the collaboration, we held a retrospective, which uncovered several bottlenecks that were impeding the teams ability to improve.  The Squad quickly came up with a number of experiments to try, including one that was unsurprisingly controversial.Lets try doing weekly Sprints for a while as we work through some of these big problems someone said.Thats just bananas and crazy talk, man. We cant do that, pshaw, many said, well not really because who talks like that. Regardless of the exact wording there was some concern that it was too fast a pace or that the team wasnt mature enough and that opinion was also shared by the Agile coaches. Who really should know better but we are people not robots.## Heres how it workedStill, as an experiment, the team decided that being agile meant that it was worth a try, if only for a short while.The Agile coaches worked with the Squad to adapt the standard two week Sprint Calendar (as found in the Playbook) and started the experiment.It was immediately apparent that things were getting better. Fast. Whodathunk.We scheduled a 15 minute daily standup and worked hard to actually keep it to 15 minutes. Some days were better than others, but all days were better than before. Even more helpful we were keeping ourselves and each other laser focused and more of our conversations stayed on topic as a result.We moved to a Monday - Friday schedule. Some protested because they were worried about deploying on Fridays and having to work the weekend. Thats when we all agreed that Sprints were about alignment and course correction. In the Cloud era, we can deliver whenever, were not tied to the last day of the Sprint and ideally we should decouple deployments from the actual Sprint schedule. One mechanism you can use to separate the two is with mid-week Release Trains to prevent Friday deployments. Get into a regular (weekly) cadence of deploying the things that are done. If you follow these good practices you can make sure you make it to Carmens next recital by not delivering on the last day of the Sprint. Carmen can send her thank you note to us later.On the last day of the Sprint, we added three ceremonies; Playback, Retrospective, Sprint Planning. All done by noon.One benefit of a Mon-Friday schedule is that each and every Friday, everyone on the Squad feels like theyve accomplished something and leave for the weekend feeling a sense of satisfaction that they rarely experienced before. This was a monumental improvement. There is a lot of research that supports that continual progress in meaningful work is the highest motivator of employees and having one week sprints illustrates that more than any academic paper ever could.After the initial push was done, the Squad paused and asked if we should go back to two week Sprints. The answer was a resounding NO! The Squad was in a groove now and moved from hypothesis to experiment to validation so lets keep on keeping on.## Heres why weekly Sprints are not bananasThere were several key areas that switching to weekly sprints improved significantly- Communication got better because we were speaking regularly    - Frequent retrospectives it helped us come together quicker as a team    - When designs changed regularly it was easier to incorporate design changes iteratively- Planning got better because communication was better- Time spent in meetings was reduced and meetings were more productive- Respond to change quickly    - Weekly Sprints allowed us to re-prioritize quickly. It is easier to disrupt a large story in weekly sprints to allow us to pivot to newly evident priorities    - Because of frequency, its easier to re-establish misalignments organizationally, with the cost of a bit more overhead## Here we are todayMonths later, the Squad is still doing weekly Sprints. Morale is better than ever, so much so that they decided to take a workation together and went to Hawaii to work and play.That is amazing.More than anything, everyone now believes that moving to Weekly Sprints was the catalyst the Squad needed to reach maturity.### We want your Case Study!Were busy collecting case studies from around the organization to share here. Have a success story? [Submit it here](https://github.ibm.com/the-playbook/the-playbook.github.ibm.com/issues/new?title=New%20Case%20study%20idea).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/lessons-learned/one-week-sprints/",
    },
    {
      "title": "Lessons Learned&#58; Squad Camp",
      "text": "---title: Lessons Learned&#58; Squad Camp---## OverviewThis is the best message anyone working in an acceleration role can get.Our team in Denver came in through acquisition a few years ago, and since then have bounced around quite a bit. Theyve worked (and continued to support) the APIs they built before they came here. Theyve worked as a Product Team, as part of another Product Team, as small service teams, and everything in between.After a recent re-org, they now found themselves as one of the key services in the new Knowledge and Language Foundation Tribe. Their new Director Ari, had reached out because they were having challenges determining whether or not they could achieve certain goals. The team was stuck.The team needed help getting to the point where they could start predicting when they could get things done.While this is written in the style of a how to run a Squad boot/reboot session guide, everything here is pulled directly from what we did in Denver...## Fact FindingFirst, we needed data. Things we collected included:- Planning and Tracking repos    - How many / where are they / are they connected?- Links to Release Plans- Links to Aha Product Roadmap- Squad Details:    - Number of Squads    - Name and Leader of each Squad    - Size of each Squad    - What each Squad works on    - Are they co-located / distributed?    - What do they already do?        - 15-minute Daily Standup?        - End of Sprint Demo?        - Retrospective every Sprint?        - Sprint Planning?        - Squad Backlog Refinement?        - Other ceremonies?    - Execution Data:        - Burndown / Velocity / Burnup for each Squad        - Burndown / Velocity / Burnup for the Product        - Lead / Cycle / Process Time for each Squad        - Lead / Cycle / Process Time for the ProductWhat did the fact finding uncover?- The Squads were still figuring out their velocity after reforming- The Squads werent using GitHub and ZenHub data to influence their decisions or priorities- The Squads were stuck when it came to big picture planning## Squad Camp Logistics- 1.5 days    - Day 1 - Product Leadership Team (afternoon)    - Day 2 - Squads (all day)    - In-person only    - Laptops off- Supplies: Sticky Notes, Sharpies, Whiteboards, Walls- Travel: One Accelerator, arrive at site by 1PM Wednesday, leave Friday AM (or Thursday late PM if possible)## Squad Camp - Leadership TeamThe Product Leadership Team and I spent the afternoon together the day before Squad Camp. Agenda:### Aha / GitHub / ZenHub HygieneGiven that every report we count on requires a few things to be set for _each issue_ , we reviewed the following:- Switch to Closed Issues (using the GitHub Issues Tab)- Using the filter `Issues with no Milestones`, review how much work isnt showing up in Burndown / Velocity Reports- Point out the number of issues that dont have points assigned- Using the filter `Issues with no Assignee`, review how much work is being done without being assigned. This can lead to overloaded and imbalanced Squad Members### Iteration ManagementUsing the data collected before the working session, review the gaps in Iteration Management:Scrum Master role is to move boulders and carry water for the SquadsKeep a watchful eye on the board (every morning)Look for bottlenecks - ask how you can help break themLook for movementCheck for Hygiene, fix if needed (assigning closed issues to current Sprint)Understand the relationship between Aha and GitHubWalk through the Aha Epics and look for LinksEnsure Aha Labels in GitHub are up to date (Aha: In Progress for example)Work with Leadership Team to determine the Aha state changes that they need (OM must be involved)Release Reports were not fully understood, covered how to use them including the difference between completed / estimated / unestimated portions of the Release Report## Squad Camp![Squad Camp Denver](https://pages.github.ibm.com/the-playbook/resources/images/getting-things-done/case-studies/squad-camp/squad-camp-denver.jpg)### Coffee- First things first, everyone needs coffee. We took a 5 minute walk to the Starbucks behind the building.    - If there isnt a Starbucks nearby, work with the local product leadership team to arrange for coffee to be available.### GitHub / ZenHub Hygiene- Ask the room _who_ the boards are for. In Denver, the room overwhelmingly pointed at the Product Leadership Team. They seemed stunned to learn that the boards are actually for them!- A well-managed board allows you to move from being told what to do and when to do it, to being able to tell what you can and when you can. It puts you in the drivers seat and is the key to self-organizing Squads...- Follow the same pattern used for the Leadership Team the day before### Kanban overview- Using a Board (or Wall) and Sticky Notes, build a Kanban board on the fly    - Start with New and Closed    - Describe the flow of work across an imaginary assembly line add column headers as you do    - Tell everyone you don’t think they are factory floor workers! But there are parallels that can be drawn between any kind of manufacturing process - even Software Manufacturing.    - Start adding “orders” in the new column, show how the Leadership team will review and prioritize and put in the backlog (this one is from our most important customer, it goes to the top).    - Assign the work to three Squad Members (write each first name on each sticky)    - Pull work, add WIP Limits to the columns    - Add a review column (if you havent added one)    - Shipping column    - Closed Column    - Animate the cards as they flow through the assembly line- Finish by holding up your Starbucks cup and explaining how they just experienced Kanban at Starbucks (if you went to Starbucks)- Recommend that everyone read the book Kanban by David Anderson### Standups- Gather everyone together by Squads    - Note - in Denver, all Squads are co-located. If this isnt the case, bring people in via Zoom (coordinate with Product Leadership Team in advance)- Bring up their board, and have them run a Standup (taking notes- Once they finish, re-run their Standup, showing them tweaks to optimize, examples from Denver included:    - Always start from the Closed Column and walk backward    - What they did yesterday, what theyre doing today    - Ensure that each person ends by answering the question what blockers do you have?    - Always mention the Issue Number    - For large Squads - filter the board accordingly (by person if needed)    - Show places where Issues are in the wrong column and live correct    - Show where Issues arent assigned to a person / milestone / no estimate        - Correct live on the fly### Agile in two minutes- Ask the team what Agile means to them (notice the less-than positive comments)- Ground the room around the that the first principle of Agile is what its all about:> Our highest priority is to satisfy the customer through the early and continuous delivery of valuable software.- Unpack the statement for the team.    - Our customers needs are our highest priority    - Deliver early - talk about MVP (I used Zappos as the example)    - Continuous Delivery - point out that the CD movement takes its name from that line. Ask whos read Continuous Delivery. In Denver, not a single hand went up.### Lunch- In Denver, everyone went out for Lunch.- While you are en route to wherever you have lunch, find out if the team eats at their desks or if they eat lunch together.- Sharing a meal together is a great team building experience### DevOps Culture Review- In Denver, we then watched excerpts from the recent Blueprint webinar where the Watson Workspace team reviewed their DevOps culture- - Download the video and use QuickTime to play it at 1.5 speed to save time- Pause periodically to point out awesome things, ask for questions- Write down stickies and put them on the wall for blockers that the team has to achieve the same levels of success### Product Team TimeTo help build a sense of shared ownership _between the Squads_ for their Product, we looked at each Squads workflow and worked to design a workflow that would work for All Squads.This gave them the opportunity to review each others needs, creating a sense of empathy for what each Squad goes through from Sprint to Sprint.- We did the exercise using sticky notes & sharpies- Everyone first worked out _their_ perfect workflow- Then as a Squad came together and found common ground- Then as a Product Team we came to agreement for nearly the entire workflowIn the end, there were a few few areas around deployment that varied - the team promised to continue working through it...### The Playbook- Throughout the day, we used the Playbook as guidance and reference material- Showcase the Reading List page as it became clear that there were a number of _key_ books that have come out over the last few years that the team had no exposure to### In ClosingWe wrapped with reviewing the day and found owners for the experiments that came up during the Retrospective and throughout the day.In addition to product-specific experiments that the team will be trying over the next few Sprints, they came up with some site wide experiments that theyll be trying...- The team will be starting a book club and work through the suggested reading list as found in the Playbook- The team will be use part of Friday afternoons to work on Patents- Everyone will try GitHub Desktop (they all were quite surprised at GitHub Desktop during one of the sessions)- The team will be re-arranging their meeting times to better allow for big bocks of time to focus.    - Initial goal: everyone has at least 90 minutes of uninterrupted time a day.    - Long term goal: everyone has two 90 minute blocks of uninterrupted time a day.In short, if you dont actively manage your iterations, you cant predict when you can get things done...P.S. One fail: We neglected to take a Team Picture at the end of the day. Its a funny thing, but taking a team picture is a positive way to be able to capture the feeling of the day and remind a team that they need to take time to improve...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/lessons-learned/squad-camp/",
    },
    {
      "title": "15 Minute Daily Standups",
      "text": "---title: 15 Minute Daily Standups---Every morning, spend 15 minutes with your [Squad](../../organization) to align and break bottlenecks. Standups are daily planning events. Standups are not status meetings...Teams that are employing Agile at Scale, will hold Cascading Standups each morning so that Scrum Masters can raise blocking issues to the attention of their peers, and to their Leadership Team### 15 Minute Daily StandupWhats the difference between a 15 Minute Daily Standup and a 15 Minute Daily Scrum? Standing. Thats it. Seriously though, you and your Squad should stand. Why? Standing meetings are shorter.The Scrum Master runs the Standup- Hold the Standup in the same place and at the same time every day.    - If remote, start WebEx 5 minutes before the start- Come to Standup with ZenHub ready to go with:    - One tab with the Board open (filtered by Squad & Milestone)    - One tab with your Burndown open- Ask each Squad Member The Three Questions    - What did you do yesterday?    - What are you doing today?    - What is blocking you?  > ProTips:>>- The answers to each question should be simple and short. We need to know the Issue Number, the Column that its in, and a few things, not details. We need to trust the Squad Members.>- Its often helpful to work off your Kanban Board and use the columns in reverse order, e.g: `Yesterday I closed #42, today Ill be reviewing #27 then start working on #33. Im blocked by #22 as its still in the backlog`>>- If someone brings something up that starts a technical discussion use the phrase Parking Lot and ask the people to continue the discussion after Standup.>>- You can use the Standup to help keep the board up to date. If someone says theyre working on something in the Sprint Backlog column, drag it to In Progress to update it.>>- Do your organization a favor and make sure that each member is working on the Issue with the highest priority, and that issue is the closest to the top of the pipelineReview Burndown & Highlight Bottlenecks- Walk through the Burndown, show where you are.- Point out bottlenecks in the board.> ProTip: We see bottlenecks in the `Review` columns all the time. Ask your Squad to review those PRs on a daily basis and youll break those bottlenecks with ease.### 15 Minute Daily Scrum Master StandupThis is a Standup with your fellow Scrum Masters. You are here to surface blockers and find out if your Squad is blocking others.- Who: All Scrum Masters- Hold the Standup in the same place and at the same time every day.    - If remote, start WebEx 5 minutes before the start- Should be right after the 15 Minute Daily Standup- Dont be late.- Bring blockers and only blockers- Each Scrum Master answers The Three Questions    - What is your Squad blocked by?    - Are you, or will you be, blocking other Squads?    - What does your Squad have that needs the attention of shared resources (Designers, Technical Writers, End to End Integrators)- As group, decide if escalation needed    - If the blocking issue can be resolved by the Scrum Masters working together, do that.    - If the blocking issue cannot be resolved by the Scrum Masters working together, then bring the issue to the Daily Director Standup### 15 Minute Daily Director Standup (Optional)Scrum Masters attend this event only if they are blocked, or are blocking someone.  - Who: Dev/Design/OM Directors, 1st line managers + Blocked/Blocking Scrum Masters- Scrum Masters bring blockers and only blockers- Attending Scrum Masters answer The Three Questions    - What is your Squad blocked by?    - Are you, or will you be, blocking other Squads?    - What does your Squad have that needs the attention of shared resources (Designers, Technical Writers, End to End Integrators)- As a group, decide if escalation needed    - If the blocking issue can be resolved by the Directors and their reports, do that.    - If the blocking issue cannot be resolved by the Directors and their reports working together, then raise the issues to the Segment Leadership Team…> Signs of Success>  Your Squad Members spend more time Designing, Coding, and Deploying, than they do sitting in Meetings (measure this).>  Blocking issues are brought to the surface daily.>  Temporary Pair Programming increases as Squad Members help each other through blocking issues.## Questions and AnswersQ: Is there a video about Standups?A: Yep, heres a pretty good [(4 minute video)](http://agileacademy.w3ibm.mybluemix.net/standalone/daily_standup_meeting/) from the IBM Agile Academy about how to run your Daily StandupQ: We cant get it done in 15 minutes!A: If you cant get through every In Progress Story in 15 minutes, check the following:- Is your group is too big?- Have you taken on too much at once?- Are people straying from the yesterday / today / blockers format?Q: My Squad is in multiple timezones, how do we deal?A: Reform your Squad to align by timezones. No? Alternately, you can try running your Standups in Slack:- This is a _good_ way to align a non-colocated large team, especially one split across multiple time zones (though you should really work on transforming into a Squad...)- To make this work, the squad needs to commit to post and then read everyones status every single day.- Paste the following into your Squads Slack channel:```/remind # ```@here - Standup Time!Please use this format:#standupY: What you did yesterdayT: What youre doing todayB: List the blockers/impediments you have```in this channel at 9:45AM every day```- Moving forward, Slackbot will call you into your Squad channel and ask for an update.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/daily-standups/",
    },
    {
      "title": "Product Roadmap Refinement",
      "text": "---title: Product Roadmap Refinement---Every day, the Product Leadership team comes together for Product Roadmap Refinement. Heres the flow: Blockers Epic Refinement     Review, Discuss     Rough Estimates with Planning Poker (Effort & Value)     Prioritze Repeat> Who: Offering Manager, Development Leader, Design Leader, Architect - Squad Leaders / Technical Leaders should attend>> When: Daily either at the start or near the end of the day## Blockers- First the Product Owner asks Squad Technical Leaders for blockers    - This should focus on any Epic that Squads cant start working on (unclear requirements, blocked by something external, etc)    - Figure out who owns the problem and move on.## Epic RefinementAfter blockers are dealt with, the Product Owner presents (or asks someone to present) an Epic. An Epic is a body of work that will take a Squad multiple Sprints to complete.### Review, Discuss- Everyone reviews the Acceptance Criteria and the Definition of Done- The Product Leadership Team asks questions, provides feedback, any concerns are written down in the Aha item- This is time-boxed to 5 Minutes per Epic- The Product Owner holds an informal vote (thumbs up/down) on whether or not the group feels there is enough information to proceed### Rough Estimates with Planning Poker (Effort & Value)All estimates are wrong, remember that before proceeding...If there is enough information to procede, the Product owner runs two rounds of Planning Poker (first for Effort, second for Value)Follow the [guidance found here](../../practices/estimates-and-reports/#planning-poker) on how to run an effective Planning Poker session...> Pre-req: The Development Leader provides a medium effort/value Epic the Team has completed in the last six months- Remember, the estimate of the effort and value of the new Epic is relative to the anchor Epic> Aha Users: If you are using Aha, then the agreed upon Effort Estimate is added to the Aha Epics Estimate field. The Value and Effort scores are entered into the Epic Scorecard (which frustratingly doesnt pick up the Effort Estimate, sigh...)### Prioritize- The Product Leadership team prioritizes the sized Epics and assigns them to the appropriate Quarter in Aha- If the Epic is going to be worked on in the next Quarter, send it to ZenHub and have the Squads start deconstructing the work.## Repeat- If you cant get through all of the items that need to be reviewed, continue at the Product Roadmap Refinement Session on the next day, do not extend the event.- Forcing the time-boxing will prevent the Product Leadership Team from getting into the weeds.> Signs of Success>  Squads have the information they need to understand their work.>  Product Leadership Team is able to adjust priorities continuously to react to changes in the market>  Offering Management, Design, and Engineering are on the same page.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/product-refinement/",
    },
    {
      "title": "Agile Calendars",
      "text": "---title: Agile Calendars---Life moves pretty fast. Agile helps teams keep up. To allow our teams to welcome changing requirements, [even late in development](http://www.agilemanifesto.org/principles.html), we work in short iterations called Sprints. [(4 minute video)](http://agileacademy.w3ibm.mybluemix.net/standalone/iteration_zero/)- 1 or 2 week Sprints are the key to enabling course correction- On the last day of the Sprint, we have a Demo, Retrospective and then we Plan for our next Sprint- Ensure your Product Team minimizes regularly scheduled meetings by adopting a Minimal Meeting Load## Two Week Sprint CalendarSince _most_ teams work in Two Week Sprints, you can copy the calendar used by the Watson Assistant Team to get you started. Even with some regular activies like dealing with Email/Slack/Calendar, eating lunch, and working on Techincal Vitality activies, you still have a calendar designed to give you big blocks of time:Week One:Week Two:Ensuring your Squad Members have big blocks of uninterrupted time is vital to allowing them to get into states of deep work or even achieving flow.Squad Members:All Squad Members attend the Daily Standup, Daily Backlog Refinement, End of Sprint Demo, Squad Retrospective, and Sprint Planning.In addition to these, Scrum Masters also attend the Daily Scrum Master Standup, and (optionally) the Daily Director Standup.Some Squad Members (Technical Leaders) also attend the Daily Product Roadmap Refinement.Product Leadership Team Members attend the [Daily Product Roadmap Refinement](../product-refinement), the mid-Sprint Design Review, and the End of Sprint Demo.Have an emergency on a Tuesday? Shorten lunch, skip refinement, and let Slack and email go unanswered for a while.## One Week Sprint CalendarFor those few teams that work in One Week Sprints, they look just like the second week of a two week Sprint. Since youre refining and planning more frequently, the amount of time you need to dedicate to refining and planning is typically reduced.> Signs of Success>  Your Squad Members spend more time Designing, Coding, and Deploying, than they do sitting in Meetings (measure this).>  Your Velocity goes up over time (look for an upward sloping Velocity Report)>  You no longer hear Squad Members state theyre in too many meetings during your Retrospectives",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/agile-calendars/",
    },
    {
      "title": "Sprint Planning",
      "text": "---title: Sprint Planning---On the last day of the Sprint, hold a Demo, a Retrospective, then Plan your next Sprint> Who: Each Squad> When: Last Day of the Sprint> Get started with this  [(4 minute video)](http://agileacademy.w3ibm.mybluemix.net/standalone/iteration_planning/) from the IBM Agile Academy about how to Plan for your next SprintAgile doesnt mean we dont plan. Offering Managers do an incredible amount of work to discover and define what we should build. Roadmaps are created that help guide us to our destination.Sprint planning is our GPS to get us there and deal with the roadblocks along the way.- Before each Sprint starts, look at what you accomplished last Sprint and assign a similar amount of work to your upcoming Sprint.- Estimation tools like [Story Points in Zenhub](../../practices/estimates-and-reports) allow you to apply T-Shirt style sizing to your work.- Ensure you have a multi-disciplinary view of your Sprint. Everyone on your Squad attends and helps guide.> ProTip: Theres immense value in holding these three ceremonies on the _last day of the Sprint_ because it sets up a psychological line in the sand that helps our Squad members feel Done. This may sound trivial, but there have been long term studies that show that the best way to motivate people is by facilitating progress and enabling small wins. See: [The Progress Principle](https://www.safaribooksonline.com/library/view/the-progress-principle/9781422142738/)Remember, Continuous Improvement is what we strive for...> Signs of Success>  Squads that plan for each Sprint have less re-work, get interrupted less, and get things done>  Squads that plan consistently become predictable. Predictable Squads are valued higher in the organization",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/sprint-planning/",
    },
    {
      "title": "Retrospectives",
      "text": "---title: Retrospectives---On the last day of the Sprint, hold a Demo, a Retrospective, then Plan your next Sprint> Who: Each Squad>> When: Last Day of the Sprint>> Get started with this  [(3 minute video)](http://agileacademy.w3ibm.mybluemix.net/standalone/retrospective/) from the IBM Agile Academy about how to run a RetrospectiveRetrospectives allow us to learn from the past so we can improve our process for the future. They are the most important Agile practice that you can employ. When practiced well, retrospectives help a Squad gain the ability to make their own lives better. There are a variety of ways to run retrospectives, heres a popular format to use. On the last day of the Sprint, get together with your Squad for 45 minutes and ask yourself:     What has gone well? (10 mins)     What hasnt gone well? (10 mins)     What are some experiments we can try to make things better? (20 mins)     Decide which experiment to try during the next Sprint (5 mins) Put the experiment in your backlog for the next Sprint. Repeat, each and every Sprint.Hold your retrospective after your End of Sprint Demo and before you plan for you next Sprint. This allows you to have insight gained from the end of sprint demo, and it allows your experiment to be added to your Sprint backlog.The best way to run a retrospective is by gathering everyone into a room and using Sticky Notes.![Sticky Note Retro](https://pages.github.ibm.com/the-playbook/resources/images/agile/play-by-play/retrospectives/sticky-note-retro.jpg)## Tools for Distributed RetrospectivesIf a Squad isnt co-located, or you want to hold a Whole Team / End of Project Retrospective, youll have a much easier time using one of the following tools...### Slack[Slack](http://ibm-watson.slack.com) is a non-obvious choice but actually works incredibly well, _especially for large, distributed teams_.- Use the channel that your Squad/Product/Project already uses- Timebox your Retrospective (an hour for a Squad, a day for a large group)- Divide the chat into sections using Slack Threads to keep the Retrospective focused    - Working Well Section:    ```> :thumbsup:  Working Well```    ```> Please list things that have been working well, they can be technical, process, cultural, nearly anything at all. Use reactions ( :thumbsup: / :thumbsdown: / :clap: / etc) to show how you feel about anything in this section. Try and use complete sentences so that we can look back and understand everything clearly...```    - Things that didnt work well:    ```> :thumbsup:  Working Well```    ```> Please list things that have been working well, they can be technical, process, cultural, nearly anything at all. Use reactions ( :thumbsup: / :thumbsdown: / :clap: / etc) to show how you feel about anything in this section. Try and use complete sentences so that we can look back and understand everything clearly...```    - Experiments you can try:    ```> :alembic:  Experiments```    ```> Please list some experiments the team can try that you feel could make things better. Reference items from the feedback already captured and well use reactions ( :thumbsup: / :thumbsdown: ) to vote on which of the experiments the team will try. Try and use complete sentences so that we can look back and understand everything clearly...```- Use 👍 and 👎 to provide rough counts for how many people agree/disagree- Use the counts to determine where to focus your experiments- Use @mentions to assign owners, and transfer your experiments to GitHub for execution...![Slack Retro](https://pages.github.ibm.com/the-playbook/resources/images/agile/play-by-play/retrospectives/slack-retro.png)> ProTip:> Start the Slack Threads yourself and monitor the channel during the duration of the Retrospective. Youll want to encourage people to contribute to the threads so that the content is compact, easy to find, and helpful.### MURAL[MURAL](http://mural.ly) is the obvious choice for running distributed retrospectives, but can be challenging for those that are not familiar with it.- Divide your board into three columns- Drag and drop stickies into the appropriate columns- Group together, look for patterns- Use voting to decide which experiments to try first![Mural Retro](https://pages.github.ibm.com/the-playbook/resources/images/agile/play-by-play/retrospectives/mural-retro.jpg)### GitHub[GitHub](http://github.ibm.com) is the place to track your experiments. Treat improvement as part of your ongoing work.And remember, you dont have to hold a retrospective to improve. Every single one of us can (and should) be asking ourselves how can we get better? every single day...> Signs of Success>  Squads that hold Retrospectives regularly build a culture of Continuous Improvement>  Squad Members are happier when they can make their own lives better>  Squads that improve their own lives become examples for others to do the same",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/retrospectives/",
    },
    {
      "title": "Whole Team Standup",
      "text": "---title: Whole Team Standup---> Who: Squad Leaders> When: Every Week15 Minute Daily Standups are key to aligning our Squads and breaking bottlenecks on a daily basis. While Squads must be capable of owning a mission from thought to production, the whole team must come together on a regular cadence to align each of the Squads. This is called the Whole Team Standup and should happen at least once a week (Whole Team Standup is the modern name for a Scrum of Scrums). ### Running the session- The Release Manager will typically run the Whole Team Standup- The Release Manager brings up the ZenHub Board and filters by:    - The current Sprint    - The current Squad- Each Squad Leader will then say:    - What closed this week    - What will be done next week    - List the blockers> ProTip: While it might not be obvious, it helps to assign your Epics to the current Sprint so you can use the Filter by this Epic button so you can quickly focus on the the work being done for that Epic. You can also use the Whole Team Standup to keep your board up to date... While your team can elect to have a Whole Team Standup as often as they see fit, once a week should be considered the minimum for anyone in Watson.> Signs of Success >  Squads have the information they need to understand their work.>  Blockers and dependencies are brought to light and can then be worked on.>  Offering Management, Design, and Engineering are on the same page.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/whole-team-standup/",
    },
    {
      "title": "Squad Backlog Refinement",
      "text": "---title: Squad Backlog Refinement---An Epic thats been assigned to the Squad must be broken down into [User Stories](agile/ongoing-delivery/hills-epics-stories-usecases#stories), estimated, and prioritized.> Who: Every Squad>> When: Every Day## Running the SessionDuring the session, the Squad will: Review new Epics assigned them from their Leadership Teams Refines the Epics into Stories and/or additional Epics Adds detail to the Stories Estimates the Stories in points## Estimate effort with PointsAll too often, teams skip estimating how much effort and risk is involved in the things they have to do. This results in teams being asked to do (or teams taking on) more than they can handle. To help everyone understand what is achievable, we create Story Point estimates.Story Points are used to express the effort required by the squad to deliver a fully implemented item from the backlog (Epic, Story, Issue). Story Points are a relative estimate, meaning a story that is assigned a 2 should be twice the effort of a story assigned 1 and two-thirds the effort of a story estimated at 3.There are several ways to get started with Story Points, a team can work together and determine what the smallest story that they would track and establish that as a 1. For squads accustomed to using T-Shirt sizing Watson teams can map the Point values (typically using the Fibonacci sequence) in [ZenHub](../../../tools/zenhub) to T-Shirt sizing:### T-Shirt Sizes and their corresponding Story Point Values| T-Shirt Sizing | Story Point Values ||------------------- | -------------- || XX-Small Story | 1      || X-Small Story  | 2      || Small Story    | 3      || Medium Story   | 5      || Large Story    | 8      || X-Large Story  | 13     || XX-Large Story | 21     |When estimating stories, remember to work out of the backlog. It will take a few Sprints to understand exactly how much can be fit in a Sprint safely.> ProTip: If you are stuck trying to decide how to prioritize bugs, you can add a second round of Planning Poker for each issue where you vote on the value of the work. Create a spreadsheet with the list of bugs, enter the effort points in a column and value points in a column. Divide the value points by the effort points and then sort your list of bugs by the value:effort score. This will make the low effort/high value bugs jump to the top of the list!## Product RoadmapsTeams build high-level plans that span Sprints, Quarters, or even up to a year or more that reflect expectations about what scope will be implemented. This forecast is at the Epic-level and is referred to as a Product Roadmap (sometimes called a Release Plan).Details on building Product Roadmaps can be found on the [Estimates and Reporting](../../enterprise-agile/practices/estimates-and-reporting/) page## Planning Poker### How to run a Planning Poker Meeting [(4 minute video)](http://agileacademy.w3ibm.mybluemix.net/standalone/planning_poker/)Planning poker is a consensus-based, gamified technique for estimating, mostly used to estimate effort or relative size of development goals in software development. Members of the group make estimates by playing numbered cards face-down to the table, instead of speaking them aloud. The cards are revealed, and the estimates are then discussed. By hiding the figures in this way, the group can avoid the cognitive bias of anchoring, where the first number spoken aloud sets a precedent for subsequent estimates.Before you begin, pick a reference Story of Medium effort. This should be a Story that the team completed a quarter or two ago.Why a reference Story? Humans are simply more adept at comparing piles of rocks and saying this pile of rocks is bigger or smaller than another pile of rocks than they are at trying to figure out how big a pile of rocks should be and how much time itll take them to build a pile of rocks.So, if you use the scale shown above, youre looking for a 5 Point Story...With a reference Story, a team can compare _potential_ new work to something the team has already done.- Its up to your Squad to determine what your sizings mean- You cant compare point values from one team to another team- As a group, set an estimate for every Issue opened.- Leverage your small group to help understand how much effort an Issue really is.Planning poker can be played [daily.](../agile-calendars/) Working out of the team backlog, the team lead reads the Story title and short description.  This should give the team the background they need to understand how big it feels.The team will vote together, so make sure you use a SIMPLE mechanism to capture the vote. If your Slack Workspace Admin has enabled the IBM Poll Slack App, you can use that to vote in Slack!```/poll “How much effort?” “XX-Small” :size-xxs: “X-Small” :size-xs: “Small” :size-sm: “Medium” :size-med: “Large” :size-lg: “X-Large” :size-xl: “XX-Large” :size-xxl:```If all votes are within three Fibonacci numbers, take the average and move on to the next.  If consensus is not reached on the first vote, ask the outliers why they voted as they did and call for another vote.  Add up the average and move on. If you dont come to consensus by the revote, you wont. So knowing that all estimates are wrong, just take the average and move on. (if you have a problem with this, go argue with [Jeff Sutherland](https://www.google.com/search?q=jeff+sutherland))Repeat until youre done.> Signs of Success>  Squads that plan continuously, spend less time Planning overall, and there is less guesswork>  Squads that plan consistently become predictable. Predictable Squads are valued higher in the organization",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/squad-backlog-refinement/",
    },
    {
      "title": "End of Sprint Demo",
      "text": "---title: End of Sprint Demo---On the last day of the Sprint, hold a Demo, a Retrospective, then Plan your next Sprint> Who: Whole Product Team>> When: Last Day of the SprintThe End of Sprint Demo is the time to come together as a broader team to validate that what was planned for the sprint is what was achieved. For some team members the sprint was spent creating stories and writing code, others will have created architecture diagrams that lay the foundation for future work, while others still might have some preliminary user experience mock-ups to share with the broader team.The Product Owner is responsible for the process of setting up the End of Sprint Demo and facilitating the session. They set the context by starting with a brief description of the business value delivered during the sprint. Then members of the Development Team will provide a demonstration of working code, a read out of an investigation story, an architectural diagram or other artifacts of the stories that were worked on in the sprint. Focusing on the business value helps keep the stakeholders engaged and is a good reminder to everyone of why we did what we did. Additional facilitation responsibilities include: Planning what will be said. It doesnt have to be a complete script, but knowing the highlights helps. Look at what the squad did over the last sprint. Identify stories that have been completed and use that as a starting point. Bring something visual to share. If there is a live demo of something ensure that your browser is open to the page and test it immediately before the meeting. Have a backup if things go wrong. Set time limits (5 minute slots and 10 minute slots work well) and make sure presenters adhere to time limits. The team may not be able to cover everything that was done that Sprint. Thats fine. Post visuals and meeting notes.> Get started with this  [(5 minute video)](https://agileacademy.mybluemix.net/standalone/showcase/) from the IBM Agile Academy about how to run an end of Sprint DemoAfter the Demo, have lunch as a team then hold a Retrospective...> Signs of Success>  Your Squad Members feel a sense of pride in showcasing what theyve accomplished.>  Your organization better understands what work is being done.>  You ensure that the right work is being done in the right order.>  Offering Management, Design, and Engineering are on the same page.> The Sprint Plan and the End of Sprint Demo are the bookends to your sprint.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/end-of-sprint-demo/",
    },
    {
      "title": "Combo",
      "text": "---title: Combo---{% include_relative agile-calendars.md %}{% include_relative daily-standups.md %}",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/events/test/",
    },
    {
      "title": "Dependencies",
      "text": "---title: Dependencies---Sometimes a story cant be completed until some other piece of work is done.  Most Squad members assume this could be something technical, but many times, it can be virtually any kind of additional background work. To understand how to track dependencies, were going to separate them into to categories: Internal and External to the Squad.## Dependencies inside the SquadLets look at a Story that requires a user interface to be created, it will probably take more than one Sprint, and require multiple people.  Work that takes more than a Sprint? That really sounds more like an Epic. In this case, we create the User Story, convert it to a Zenhub Epic, and add the additional work as child issues. Assign these issues to the Squad Members that will be completing the work. Its important to identify and track all of the dependencies so that the team doesnt develop a false sense of confidence about how much work they have to do to complete a user story or epic.## Dependencies outside the SquadA Squad should be able to complete a mission from thought to production. While every Product Team should ensure that each and every Squad is enabled for success, reality is messy. The truth is that weve all had work that depended on something being done outside of our Squad. To help us deal with that, we worked with the teams that develop both ZenHub and Aha and had them add the ability to mark work as dependent on other work.> ProTip:> You can only call out dependencies for work that youre actually tracking. To ensure youre not missing anything, you should err on the side of caution and leverage both Aha and ZenHub to track all of your dependencies.## ZenHub Dependencies- Open an Issue- Click the + add dependency button- Use typeahead to find the issue and then select it- Your issue is now marked blocked by another issue> ProTip:> Dependencies can by added for any Issue in your [Product Issue Tracker](../../../planning-and-tracking-work/getting-organized#product-issue-trackers) and/or for any connected repository for those smaller projects that use the [Board of Boards](../../../planning-and-tracking-work/getting-organized#board-of-boards-less-common) approach.Dont get too hung up on the use of the word blocked. If you stop and think about it, any work that cant be started until something else is completed is actually blocked.> ProTip:> - Use a red blocked label in GitHub to mark issues blocked by something that isnt in GitHub> - Make sure the issue has a link to the thing thats blocking it### Coming soon (1H 2018)- ZenHub will be adding the ability to mark an issue as dependent in addition to blocked- ZenHub will be adding the ability to mark an issue as blocked by anything. This could be a GitHub Issue in some random repo, or youll be able to add a URL so you can mark a GitHub Issue blocked on a Change Request URL. You wont be able to get live status from anything but GitHub, but it will help you keep track of your dependencies, and the dependency will show up on the card in the board view.- ZenHub will add a Dependency Report that will show you a graph of our dependencies...## Aha DependenciesRecognizing that the items in our Roadmap can be _highly dependent_ on other items in Aha, we worked with the team at Aha to add the ability to mark an Epic as dependent on another.- Open an Epic- Select Actions > Link to another record- Find the Aha Epic that your Epic is dependent on (hint: use the Epic ID, e.g. GTD-14)- Click Create link- Your Epic is now dependent on that other Epic- To see your dependencies on a calendar/gantt view, go to the Release Targets view.- Youll see arrows connecting one target to another. Its easy to spot problems in this view (e.g. one Epic completing _after_ the start of a dependent Epic)> ProTip:> To visualize a dependency across products, youll need to add the Release Target from the _other Product_ to your view. You can only add dependencies on Epics you have access to. Work with your Aha Admin to ensure you have read acce### Aha Dependency ReportingAha has added a Dependency viewer report for us.- Select the Epic- Scroll down to the Visualize link- Click the target icon to center on that Epic, and the arrow icons on a dependency to see the depenencies for your dependencies> ProTip:> Remember, you have to click the little target icon to expand and see the extended Dependencies, youll only see the a level or two by default...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/practices/dependencies/",
    },
    {
      "title": "Process Acceleration",
      "text": "---title: Process Acceleration---While we always strive to start with the minimum viable process possible, sometimes we get it wrong. It doesnt matter where you are in your projects timeline, theres never a bad time to look at improving your processes (no matter what the process is). To help you, were bringing techniques used in Lean Manfuacturing and adapting them to Software Development.> Keeping it simple> We freely admit that were simplifying a number of things here to help teams get going with these practices. Dont sweat the small stuff, you can get [deeper and more complex](https://www.safaribooksonline.com/search/?query=value%20stream%20mapping) when youre comfortable with each of these practices...## Value Stream MappingValue Stream Maps are created by documenting an as-is process and then designing a to-be process. You then use the to-be process as a goal to guide continuous improvement efforts.While Value Stream Mapping can be applied to any process, were going to focus on three slices of time. Lead Time, Cycle Time, and Process Time. Were going to use the decades-old Lean Manufacturing derived definitions here. Were also going to tailor our language to GitHub terms (because thats where we all work).## Lead Time, Cycle Time, Process Time### Lead Time- Lead Time is the time between the work being defined and the work being live in Production- In GitHub, this is the elapsed time between New Issue and Closed (Assuming Closed == Production)- Lead Time is what the Customer experiences### Cycle Time- Cycle Time is the time between the work starting and being live in Production- Cycle Time is what the Product Team Experiences### Process Time- Process Time is the time between the work starting and being ready to deploy- Process Time is what the Squad Member experiences (when theres a handoff to deploy)If our highest priority is to satisfy our customers through the early and continutous delivery of valuable software, then we must focus on shrinking the amount of time it takes new work to be delivered. Now its time to measure and improve...## Measure and Improve- As a Team, design some experiments to shrink the amount of time work stays in each state.- As a Team, measure and review your Lead Time regularly- As a Team, define an Emergency Lead Time Goal and a Typical Lead Time Goal.### As IsAs a Team, review the end to end process you want to improve. Create a bar chart that tracks the amount of time work spends in each state of your process.![As-Is Value Stream Map](https://pages.github.ibm.com/the-playbook/resources/images/agile/play-by-play/value-stream-mapping/as-is-lead-time.png)### To BeAs a Team, set some goals you want to achieve with your current process.  Create a bar chart that tracks the amount of time work spends in each future state of your process.![To-Be Value Stream Map](https://pages.github.ibm.com/the-playbook/resources/images/agile/play-by-play/value-stream-mapping/to-be-lead-time.png)The first time you do this, youll likely focus on shrinking the amount of time work stays in each phase. As you mature, you can work on actually changing the process through automation and improvement and thereby improving the value stream.Remember, Experiment, Measure, Repeat.> Examples> As a Squad Member, I can turn around an emergency fix and push it into production before the end of the day> As a Product Team, we can deliver a New Idea into production the same Sprint we complete the workRemember, the only way to meet customer needs is to ensure that Lead Time is the concern of everyone…## Mining ZenHub for DataIf you noticed that the Lead / Cycle / Process Time charts looked like they were pulled from columns in a ZenHub board, you were right. We have scripts that can pull the data out of ZenHub and then get you to the point where you can easily create these charts in Excel.Theres an GitHub Enterprise organization devoted to GitHub User Scripts, grab the [Issue Scripts](https://github.ibm.com/github-user-scripts/issue-scripts) from there.> Signs of Success> - Work moves from Thought to Production faster than it once did> - You see improvements in Lead / Cycle / Process Time after you measure again the next quarter> - Squad Members are involved in Deployment> - Product Teams regularly measure and report on Lead / Cycle / Process Time",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/practices/process-acceleration/",
    },
    {
      "title": "Capacity Planning",
      "text": "---title: Capacity Planning---Estimates are always wrong.Time-based estimates are often the most wrong, while group-based relative sizing are the least wrong.Product Teams should perform rapid, continous estimation and use Aha! to plan capacity from Quarter to Quarter. Always remember that when you are dealing with future work, the further out you go, the less defined the work will be. This is called the Cone of Uncertainty, it looks like this:## EstimatesT-shirt sizing and/or Planning Poker are easy methods to follow that dont waste precious time going deep on estimating the far away things. ### T-Shirt sizing- Step one - review the prioritized plan and pick one that would be considered medium t-shirt sized, your anchor story. Note: the plan can be from the roadmap level down to the sprint level.- Step two - now that you have your anchor then go through each story and ask if that story is much smaller, smaller, the same as, bigger, or much bigger than the anchor. Use IBM Slack Polls to do the voting.- Step three - equate T-shirt size to a story size number equivalent based on the level you are planning and/or on a previous average velocity> Pro Tip:> If the item is so unknowable that you cant determine based on prior work go HUGE. For example, if your capacity for the last quarter was 2000 points and you use T-shirt sizing, then make XL equivalent to between 50-80% of your known capacity.### Planning Poker- If you havent done this already, pick two pieces of completed, representative work to use as a reference when estimating.    - Step one - pick one Story for Sprint-sized work    - Step two - pick one Epic for Epic-sized work    - Step three - refer to these when sizing work and discussing differences> Pro Tip:> The reference work or anchor story trick helps speed planning poker to the extreme## CapacityAt every level of the organization, whether it be at the personal level, the Squad level, or the Product level, there is a finite capacity available for work.We are people, not robots, we must remember this as we make future plans.Thankfully, we have tools that can help guide us towards understanding what can, and what cant be done within any given period of time.### Capacity Planning in Aha!Once you have estimates, you can use the Aha capacity planning capability to give you dates- Step one - set the capacity limit in Aha based on your actual quarterly velocity    - Add up the most recent quarters worth of points from your ZenHub velocity charts    - Add them to each Aha Release Target (by clicking on the word Capacity in the column)- Step two - drag and drop your Aha Epics into the prioritized order (top is highest priority)  Aha will draw a red line in the column to show you where you are at capacity- Step three - drag anything below it to the next Quarter- Step four - rinse, repeatRemember that when looking at columns in tools like Aha or ZenHub you are viewing a vertical version of the cone of uncertainty:> Pro Tip:> Estimates are not sychronized between Aha and GitHub, you will need to manually add the estimates to both tools. We have requested this feature be added to Aha but they have not committed to doing it...Its important to understand that estimates are intended to be able to help make prioritization and tradeoff decisions and not to set due dates. When we use the model above to make these estimates it will help us have better conversations about those due dates and deliverables.Like everything else around here, were trying to move the entire organization to continuous refinement, sizing, and planning (each are individual activities). Theres still work to be done on all levels...> Real World Results: See [Getting started with User Value-based Roadmaps](https://pages.github.ibm.com/the-playbook/getting-things-done/lessons-learned/user-value-based-roadmaps/) for lessons learned about doing this in real life...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/practices/capacity-planning/",
    },
    {
      "title": "Continuous Planning",
      "text": "---title: Continuous Planning---We here in Watson have progressed to the point where most Squads can state, with a high degree of accuracy, what they can commit to in their next Sprint. Some can even state what they can commit to in the Sprint after that. The challenge we currently face is that the business depends on us being able to forecast further out than a few weeks. With the bulk of revenue coming from client-specific commitments being made a Quarter or more out, we need the organization to use our Sprint-based expertise to guide our long term forecasting.## Our Goal> All Product Teams follow a Continuous Planning process that yields a rolling Roadmap where we can forecast out at least two quarters beyond the current quarter.## Fundamental Tenets- No Assumptions - The only work that can be placed on a Product Roadmap is work that the Product Leadership Team has refined (Described, Sized, Prioritized) ([link](enterprise-agile/events/product-refinement))- There are three timeframes each Product Team focuses on for planning. The next Year, the next Quarter, and the next Sprint.    - The Next Year - This is the Planning Roadmap. This shows the future state that we are aiming for a single product and also shows the quarter when we are planning product integrations.    - The Next Quarter - The 3 month period that begins after the current Quarter. This means that roadmap commitments should be rolling across months.    - The Next Sprint - Squads are responsible for planning, with certainty, what they can commit to delivering for this Sprint, and the next Sprint.- Group-based Estimates - Work must be estimated by a group, not by an individual. Estimates can be wrong, we expect them to be wrong, AGILITY & COMMUNICATION is key.- Total Agreement - Every stakeholder agrees to dates everywhere that dates are needed, and items with dates become our highest priorities- Trade off Decisions - When it is clear that a Squad (or Product) cannot achieve a commitment, the Product Leadership Team owns the trade off decisions and works with their Tribe and Segment Leaders to ensure that we deliver the right things in the right order.## Steps- All work starts in Aha:  This includes new work (new features, new deployments) AND continuing investment on EXISTING capabilities (keeping the lights on operational support / bug fixes, security updates, technology shifts).- The Product Leadership Team meets daily to analyze new work and make sure they are on the same page wrt scope. This includes rough order of magnitude sizing based on real world data.- The Product Leadership Team prioritizes and commits to plans based on estimates provided by Squads and available resources- The Offering Manager owns the Roadmap and sends Aha Epics to GitHub the Quarter before they will be implemented. All other work stays in the Aha Parking Lot- The Squads that will do the work, will size the work - estimation must leverage prior sprint velocity and should improve over time.  Squads have to size work within a week of it being assigned by the Product Leadership Team. If Squads are not sizing within a week, the Product Leadership Team will work with the Squads to help them achieve success.- If work is required from other teams, the Offering Manager is responsible for interlocking with their counterparts from those teams. If there is a prioritization conflict, the Offering Manager works with the Tribe and Segment Leadership teams to resolve the conflict.- Release Managers track each Squads progress on their commitments. When committed work needs to change - e.g. new work coming in, original estimation was faulty, CIEs took time etc, the Release Manager and Offering Manager are responsible for communicating with stakeholders and re-prioritizing with them as necessary.This is a continuous process that leverages feedback loops as described in the [Agile Calendars](enterprise-agile/events/agile-calendars) page of the Playbook.## Things to watch out for- Comprehensiveness of Aha - We should make sure that Aha Roadmaps are comprehensive accounts of where the Product Teams will need to spend their effort. E.g. today, it seems most of our roadmaps do not include amount of effort Squad Members spend on day-to-day operational support (deployments, SRE, CIE management, bug fixes, L3 support) or new automation they need to build to make such tasks cheaper to execute. Specifically, make sure you include SMARTS principles that we have successfully used to improve operational stability -  Scale testing, Monitoring, Alerting, Recovery (SRE Playbooks), Testing, Security.- ASSUMING an interlock - We gave them this date target 6 months ago  does NOT an interlock make. Unless owners of work items have committed to a date target, there is no interlock, plan or roadmap.- Squad hesitation of accurate estimation - We can never be 100% accurate in estimating effort, but having some estimate is better than nothing and leveraging agile group-based-estimation + our past sprint velocity, we should be ok. Talk to agile coaches for help.## Asks for the Leadership- Donna asks for Roadmaps/ Backlogs  that have epics in which Design and Development agree on the Acceptance criteria.    Design and development determine when the Roadmap/Backlog is Well Defined.- Aameek tells his report that if they do not have a well defined backlog then they should make that known to him and Donna- Aameek demands from his staff that Releases ups are are accurate (Contains all Known epics and stories, and estimated.   Burn-ups are to be reviewed with Aameek every 2 weeks- Leadership Team education    - Understand how to use burn-downs, burn ups, roadmaps to drive behavior    - Identify what leaders need to do and actions to take to support transformation    - Q1 2018 Leadership training workshop 1.5 - 2 days[] Need macro analysis with current+2q  horizon so that we can identify unsustainable trends - e.g. if a new deployment requires 2 Sprints worth of effort and we are doing 10 new deployments two quarters later, we need to invest in automation this quarter to reduce the effort to multiple deployments per Sprint.> Signs of Success>  Your Product Team has a clear vision for where youre going.>  Your Squads are aligned in their work and have fewer bottlenecks.>  All work is visible, so your planning becomes more accurate.>  You deliver what you say youre going to. Your stakeholders are satisfied.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/practices/continuous-planning/",
    },
    {
      "title": "Agile Estimates & Reports",
      "text": "---title: Agile Estimates & Reports---## OverviewAgile Estimation and Reporting using T-Shirt Sizing (mapped to points), Burndown, Velocity, Burnup, and Cumulative Flow Diagrams are the keys to understanding what a team can accomplish. These practices let you understand a teams capacity which helps them become predictable and have a balanced budget.Before we begin, always remember that when you are dealing with future work, the further out you go, the less defined the work will be. This is called the Cone of Uncertainty, it looks like this:Even with the Cone of Uncertainty, every estimate in the history of estimates has been wrong, remember that before proceeding...Seriously, all estimates are wrong. There has been a [ton of research](https://www.scruminc.com/story-points-why-are-they-better-than/) done that shows that time-based estimates are the most wrong while group-based relative t-shirt sizing is the least wrong. The guidance contained here all uses T-Shirt sizing (the least wrong kind of estimates).## T-Shirt Sizing (Story Points / Epic Points)All too often, teams skip estimating how much effort and risk is involved in the things they have to do. This results in teams being asked to do more than they can handle. That leads to teams feeling like they failed and stakeholders being let down. To help everyone better understand what is achievable, we use simplified T-Shirt sizing to describe the effort involved in doing a body of work.As our tools dont use T-Shirt sizes for their estimates (but express sizing using numbers that follow the Fibonacci sequence), we map those T-Shirt sizes to point values.Epics are typically bodies of work that take 3-4 Sprints to complete. They are broken down into a number of Stories, each of which can be completed within a Sprint. We can use T-Shirt Sizing to represent both Epics and Stories, we just have to map them to different point values behind the scenes.### T-Shirt Sizes and their corresponding Story Point Values| T-Shirt Sizing | Story Point Values ||------------------- | -------------- || XX-Small Story | 1      || X-Small Story  | 2      || Small Story    | 3      || Medium Story   | 5      || Large Story    | 8      || X-Large Story  | 13     || XX-Large Story | 21     |Epics involve much more effort to complete and would typically be made up of a number of child Stories (e.g. Ten Large Effort Stories, a few XL Effort Stories, and some Smaller effort ones). As a result, the point values associated with Epics are much higher, but we still use a Fibonacci-style range. To understand _your range_, pick a Medium-effort Epic that your team has completed within the last few Quarters for _your Medium_ and fill in the rest of the range. Heres an example from the Watson Assistant Team:### T-Shirt Sizes and their corresponding Epic Point Values| T-Shirt Sizing | Epic Point Values ||------------------- | -------------- || XX-Small Epic | 30      || X-Small Epic  | 60      || Small Epic    | 90      || Medium Epic   | 150     || Large Epic    | 240     || X-Large Epic  | 390     || XX-Large Epic | 630     |## Planning Poker### How to run a Planning Poker Meeting [(4 minute video)](http://agileacademy.w3ibm.mybluemix.net/standalone/planning_poker/)> Who: Squad Members>> When: [Squad Backlog Refinement](../../enterprise-agile/events/squad-backlog-refinement./)Planning poker is a consensus-based, gamified technique for estimating, mostly used to estimate effort or relative size of development goals in software development. Members of the group make estimates by playing numbered cards face-down to the table, instead of speaking them aloud. The cards are revealed, and the estimates are then discussed. By hiding the figures in this way, the group can avoid the cognitive bias of anchoring, where the first number spoken aloud sets a precedent for subsequent estimates.Before you begin, pick a reference Story of Medium effort . This should be a Story that the team completed a quarter or two ago.So, if you use the scale shown above, youre looking for a 5 Point Story...With a reference Story, a team can compare _potential_ new work to something the team has already done.- Its up to your Squad to determine what your sizings mean- You cant compare point values from one team to another team- As a group, set an estimate for every Issue opened.- Leverage your small group to help understand how much effort an Issue really is.Planning poker can be played [daily.](../../events/agile-calendars/) Working out of the teams New Issues, the team lead reads the Story title and short description.  This should give the team the background they need to understand how big it feels.The team will vote together, so make sure you use a SIMPLE mechanism to capture the vote. If your Slack Workspace Admin has enabled the IBM Poll Slack App, you can use that to vote in Slack!```/poll “How much effort?” “XX-Small” :size-xxs: “X-Small” :size-xs: “Small” :size-sm: “Medium” :size-med: “Large” :size-lg: “X-Large” :size-xl: “XX-Large” :size-xxl:```If all votes are within three Fibonacci numbers, take the average and move on to the next.  If consensus is not reached on the first vote, ask the outliers why they voted as they did and call for another vote.  Add up the average and move on. If you dont come to consensus by the revote, you wont. So knowing that all estimates are wrong, just take the average and move on. (if you have a problem with this, go argue with [Jeff Sutherland](https://www.google.com/search?q=jeff+sutherland))Repeat until youre done.Once Stories have been sized, youll need to determine _as a Squad_, the priority of each new Story (relative to all of your other work) and then add the newly Sized + Prioritized Stories to the appropriate place in your Backlog. Remember, the Backlog is a Sized + Prioritized list of ready to implement work for your Squad.## Product RoadmapsTeams build high-level plans that span Sprints, Quarters, or even up to a year or more that reflect expectations about what scope will be implemented. This forecast is at the Epic-level and is referred to as a Product Roadmap (sometimes called a Release Plan).  The world is moving fast, so we dont want to waste effort on planning minute details on things we may never do. Remember the Cone of Uncertainty here:One of the benefits of Planning Poker is that it can be applied to Epics that are months into the future the same way it is applied to Stories. The only difference being the amount of effort needed.  When estimating Epics teams extend the point value sequence, with the greater the point value indicating the lack of clarity of the scope.> Who: Product Owners + Squad Technical Leaders (for Multi-Squad Product Teams)>> When: [Product Roadmap Refinement](../../enterprise-agile/events/product-refinement/)Note, if you are a Single-Squad Product Team, you can do this with your Squad + Product Owner.Before you begin, pick a reference Epic of Medium effort (and value) . This should be an Epic that the team completed a quarter or two ago that is right in the middle of all of our Epics (in terms of total points).So, using the example from the Watson Assistant Product Team as a reference:| T-Shirt Sizing | Epic Point Values ||------------------- | -------------- || XX-Small Epic | 30      || X-Small Epic  | 60      || Small Epic    | 90      || Medium Epic   | 150     || Large Epic    | 240     || X-Large Epic  | 390     || XX-Large Epic | 630     |If you use the scale shown above, youre looking for a 150 Point Epic, but remember to find _your_ Medium, the point values may vary (just map your Medium into a Fibonacci-style sequence).When you run your Product Roadmap Refinement events, youll use the exact same technique (Planning Poker) but when you record the _values_ of the estimates, youll use larger point values instead of the smaller point values.## Capacity Planning (Intro)All too often, we fail to consider our capacity when we plan. Wed love to talk about it now, but we have a chicken and egg problem here. We cant talk about capacity planning without talking about the reports you use to figure out what your capacity actually is. So, read through this next section about reporting and then well talk about capacity planning...## Agile Reporting### BurndownBurndown reports show completion of work over time (from 100% to 0% remaining). ZenHub adds Burndown reports to GitHub. All you have to do is add Story Points to your Issues, assign your Issues to Milestones, and ZenHub will automatically generate Burndown charts for you.> ProTips:> - The diagonal line is your ideal, if youre below the line, youre ahead of schedule, above the line, youre behind.> - Notice that plateau? Thats a weekend. We expect work to pause on the weekends.### Filtered Burndown ChartsOn a big project? Use the Label dropdown to create custom Burndown charts for your Squad that you can bookmark.Things to note...- Every filter option you pick is added to the URL, that makes every custom view  bookmarkable and shareable- Add links to filtered burndown charts to your wiki- Create a burndown chart for defects by filtering on your defect label- The Burn Pipeline dropdown allows you to add additional pipelines (columns) to the burndown chart. If you have an automated build, but manual deployment process, this can let you see how much faster you could be done if you adopted Continuous Delivery Practices### VelocityAfter a few Sprints, add up the number of completed Story Points and divide by the number of Sprints. The average number of Story Points completed is called your Velocity. Use your average number of Story Points to determine how many Points to put in each Sprint moving forward. Understanding (and using) your Velocity is key to getting your Squad to predictability.ZenHub generates Velocity charts automatically. Youll find them under the Reports tab.Things to note...- By default, ZenHub looks at 10 Sprints; the 3 most recent open Sprints, and the 7 most recent closed Sprints.- Your average velocity is the purple line- You can remove a Sprint from the Velocity chart by unchecking it in the table below the chart (you might want to do this for Sprints that happen around major holidays)- You can filter the Velocity chart just like the burndown chart by picking one or more Labels from the Label drop-down.> ProTip: Look at the chart above. The average Velocity for this project is a little over 30 Story Points per Sprint and yet theyve added 193 Story Points to the Sprint. The Velocity chart is a great way to spot overcommiting. Overcommitting is a big problem that negatively impacts morale, causes lost revenue, and prevents teams from becoming predictable.### Release Reports (aka Burnup)Release Reports show completion of work over time (from 0% to 100% complete). ZenHub adds Release Reports to GitHub (which are also commonly called Burnup charts). All you have to do is add Story Points to your Issues, assign your Issues to a Release, and ZenHub will automatically generate Burndown charts for you.- First, go to the Reports tab and click on Release Reports- Create a new Release Report, enter the start and end date, and fill in the description- Go to your Board- Filter your board to see the issues you want to add to a Release Report- Use multi-select to add the issues your Release Report> ProTip: ZenHub allows you to select up to fifty Issues at a time. Its often best to filter by Sprint + Squad + another label to work through adding all of your issues.> ProTip: Do not build a release during the release. Build your releases before the start date of the release. There is a scope creep algorithm baked into Release Reports that will skew the predicted end date dramatically. Youll still be able to use the burn up chart, but the predicted end date will be off if you build a release report while the release is already underway...ZenHub has _excellent_ documentation that digs deep into Release Reports [available on their website](https://www.zenhub.com/guides/release-reports)### Cumulative Flow DiagramsIts true, Cumulative Flow Diagrams have come to ZenHub, and theyre beautiful.  In addition to being pure eye candy, they are the key to spotting bottlenecks so you can fix them.ZenHub has an _excellent_ page about how to read Cumulative Flow Diagrams [availabile on their website](https://help.zenhub.com/support/solutions/articles/43000038850-reading-cumulative-flow-diagrams)## Capacity PlanningAll too often, we fail to consider our capacity when we plan and track our work. To ensure you have a balanced budget, where your Squads are primed for success on their missions, you must do your capacity planning based on real world data. Aha provides a capacity indicator for the Quarter, and an out of scope indicator based on points. ZenHub provides real world execution-based data in your Velocity reports. Heres how you use all of this to help you better understand and plan for the capacity your Squads have.Before you begin:- Most teams have _invisible work_, work that isnt being tracked along with the work youve planned    - This can be Technical Foundation, Dedicated Deployments, etc    - Nine times out of ten, invisible work is the reason our planned goals arent met    - Retrospectives are used to bring invisible work to the surface- If you dont track all of your work, you cannot understand your capacity    - When in doubt, track it (this means opening an Issue, assigning a quick estimate, adding it to a milestone, and assigning it to a person)Once you have a handle on all of the work youre actually doing, you can start capacity planning using features in Aha and ZenHub.> Chicken and Egg Problem>> Again, we have a chicken and egg problem. You cant plan your capacity for a Quarter until you have at least a rough idea about what you can accomplish within a Quarter. When in doubt, be conservative in your estimates.### ZenHub- Bring up your Velocity report for the _whole team_- Add up a Quarters worth of points- Deduct 25%- Use that number of points as your Quarterly Capacity### Aha- Ensure that capacity tracking by Points is enabled for your Product (found under Settings for your Product)- Add your Quarterly Capacity in Points to each of your Quarterly Release Targets- Hold a [Planning Poker](#planning-poker) session and add a Forecasting Estimate to each Epic- You can then see whether or not you are under/over budget for your capacity.    - The bar at the top is the total number of points in the Release Target    - If it is all blue, you are under capacity, anything in red is over capacity    - Aha will automatically draw a red line in your column to show you what work cannot be contained within the Quarter    - Aha will automatically recalculate the capacity limit line if you reprioritize by dragging and dropping cardsRemember that when looking at columns in tools like Aha or ZenHub you are viewing a vertical version of the cone of uncertainty:## People, not robots...Remember, we are people, not robots. Stop and consider the human impact of overcommitting. If we are to continue this pace indefinitely, we need to ensure our Squad Members do not burn out. Taking your capacity in mind when planning is key to ensuring a productive organization.## Person Month EstimatesEstimates in Person Months are the Least Accurate form of estimates, so we dont use them anymore. Read this [experience report](../../../getting-things-done/lessons-learned/user-value-based-roadmaps) of how the Watson AI Organization moved past innacurate estimation techniques from the 70s and adopted Group-based relative sizing instead. ProTip> Its vital that you have been practicing group-based estimation for a few Sprints otherwise you wont be able to provide meaningful data. Please read through this _entire_ page before moving forward.- First youll need to know how many Weeks per Sprint (e.g. 2 Weeks per Sprint)- Next youll need to know how many people you have (e.g. 90 People)- Finally, youll need to know your Product Teams Velocity. (e.g. 528 Points)    - Use ZenHub Reports to determine your Product Team Velocity (your average over the last 3 or more Sprints)    - Since youre dealing with very high-level planning, and since Velocity varies from Squad to Squad, its best to do this at the Product level. If you know _which Squad_ will implement your long term work, this also works at the Squad level.- Divide your Product Team Velocity by the number of weeks per Sprint, then multiple by four    - This converts from Points per Sprint to Points per Month- Divide the number of Points per Month by the number of People    - This tells you how many Points equals one Person MonthSo, with these example numbers, 1 Person Month to deliver 11.75 Points.You can then calculate the Person Month equivalents per Point value (.08PM to deliver 1 Point, .17PM to deliver 2 Points, .25PM to deliver 3 Points, etc.). [Heres a handy Spreadsheet that you can use.](https://ibm.box.com/s/suxnji0ametxzl6zyrxq7q427rxzk16a)Once you have approximate Person Month numbers for each point value you use, add them to your [table of completed work.](#table)Wait a second, thats _far too simplistic_, right? Shouldnt we really come up with a complex formula that does a better job of dealing with the variations seen from Squad to Squad and...Yes yes, we went down that path first. We did the math, worked various formulas through a number of Squads and Product Teams, compared different multipliers to address all kinds of variables until one of us noticed that all of the super complex things we tried were within 5% of this _much_ simpler solution.So, yeah, we were overthinking it.Keep it simple. This very easy solution is close enough for these kinds of exercises.So, go about your business. Keep estimating as a group using Points and use this to answer the Person Month questions when they come up...> ProTip> Only ever use Person Months for very high level planning, do not use it for your day to day execution. It will be wrong since Velocity varies from Sprint to Sprint.-->",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/enterprise-agile/practices/estimates-and-reports/",
    },
    {
      "title": "ZenHub",
      "text": "---title: ZenHubweight: 4---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/tools/zenhub/",
    },
    {
      "title": "Aha!",
      "text": "---title: Aha!weight: 5---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/tools/aha/",
    },
    {
      "title": "Tools & Resources Guide...",
      "text": "---title: Tools & Resources Guide...---## OnboardingOnboarding - Manager with a new employee? Just joined a Squad? Start here...## IBM CIO ToolingWhitewater, from our CIOs Office, gives teams an integrated set of best-in-class tools to take projects from idea to production.- Slack - Team-based collaborative communication- GitHub - IBMs internal deployment of GitHub Enterprise- ZenHub - Kanban boards (and more!) for GitHub Enterprise    - If you dont work in IBM Cognitive Solutions or IBM Cloud, you might use different tools. The IBM CIO provides the following three tools for three VERY different audiences:        - Trello for teams that don’t use GitHub (finance, procurement, etc, not us)        - ZenHub for teams that use GitHub (this is us)        - JIRA for those teams working in HIGHLY regulated environments (not us)- Travis CI - Modern Continuous Integration- Pager Duty- Safari Books Online - Every OReilly Book ever plus conference recordings, online courses and more.    - Our Reading List - A list of books weve read (nearly all available on Safari Books Online!)- Mural - A virtual whiteboard that lets you capture plans and ideas with your team- InVision (Pilot) - InVision is a whole-team prototyping platform. There are two license types available with InVision:    - Contributor Licenses - [https://ibm.biz/invisioncontributor](https://ibm.biz/invisioncontributor) - Intended for designers, people building the prototypes.    - Reviewer Licenses - [http://ibm.biz/invisionreviewer](http://ibm.biz/invisionreviewer) - Intended for engineers, OMs, executives, sales, marketing, legal.. really anyone needing to be involved in the prototyping process.## Watson AI Developer ToolingWe have a whole section of the site dedicated to Watson AI Developer Tooling.- Developer Guide## Software License Management (SLM)Watson (and many other [Business Segments](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/Software%20Group%20Software%20License%20Management/page/Find%20Your%20Admin%20Contact)) can request licenses for software through the SLM (Software Licence Management) Portal.- [https://slm.w3ibm.mybluemix.net/SLM/Products](https://slm.w3ibm.mybluemix.net/SLM/Products)## Productivity- Microsoft Office - Microsoft Office is available for all IBMers- Box.com - Unlimited, secure file storage and sharing for the enterprise.## Video ConferencingThe full list of approved video conferencing solutions can be found here: Allowed Video Conferencing Tools. Here are our favorites...- Slack has been [approved](https://github.ibm.com/Whitewater/Slack/blob/master/security-assessments/videoconference.md) for IBM Confidential audio and video calling - this is a GREAT solution for Squad-based video conferencing. Just click the phone handset icon to initiate a call!- WebEx Teams will be replacing WebEx (crazy, right?). [Click here](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/We9d96e02b974_45b4_9cf0_a6019d10ae7d/page/Spark%20Get%20Started) to request acccess to WebEx Teams. Note, everyone you want to join a WebEx Teams call will need a license too! Also note that the onboarding queue has been lengthy at times, its a corporate initiative, not a Watson initiative.- WebEx works for large groups, and allows screen sharing. [Click here](https://w3.ibm.com/help/#/article/setup_webex_acct/obtain_acct) to request access to WebEx. Please note that the onboarding queue has been lengthy at times, its a corporate initiative, not a Watson initiative. Its going to be replaced with Cisco Teams, so, why bother at this point...### DO NOT USE- Google Hangouts is absolutely, positively, NOT APPROVED for IBM Confidential conversations. Dont use it with your team, IBM Corporate Security doesnt allow it. Seriously. Dont use it.- IBM Security recently updated the Allowed Video Conferencing Tools page and took Zoom off the list. At this point, please stop using Zoom - Slack Video Calls are probably your best bet since a large percentage of our organization have been unable to get WebEx licenses. This is a _terrible_ situation but our hands are tied on this one. Well update this page if anything changes... ## Designing### Plug-Ins<!-- - Craft  Sketch 3 plug-in for using and editing Watsons design libraries -->- Marketch### Design- Type Scale Base ratios for your type sizes### Animation- Principle makes it easy to design animated and interactive user interfaces.### Accessibility- Colour Contrast Analyzer- Color Oracle is a free color blindness simulator for Window, Mac and Linux. It takes the guesswork out of designing for color blindness by showing you in real time what people with common color vision impairments will see.## Communicating### Presentations- Watson Presentation Templates  (contact Catherine Roedel for access)- Watson Presentation Toolkit### Email- Watson Email Signature- Watson Email Distribution Lists    Resources             Career and Communities        IBM Watson Agile Tools / Method / Culture Blog        Hosting Events        Buy On Demand        Departing Team Members    ### Career- [You and IBM](http://w3-01.ibm.com/hr/web/navigation/index.html)- [Checkpoint](https://checkpoint.w3bmix.ibm.com)- [Your Learning (aka THINK40)](https://yourlearning.w3bmix.ibm.com)- [Technical Leadership Mentors](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Watson%20%26%20Watson%20Health%20Operations/page/Technical%20Leadership%20Mentors)- [IBM CareerSmart](https://w3-01.sso.ibm.com/hr/careersmart/html/home.html)- [1-3-9 Our Purpose, Values & Practices](https://w3-workplace.ibm.com/ibm/ibmer/overview/)## The Archive - Older content you may want to refer to...### CommunitiesFor a _very_ long time, IBM Connections was the go to place for information. Today, collaboration happens in GitHub and Slack, reference material is here on the Playbook. You may find these useful references to older information...- [IBM Watson](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=76f4974e-15fb-41d1-8fa5-5ad4abc1ae4d)This is the main internally-public Watson community available to everyone in IBM.  There are multiple sub communities under this main which are restricted and members needs to be added/invited to join.- [IBM Watson Group](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=6d4a4008-c282-456b-86cf-0aacd6d53eab)This a a sub community of the main public Watson Group and intended for Watson Group employees only.### Older Communities / Links...Some of these Connections Communities are from the _early_ days of Watson. Were linking them here as they contain a wealth of useful historical information.- [New Hire Introduction](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Wedf3228cf5a3_4449_8fd7_ba8a9f97fcbd/page/Introduction)This page has great links for information on legacy projects.- [Watson Core Technology Team](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=9f0074ee-a126-43db-8d77-7c44df79dba5)The _original_ Watson Connections Community. It goes back to the days just after Jeopardy! Youll find lots of classic Watson information here...- [Engineering Productivity](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db)Engineering Productivity partners with Watson Innovations teams in order to drive continuous improvement in software engineering such that teams can rapidly develop and deliver high quality products.- [Watson Managers](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=244537c5-4672-47ca-8a63-875137e47a91)This is a restricted community for the Watson Managers.- [Watson Innovations Managers](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=69269805-4f9b-4d15-8268-d9c26f4a95b8)This is a restricted community for the Innovations Managers.### Optional CommunitiesOptional Communities you may wish to sign up for assuming they align to your teams focus.- [Digital IBMer](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=6c2eb3d7-595b-47f5-97e0-5eae31faf9d5)This community is designed to help IBMers build their digital eminence by being smart, social and secure.- [Watson Group Blogs](https://w3-connections.ibm.com/blogs/6d4a4008-c282-456b-86cf-0aacd6d53eab?lang=en)These are private blog posts intended for members of the Watson Group Community ONLY.- [IBMs TAP](https://ibm.biz/BdxtKD)The Technology Adoption Program (TAP) is where you can find, try, and share emerging technology! TAP brings together IBMers – from every location, business unit, and job role – who have innovative projects (innovators) and those who are willing to try new technology that helps them work smarter (early adopters). Initial link will direct to the Community / Wiki. You can also sign up to Subscribe to the newsletter.- [IBM Agile Academy](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=f14aa341-aeef-4a21-bf4c-df41faf817c7)This community is a cross-IBM Agile center of learning and capability development to create a shared understanding of Agile at IBM. We will do this by providing training and coaching to help IBMers grow their skills, a framework for measuring our maturity, and this community as a means to IBMers to support each other in their journey to become agile.- [Mac Community](http://w3-connections.ibm.com/communities/service/html/memberjoinsubmit?returnto=communityview&communityUuid=5387b4bb-23ee-4a4e-8948-fc5fc9666697&dangerousurlnonce=9D4G092D5B5EEF59414B9AF1F7A66C002F7D)This community is intended for those MAC users within IBM. It includes Tips & Tricks, as well as a Forum and Support Site.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/tools/index/",
    },
    {
      "title": "Onboarding",
      "text": "---title: Onboardingweight: 1---The IBM CIO Office has an organization called Toolbox@IBM, they bring us cool tools.### GitHub / MURAL / Box.comAll IBMers automatically have access to [GitHub](https://github.ibm.com), [MURAL](https://mural.ly), [Box.com](https://ibm.box.com). Hit those links and you can log right in with your w3ID!> ProTip: If you need to add a contributor to a GitHub Organization and/or Team - thats something the owner of the Organization and/or Team can do for you...### Slack[Slack](../../slack/) is messaging done right. We live in Slack.  IBM has hundreds of Slack Teams, you should join a few...Join your Home TeamFirst, join your home team. Your home Slack Team is aligned with your Segment (e.g. Watson, Cloud Data Platform, etc). You may have to request access, heres how...- [IBM Cloud](http://ibm-cloud.slack.com) - [[Request to Join](https://ibm.enterprise.slack.com/signin/find-teams/T15GKHBT4)]- [IBM Cloud Platform](http://ibm-cloudplatform.slack.com) - [[Request to join](https://ibm.enterprise.slack.com/signin/find-teams/T02J3DPUE)]- [IBM Watson Data Platform:](https://watsondataplatform.slack.com/messages) - [[Request to join](https://ibm.enterprise.slack.com/signin/find-teams/T4NN71GAU)]- [IBM Watson AI Platform](http://ibm-watson.slack.com)  There are some restrictions about joining the IBM Watson Slack Workspace. Heres the deal...  Watson AI Segment Members  - Most members joining the Watson AI Segment under Beth Smith will automatically get added to the IBM Watson Slack Workspace within 24 hours of joining their Squad.  - New Squad members can this link to log in for the first time: [https://ibm.biz/ibm-watson-slack-new-members](https://ibm.biz/ibm-watson-slack-new-members) (dont use this link if youre not in the above reporting structure, you wont get in).  - Contractors and P/T employees need to be onboarded manually - [open an issue](https://github.ibm.com/watson/slack-access-requests/issues/new?title=Slack%20access%20request%20for%20contractor%20or%20part-time%20employee).  Extended Cognitive Solutions and/or IBM Cloud Team Members.  - If you are a member of the greater organization under David Kenny, you can request access for your Squad by opening an issue [here](https://github.ibm.com/watson/slack-access-requests/issues/new?title=Slack%20access%20request%20for%20extended%20Watson%20and%20Cloud%20Platform%20team&body=All%20Watson%20Group%20members%20that%20report%20up%20to%20Beth%20Smith%20is%20automatically%20added%20to%20our%20Slack%20Team%20within%2024%20hours%20of%20joining%20the%20organization.%20There%20is%20no%20need%20to%20onboard%20new%20team%20members%20manually.%0A%0AWe%20can%20usually%20provide%20access%20to%20members%20of%20the%20extended%20Watson%20and%20Cloud%20Platform%20organization,%20but%20there%20are%20some%20restrictions%20that%20limit%20us%20from%20adding%20everyone.%20Well%20let%20you%20know%20if%20there%20are%20any%20problems.%0A%0APLEASE%20FILL%20IN%20THE%20FOLLOWING%0A%0A&#42;&#42;Segment%20name%20&#40;`e.g.%20Watson%20Data%20Platform`&#41;&#42;&#42;:%0A%0A&#42;&#42;Tribe%20name&#42;&#42;:%0A%0A&#42;&#42;Squad%20name&#42;&#42;:%0A%0A&#42;&#42;List%20of%20Squad%20Members%20as%20Email%20Addresses%20&#40;`name@xx.ibm.com`,%20not%20Notes%20IDs&#41;&#42;&#42;:%0A%0A%0A%0A)  Partner Teams  - If you are a member of a partner team that works directly with a team in Watson, the Watson manager you work with can request access for you by opening an issue [here](https://github.ibm.com/watson/slack-access-requests/issues/new?title=Slack%20access%20request%20for%20partner%20team)### Other IBM Slack TeamsNext, join one of the many other fine Slack Teams at IBM- Search for teams at [ibm.enterprise.slack.com](https://ibm.enterprise.slack.com/signin/find-teams)If you don’t find the right team, it may be unlisted or not yet on Slack Enterprise Grid. In that case, please search the list of additional teams and follow the instructions to get access.- [List of additional teams](https://whitewater.ibm.com/tools/slack/additional-teams-directory)See the [Slack](../../slack/) page for information about how we use Slack...### Other Common New Hire Onboarding Tasks...Here are some common onboarding tasks that new hires typically have to do. [Get on the IBM WiFi Network](https://w3.ibm.com/help/#/article/install_digicert/install_overview) [Request VPN Access](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/Wa0ede813c737_4a33_bdde_5788e9bede66/page/Request%20a%20Remote%20VPN%20Client) [Create AT&T Teleconference Account](http://conferencecenter.uc.att.com/GAC/IBM/Page9.aspx) [Setup Notes for the first time on a workstation](https://w3.ibm.com/help/#/en/article/install_notes)If you joined a team maintaining legacy products, you may require additional access requirements. Access request instructions can be found [here](http://watsonuniv.swg.usma.ibm.com/get_access.html) and [here](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Wa0ede813c737_4a33_bdde_5788e9bede66/page/Accounts%20&%20Systems%20Access). Your manager (or Squad Leader) will let you know if there are other tasks you need to complete when you join.### Watch the onboarding videosPlease watch these onboarding videos. They cover the tools, the expectations, and the restrictions modern tooling. All team members, including OM, Design, Engineering, Ops, and Support, need to watch these videos; these are team collaboration tools, everyone needs to be onboarded.(log into [https://ibm.box.com](https://ibm.box.com) to access all videos)#### Watch the introductory video (7 mins - 27MB)[Recording](https://app.box.com/embed/preview/ximmkmga6ms005633k9k1w999y8461df)#### Watch the Slack video (15 mins - 100MB)[Recording](https://app.box.com/embed/preview/8dnlt3rq1jh2q5j2kmezyftyutnbpces)#### Read the Slack at IBM training guide from the Toolbox@IBM Team- [http://ibm.biz/slack-at-ibm-training-guide](http://ibm.biz/slack-at-ibm-training-guide)#### Watch the GitHub & ZenHub video (40 mins - 600 mb)[Recording](https://app.box.com/embed/preview/fbl8bpims6qb5cfcljxz5bv5jm3o9vd9)### Optional Videos#### ZenHub Epics (updated 05/05/2016) - (10 mins - 177MB)[Recording](https://app.box.com/embed/preview/0sqrdh1uf3bifuyjg8edtadss5iyebls)#### Prioritizing Issues (3 mins - 24MB)[Recording](https://app.box.com/embed/preview/y96754tbnvoucccx0tl45pt04oggkk1u)#### Sprint Planning (4 mins - 60MB)[Recording](https://app.box.com/embed/preview/qiaxlior6pagr7ag7j783m25e8tdi5ij)#### GitHub Enterprise Ask me Anything  (45 mins - 700MB)- 02/16/2016 [Recording](https://app.box.com/embed/preview/qd7e77jq1u6v80f6j120ufgdkoqo18n9)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/tools/onboarding/",
    },
    {
      "title": "Getting Organized",
      "text": "---title: Getting Organizedweight: 4---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/tools/getting-organized/",
    },
    {
      "title": "",
      "text": "------![Concept Model Banner](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/concept-banner.png)## Key ConceptsTo help teams think about learning more deeply, weve developed a concept model which explores the key areas teams should consider. At the highest level there are four key areas. 1. Output - How do our AI products express outcomes to users?2. User - How do users relate to these outcomes?3. Input - What are users expectations and how do they express them?4. Learning - How does this information improve the product?Within each of these key areas, weve identified three key concepts. Many of these concepts overlap, and they are not intended to be entirely distinct. Our goal is just to provide some questions to consider as you create learning applications.&nbsp;#### Concept Model![Concept Model](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/concept-model.png)> Our learning model identifies a series of key concepts to help you in thinking about how interactions between AI and user can promote learning&nbsp;### 1. OutputAI products are built to provide users with some kind of information or insight - be that a recommendation, a conclusion, a summary, or a response to a user question. Each output is, in a way, a hypothesis; an informed guess at what we believe the user expects to see or hear. With each output we hope the system meets the users expectations, whilst at the same time learns something to help the system do better in the future. &nbsp;#### 1.1 ContentContent includes the domain such as health, law, food, home security or travel. It also includes what the specific information is which is being relayed - Is your AI describing an image, suggesting a route, finding a list of restaurants, warning of a risk, or summarizing an article? By thinking about the content of what is being communicated you can ensure that users have all the relevant information they need to make a decision. Thinking about content also allows you to think about the consequences of this information for the user. The greater the consequences, the more detailed information a user needs to correctly understand the situation, how the system arrived at an insight, and what they should do in response. By enabling your users to make better decisions, your system learns better behavior. ![Google Maps](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/google-maps.png)> If Google Maps didnt show you they were routing around a traffic incident, a user might mistakenly overrule the system when they shouldnt. Maps inform their users on why decisions were made, which leads to better feedback when users do choose to overrule. &nbsp;#### 1.2 MediumIn addition to what you are communicating to your user, you should consider how and where it is communicated. Many AI systems interact with users through spoken word, through written text, through a car interface or a pair of bluetooth headphones.  The medium used to communicate has a dramatic impact on what the system can, or even should, express. A voice interface isnt great for listing search results.  You wouldnt want to communicate certain types of information through a text message. The characteristics of the medium will create opportunities and limitations when it comes to how users choose to interact.![Health Bot](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/health-bot.png)> Here a sensitive discussion happens through a text chat interface which doesnt feel like the appropriate place for this type of conversation, or to provide feedback to the system. &nbsp;#### 1.3 OpportunityUsers can only respond when the interface allows them to do so. As the creators of the system, it is important to consider the situations in which users may want to give feedback, and ensure they have an opportunity to do so. For example, in an [Active Learning approach](https://pages.github.ibm.com/the-playbook/ai-design/learning/approaches/) users are not necessarily given the opportunity to correct every bad output, and this may cause frustration. With other approaches, users might be given more opportunities to respond, but may not find they can give the specific detail of feedback they want. In all these situations where the user is unable to respond effectively, you have an AI which is blind to its failures. By empowering your users to provide specific responses in as many situations as possible, you open up your system to more information. ![Face Recognition](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/face-recognition.png)> When Facebook detects you may be in an image, it first lets you review and determine whether the AI was correct or not. It doesnt add you automatically; it provides very explicit opportunities for users to involve themselves in the process.&nbsp;&nbsp;### 2. UserPeople each have their own goals, motivations and perspectives. If our products are to thrive, we have to consider not just what we want from our users, but how we are actively supporting them.&nbsp;#### 2.1 ContextWho is this user, what are their goals, and what is their current perspective? A doctor and a patient arent able to give the same types of responses to a medical diagnosis, although both have unique perspectives. Keep in mind what you know about your user when you pick opportunities for interaction, and tailor the opportunity to the users objectives and task. Think about each of your user types and what kinds of learning they are most interested in and most qualified to provide. Find a way to capture this information when you interpret the users feedback to make sure you scope the feedback correctly - is this feedback universally true, or only true for this user, completing this task, at this time? &nbsp;#### 2.2 EffortConsider how much of a burden it is on the user to improve the system. For example, are the prompts you give them too prevalent, constantly bothering them? Do the prompts involve too many user actions to complete? If you are asking the user to answer questions consider how many questions you ask, or how long it will take them to answer. For example, if the AI is summarising a legal report, even a highly trained lawyer will find a prompt like is this a good summary? difficult to answer quickly. Even a question which is simple to answer will feel like a burden if users are prompted many times a day. Be respectful of your users time and attention and find ways to incorporate learning seemlessly into natural interactions or easier activities. &nbsp;#### 2.3 MotivationA partial solution is to lower the amount of effort, make the task easier, but this isnt a complete fix as users wont take even simple actions if they dont see a purpose or benefitSome other learning approaches have to work harder to motivate users. For example, Google Translate uses a User Activated approach in which users volunteer better translations. In order to motivate more users to participate, Google have built and operate an incentive program. They make use of motivators like badges, community, early access, accolades and a sense of public good to encourage users. All of these motivators can be effective, but they require investment to create and work best when you have a large user base. Where you can, aim to gather information from users natural behavior. Where you have to alter user behaviors, change them as little as possible, and recognize you may need incentives, or additional features, to encourage users to participate in sufficient numbers.![Google Translate Community](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/google-translate.png)> The Google Translate Community program rewards active contributors through basic gamification like levels and badges, but also more tangible rewards, like community meet-ups and early access to new features, for top contributors. Typically only a small number of users participate in these programs so, if you need a good amount of data, you need a large user base or highly incentivized user. &nbsp;&nbsp;### 3. InputIn addition to providing the opportunity and motivation for users to help the system, we also have to make our systems receptive to the kinds of responses users want to provide. &nbsp;#### 3.1 Medium As with output, the input medium can have a big impact on how users are able to express themselves. Make the most of your medium. If you have a voice interface, pay attention to speech patterns, word choice and tone. Support users interrupting if they can tell your system misunderstood them. If you have a graphical interface, provide visual prompts and actions to encourage the user to interact with the information they are seeing. Show them more context through maps, images, charts or other data rich visualizations. Use your input medium to allow users to be active participants in using and improving the AI for their needs.&nbsp;#### 3.2 ExpectationThe goal of the Input section is to understand our users expectation in a nuanced way, such that the system behavior can be best optimized. Simple input systems, such as Yes/No questions, can provide deceptively clear data, but  arent effective at understanding the users underlying thoughts or motivations. Triangulating multiple questions and inputs can give the user more opportunity to express themselves, but need to be balanced against providing an experience which feels effortless. Users can best express their expectations if they are aware of all relevant information which the system takes account of. For example, when a user adjusts the temperature on their Nest, a green leaf appears when they pick the most eco friendly option. By providing the user with this information they now know they can communicate not just what temperature they want, but their preferences for eco-friendly behavior. This simple act of informing the user has a virtuous affect of allowing the system to gain a more nuanced understanding of their expectations.![Google Now](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/google-now.png)> A poor approach from Google Now. Users have the opportunity to provide feedback, but all they can communicate is relevant or not relevant.  Compare it to a prompt like Do you want to see 2 more articles about Ben Bernanke? which is more specific about topic and outcome.&nbsp;#### 3.3 ConnectedIn addition to what your system knows from your user, there is also information you can get from other sources. For example, your system could know the day of the week, the weather outside, whether its a school holiday, where the user is located, or what their calendar looks like. This additional information may allow you to create a better experience for your user and better interpret their behavior. For example, Nest tracks whether the user is home or away. If they are away, it saves energy by not trying to maintain the temperature as much. This provides a better experience for the user. Whilst this behavior is potentially beneficial, if users dont recognize that Nest is aware of whether they are home or not, they may find the system unpredictable. Again, as with 3.2, it is critical users are informed of what information the system takes account, so that they can make adjustments with this in mind. > When people interact with these systems, they’re influencing and adjusting the kinds of outputs they’ll see in the future. Those adjustments in turn will change how users interact with the system, which will change the models… and so on, in a feedback loop. This can result in “conspiracy theories” where people form incorrect or incomplete mental models of a system and run into problems trying to manipulate the outputs according to these imaginary rules. You want to guide users with clear mental models that encourage them to give feedback that is mutually beneficial to them and the model.>> - [Human Centered Machine Learning](https://medium.com/google-design/human-centered-machine-learning-a770d10562cd) Josh Lovejoy, Jess Holbrook, Google &nbsp;&nbsp;### 4. LearningFinally, how do we take all the different considerations up to this point, and use them to improve system behavior in line with user expectations?&nbsp;#### 4.1 ChangeNobody wants a smart thermostat which says Thanks for the suggestion every time you try to change the temperature. When users provide a response, immediately act to correct system behavior - changing the temperature, re-routing the car, correcting the legal contract - and show users what they want to see.  If users dont see the system responding to them, they lose motivation to continue participating. Not every behavior in an AI product needs to be the result of machine learning and data models. If you are having trouble training your AI to give the user immediate payoff, consider other ways you could satisfy them in the short term which might be more mundane. For example, storing basic user preferences which override your AI responses for each user. What matters is that users see the system matching their expectations. Achieve that any way you can. ![Nest Schedule](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/nest-schedule.png)> Nest uses machine learning to create a smart thermostat, but if you specifically tell it you want it cooler at a specific time, you can override the AI with a mundane schedule. Consider whether AI is really the right solution for the user problem. Consider other more predictable or cheaper solutions if appropriate.&nbsp;#### 4.2 PersonalizeWhen your users do choose to respond to the system, they ultimately speak for themselves and their personal preferences. Even in enterprise situations the person interacting with the system is an individual who would appreciate a system which works better for them. The best user experiences are those which are highly personalized for the particular user. A Nest thermostat which changes everybodys houses to the same temperature doesnt create a good experience for anybody. Prioritize the individual experiences of each user over creating a system which treats everybody the same.&nbsp;#### 4.3 Follow upBe active in seeking out additional data and learning. Does this new information call into question other actions your AI is taking which might now be high priority to validate? Use this learning to identify the next question you should ask to learn more. For example, perhaps once a user has selected Bicycle as their preferred transport, you ask them how far they like to cycle. Or if they say they are interested in the Federal Reserve, ask them if they are interested in Ben Bernanke. When you can find these opportunities to do follow you, are able to ask more relevant questions which helps the system learn faster, and be more valuable to your users.&nbsp;&nbsp;### Next StepsTo help you apply this concept model to your use cases, weve create a design thinking activity to brainstorm each topic. Draw each section on a whiteboard, or use our [Mural template](https://app.mural.ly/t/ibm14/m/ibm14/1520974274721/593712965d0b1da068d7cdb34608378118969c59). Have your team fill out post-its for each section, starting with Output and working your way around to Learning. We believe the biggest, unrealized, opportunity to improve AI products in the enterprise is to focus more on the context, knowledge and motivations of our users. We need to create patterns which users are more excited to interact with and which create personalized experiences with the AI. We hope teams can use this concept model, and activity, to create AI which improves and adapts to users expectations.				![Concept Next](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/concept-next.png)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/ai-design/learning/concepts/",
    },
    {
      "title": "",
      "text": "------![Introduction Banner](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/intro-banner.png)## A guide to creating AI applications which learn from usersBy Angela Swindell and Tom Roach, UX Design, IBM Watson&nbsp;### Contents1. Introduction to Learning in Human-AI interactions2. [Approaches to Learning in the Market](https://pages.github.ibm.com/the-playbook/ai-design/learning/approaches)3. [A Concept Model for Learning](https://pages.github.ibm.com/the-playbook/ai-design/learning/concepts)4. Design Principles (Coming Soon)5. Learning from multiple users  (Coming soon)&nbsp;### GoalsThe Artificial Intelligence (AI) domain is fast evolving and whilst the capabilities are well understood by data scientists and other research experts, figuring out the ramifications for products and services is still mostly ahead of us. Within the industry we see research giants like IBM, Google and Microsoft marching forward in terms of core capabilities that equip companies to explore this new space. We also have seen the first wave of companies which emphasize AI to carve out a new market space of smart devices or assistants. Beyond that, we also see companies with no particular AI brand nonetheless recognizing that AI capabilities can be a boon to them. Take Facebook who, whilst not explicitly an AI company, nonetheless depends on AI for features like photo-tagging which create the data they need, and the experience their customers want. So whilst core AI research is still a deeply technical domain, the opportunities out in the world to apply it depend heavily on non-AI experts.In writing this guide, we challenged ourselves to create a resource for product teams across the world to apply AI to their domain. We hope that, by sharing our AI expertise gained from working on UX at IBM Watson, we can help those in other domains think about the impact AI will have in their space.We chose Learning as our initial lens because it has some fascinating characteristics. The ability to learn is a unique promise of artificial intelligence; that machines are not just smart, but adapt by picking up new information. Learning also touches on how the relationship between user and computer may change over time; no longer a single, transactional interaction, but a growing harmony of user expectations and system behaviors.  We see products implementing AI techniques, but not always demonstrating AI characteristics. We want this guide to help teams drive more sophisticated AI characteristics into market; characteristics such as learning to improve behaviour based on user responses. This first release covers approaches to learning we see in the market, and a conceptual model to help teams think more deeply about the opportunity. We look forward to continued collaboration to make this a more informative resource. So please dive right in!Tom Roach & Angela Swindell - March 2018&nbsp;### Who is this guide for?Whether you are brand new to AI, a seasoned veteran, or somebody looking to apply AI to a new or existing product, we think you will find some interesting ideas here.- Data scientists- Offering teams- Designers- Developers- Marketers- Services & implementation teams&nbsp;&nbsp;[![Introduction Next](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/intro-next.png)](../approaches)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/ai-design/learning/introduction/",
    },
    {
      "title": "",
      "text": "------![Banner Approaches](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/approaches-banner.png)## Approaches to Learning in the Market There are various examples in the market of applications which use AI and machine learning for the purposes of providing users with a more capable and more delightful product.  Each has a different combination of learning styles with different levels of sophistication depending on the domain and use case. Weve identified four broad approaches to learning taken by applications. Most examples available are consumer products, primarily because the application of learning AI in the consumer market is far more mature. By taking a hard look at the work done in the consumer space, teams can rapidly learn from this to mature the enterprise space. >  The most valuable ML systems evolve over time in tandem with users’ mental models. When people interact with these systems, they’re influencing and adjusting the kinds of outputs they’ll see in the future. Those adjustments in turn will change how users interact with the system, which will change the models… and so on, in a feedback loop.>> - [Human Centered Machine Learning](https://medium.com/google-design/human-centered-machine-learning-a770d10562cd) - Josh Lovejoy, Jess Holbrook, Google&nbsp;### 1. User Supervised LearningThe first approach we look at is the most explicit form of learning. With this approach, every output of the AI system is exposed to the user for approval. Either no AI action is taken until a user has the opportunity to review it, or action is taken but the user is informed and explicitly asked to respond to each instance.##### Example: Facebook Face Recognition![Face Recognition](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/face-recognition.png)>When a user uploads an image, Facebook uses facial recognition to identify whether the user may be present in those images, and informs them. This allows users to discover any images they might be in and, if they are, to confirm to the system they want to be tagged. ##### Positives- Asking the user to review every instance prevents mistakes, which is important if there are significant consequences such as social repercussions.- Even when the AI is correct, the user may prefer not to go ahead with an AI recommendation; for example, if the image is embarrassing or private. The User Supervised approach gives the user more transparency and control over the AI actions.##### Limitations- The User Supervised approach doesnt work well when there is a large amount of data to review, or when data comes in large batches rather than a feed. - This approach is quite manual making the users attention a limiting factor. This is a poor choice for an application which needs to operate autonomously for periods of time, for example, a robot.&nbsp;### 2. Active LearningIn this approach, the system actively selects some specific examples to ask the user for input on. In the most sophisticated versions, examples are selected which will allow the greatest improvement to the system. This style is similar to the User Supervised approach in that it does explicitly ask the user whether they agree with the system or not. However, it differs in that it only asks for responses to some examples, rather than every instance. ##### Example: Google Now![Google Now](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/google-now.png)>Google Now provides a curated news feed which occasionally prompts users with questions about some of the articles to improve the quality of suggestions. Google Now usually asks the question Is this card useful right now?, however different examples of Active Learning use different prompts and interaction patterns. ##### Positives- Requires less attention from the user than a fully supervised approach.- Participation is usually optional which lets users only respond when they want.- Actively asking the user for input can give them a sense of control over the system.##### Limitations- Not good for use cases where there are significant consequences to the system being incorrect.- Depending on the prompt, the use may find it difficult to answer. For example, how would you respond to the question above if you had already read the article and found it interesting? Ideally Google should ask questions which are specific, and where the immediate and long term consequences of each answer are predictable. &nbsp;### 3. User Activated LearningIn this approach, the system provides a way for the user to choose to participate if they have something to say. Unlike the User Supervised and Active Learning approaches, here the system doesnt request or prompt the user to respond, but will let them contribute if they want to.##### Example: Google Translate![Google Translate](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/google-translate.gif)>Google Translate supports learning by allowing users to submit corrections to bad translations.##### Positives- User activated intervention gives users total freedom to participate when they want to, without bothering them with constant prompts- Because not every user is going to see this prompt, you can make it more detailed for those that do wish to respond.##### Limitations- Because users choose when to contribute, they may only do so in certain cases. You may not identify pervasive issues with your product behaviour which dont rise to the level of users correcting them. - Because there is no requirement for the user to interact, you may need additional incentives to convince users to contribute.&nbsp;### 4. Behavioral LearningUnlike the previous approaches, the Behavioral Learning approach doesnt ask the user to take any new actions. Rather than giving users the option to contribute new information, users are encouraged to interact with the system naturally; as they would with a non-AI system. Their behavior is then used by the system to learn their expectations. Taking this approach doesnt mean downplaying the role of AI in the system. Users may still be informed that the system learns from them. There may even be some additional setup steps or new features due to the AI capabilities. However the approach to learning emphasises collecting data from natural user actions, rather than prompting users to supervise the system. ##### Example: Nest[![Nest](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/nest.png)](https://youtu.be/1qkSkOn4h-A)> Nest is a consumer thermostat which uses machine learning to understand a users schedule and adjust to their personal temperature preferences. When a user adjusts the temperature, this is used to make predictions about the users personal schedule and how they will want the temperature to be set in the future. As an additional detail, users are informed through a leaf icon when their choices are particularly eco-friendly. Because users are aware of the most eco-friendly choices, Nest can also infer each users preferences when it comes to balancing comfort with energy conservation.##### Positives- This approach feels the most effortless. Users arent asked to behave any differently than they would just naturally using the product.- By providing the user with additional information like traffic times, or eco-friendly choices, the system can start to make predictions about other user preferences.##### Limitations- When users arent informed of key information, the system can quickly become unpredictable and frustrating. There are [many Nest reviews](https://www.tomsguide.com/g00/us/nest-learning-thermostat,review-2254.html?i10c.encReferrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8%3D&i10c.ua=1) where users say that they dont understand why their Nest acts the way it does.- When learning from many users, for example in a team context, contradictions in what different users prefer may end up with behavior no user likes. &nbsp;### SummaryThe right approach for your particular AI system probably uses a combination of several of the techniques above. Relying on just one approach can end up creating an experience which is constantly bothering the user for input, or one which feels like a completely unpredictable black box. Your use case, your user roles, and the consequences of the system making a mistake, are all things which should factor into your approach. There is no perfect solution which works for every application. However, there are some key concepts which we think are useful when building AI systems which incorporate learning. We cover them in the next section. [![Approaches Next](https://pages.github.ibm.com/the-playbook/resources/images/ai-design/learning/approaches-next.png)](../concepts)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/ai-design/learning/approaches/",
    },
    {
      "title": "",
      "text": "",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/getting-things-done/replays/",
    },
    {
      "title": "Watson Glossarytemplate: _markdown.html",
      "text": "---title: Watson Glossarytemplate: _markdown.html---&nbsp;##### A running wiki of Watson teams lexicon and lingo ___## BotIn regards to Watson, were still working on a clear definition for bot.In the world outside of Watson, a bot is an application that performs an automated task, such as setting an alarm, telling you the weather or searching online.A Watson Bot is an application that is able to interact with end users with a very “natural” user experience.  Although not mandated most of these interactions will be by either typing natural language or by speaking.A bot does not have an end-user interface itself.  The bot communicates through an API, which is accessed by an application running in a channel (web, iOS, etc.)     > [Strategy for Bots](https://medium.com/@ahhhlvaro/to-bot-or-not-to-bot-8a8b5a816543#.6fgo4wx26) by Watson Conversation Team Lead, Alvaro Soto> [Whats a Bot](https://w3-connections.ibm.com/blogs/weameetings/entry/Watson_Bots?lang=en_us) by Watson Distinguished Engineer, Rob Yates___## Cognitive Computing A category of technologies that uses natural language processing and machine learning to enable people and machines to interact more naturally to extend and magnify human expertise and cognition.Corpus: A collection of source documents that have been ingested by the system, but not yet trained for a specific domain or target solution.___## Hypotheses The process of producing possible answers to a given question. When asked a question, Watson relies on hypothesis generation and evaluation to rapidly parse relevant evidence and evaluate responses from disparate data.___## IBM Watson Group A new IBM business unit formed in January 2014 with the goal of boosting the development and adoption of cloud-delivered cognitive applications and services.___## Ingestion The process of feeding data into the system to create its base of knowledge. Processing is performed on the content as it is added to the system, including the creation of derived data resources such as search indexes and a formal knowledge base, and natural language preprocessing of text corpora.___## Machine Learning Model The application of past experience, such as training data, to determine or predict the correct outcome of future experiences based on characteristics of the data. These past experiences are captured in the form of a model by calculating feature scores for each candidate answer or evidence and combining that with known outcomes.___## Natural Language Processing (NLP) A field of artificial intelligence and linguistics that studies the problems inherent in the processing and manipulation of natural language, with an aim to increase the ability of computers to understand human languages.___## SkillA piece of Watson technology translated into an API so products are able to use. Customers use [Bluemix](http //www.ibm.com/cloud-computing/bluemix/watson/) to browse, demo and purchase skills.___## Tooling The administration, configuration, and set up interface for a product___## Training Data A set of question and answer pairs that are used to teach the machine learning models in the system. These questions and answers are representative of the types of questions that users might ask and answers expected in the use case.___## Unstructured Information Management Architecture (UIMA) An Apache architecture that defines a framework for implementing systems, such as Watson systems, for the analysis of unstructured data.___## Unstructured Data Any data that is stored in an unstructured format rather than in fixed fields. Data in a word processing document is an example of unstructured data.___## Watson A cognitive computing system that specializes in understanding the meaning of questions posed in natural human language and that draws on a broad domain of knowledge to respond quickly.___## Watson Company Analyzer Helps users reduce the time and effort to collect, digest and synthesize information for building strategic business relationships through comprehensive company profiles—enabling them to better understand customers and accelerate opportunities.___## Watson Engagement Advisor Interacts with customers, listens to questions and offers solutions, learning with every human interaction and growing its collection of knowledge—quickly adapting to the way people think.___## Watson Explorer Accesses and analyzes structured and unstructured content—presenting data, analytics and cognitive insights in a single view, giving users the information they’re looking for while uncovering trends, patterns and relationships.___## Watson Health Solutions From advancing personal training to cancer treatment, from clinical trial matching to insulin pumps that think, Watson Health is transforming the way organizations deliver health and wellness.___## Watson Knowledge Studio Enables subject matter experts and developers to teach Watson the linguistic nuances of industries and knowledge domains—without writing a single line of code.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/resources/watson-glossary/",
    },
    {
      "title": "Watson Librarytemplate: _layout.html",
      "text": "---title: Watson Librarytemplate: _layout.html---&nbsp;##### Recommended articles, books and videos for understanding the cognitive future___### Books[Thinking, Fast and Slow](https://smile.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman-ebook/dp/B005MJFA2W/ref=sr_1_1?s=books&ie=UTF8&qid=1470250794&sr=1-1&keywords=Thinking%2C+Fast+and+Slow#navbar)    [Beyond the Brain](https://smile.amazon.com/Beyond-Brain-Environment-Shape-Animal/dp/0691165564/ref=sr_1_1?ie=UTF8&qid=1470250509&sr=8-1&keywords=Beyond+the+Brain)[Proust and the Squid: The Story and Science of the Reading Brain](https://smile.amazon.com/Proust-Squid-Story-Science-Reading/dp/0060933844/ref=sr_1_1?s=books&ie=UTF8&qid=1470250578&sr=1-1&keywords=Proust+and+the+Squid)[Supersizing the Mind](https://smile.amazon.com/Supersizing-Mind-Embodiment-Cognitive-Philosophy/dp/B004MDLRQW/ref=sr_1_1?s=books&ie=UTF8&qid=1470250613&sr=1-1&keywords=Supersizing+the+Mind#navbar)[Metaphors We Live By](https://smile.amazon.com/Metaphors-We-Live-George-Lakoff/dp/0226468011/ref=sr_1_1?ie=UTF8&qid=1471972766&sr=8-1&keywords=metaphors+we+live)[Seeing What Others Dont](https://smile.amazon.com/Seeing-What-Others-Dont-Remarkable/dp/1610393821/ref=sr_1_1?s=books&ie=UTF8&qid=1470250680&sr=1-1&keywords=Seeing+What+Others+Don%E2%80%99t)[The Way We Think](https://smile.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Dstripbooks&field-keywords=The+Way+We+Think)[Women, Fire, and Dangerous Things](https://smile.amazon.com/Women-Fire-Dangerous-Things-Categories/dp/B009PS2RXG/ref=sr_1_1?s=books&ie=UTF8&qid=1470250747&sr=1-1&keywords=Women%2C+Fire%2C+and+Dangerous+Things#navbar)[Predictably Irrational](https://smile.amazon.com/Predictably-Irrational-Hidden-Forces-Decisions-ebook/dp/B002RI9QJE/ref=sr_1_1?s=books&ie=UTF8&qid=1470250772&sr=1-1&keywords=Predictably+Irrational#navbar)[Kanban: Successful Evolutionary Change for Your Technology Business](http://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402/ref=sr_1_1?ie=UTF8&qid=1458779210&sr=8-1&keywords=kanban)### Free Books on [Safari Books Online](http://safaribooksonline.com)[Site Reliability Engineering](https://www.safaribooksonline.com/library/view/site-reliability-engineering/9781491929117/)[Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, Video Enhanced Edition](https://www.safaribooksonline.com/library/view/continuous-delivery-reliable/9780321670250/)[Lean Enterprise](https://www.safaribooksonline.com/library/view/lean-enterprise/9781491946527/)[The Progress Principle: Using Small Wins to Ignite Joy, Engagement, and Creativity at Work](https://www.safaribooksonline.com/library/view/the-progress-principle/9781422142738/)[The Phoenix Project](https://www.safaribooksonline.com/library/view/the-phoenix-project/9781457191350/)[Agile Testing: A Practical Guide for Testers and Agile Teams](https://www.safaribooksonline.com/library/view/agile-testing-a/9780321616944/)### Videos[AI, Deep Learning, and Machine Learning: A Primer](https://vimeo.com/170189199#collections)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/resources/watson-library/",
    },
    {
      "title": "Career and Communitiestemplate: _layout.html",
      "text": "---title: Career and Communitiestemplate: _layout.html---### Career[You and IBM](http://w3-01.ibm.com/hr/web/navigation/index.html)[Checkpoint](https://checkpoint.w3bmix.ibm.com)[Your Learning (aka THINK40)](https://yourlearning.w3bmix.ibm.com)[Technical Leadership Mentors](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Watson%20%26%20Watson%20Health%20Operations/page/Technical%20Leadership%20Mentors)[IBM CareerSmart](https://w3-01.sso.ibm.com/hr/careersmart/html/home.html)[1-3-9 Our Purpose, Values & Practices](https://w3-workplace.ibm.com/ibm/ibmer/overview/)### CommunitiesFor a _very_ long time, IBM Connections was the go to place for information. Today, collaboration happens in GitHub and Slack, reference material is here on the Playbook. You may find these useful references to older information...[IBM Watson](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=76f4974e-15fb-41d1-8fa5-5ad4abc1ae4d)This is the main internally-public Watson community available to everyone in IBM.  There are multiple sub communities under this main which are restricted and members needs to be added/invited to join.[IBM Watson Group](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=6d4a4008-c282-456b-86cf-0aacd6d53eab)This a a sub community of the main public Watson Group and intended for Watson Group employees only.### Older Communities / Links...Some of these Connections Communities are from the _early_ days of Watson. Were linking them here as they contain a wealth of useful historical information.[New Hire Introduction](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Wedf3228cf5a3_4449_8fd7_ba8a9f97fcbd/page/Introduction)This page has great links for information on legacy projects.[Watson Core Technology Team](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=9f0074ee-a126-43db-8d77-7c44df79dba5)The _original_ Watson Connections Community. It goes back to the days just after Jeopardy! Youll find lots of classic Watson information here...[Engineering Productivity](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db)Engineering Productivity partners with Watson Innovations teams in order to drive continuous improvement in software engineering such that teams can rapidly develop and deliver high quality products.[Watson Managers](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=244537c5-4672-47ca-8a63-875137e47a91)This is a restricted community for the Watson Managers.[Watson Innovations Managers](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=69269805-4f9b-4d15-8268-d9c26f4a95b8)This is a restricted community for the Innovations Managers.### Optional CommunitiesOptional Communities you may wish to sign up for assuming they align to your teams focus.[Digital IBMer](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=6c2eb3d7-595b-47f5-97e0-5eae31faf9d5)This community is designed to help IBMers build their digital eminence by being smart, social and secure.[Watson Group Blogs](https://w3-connections.ibm.com/blogs/6d4a4008-c282-456b-86cf-0aacd6d53eab?lang=en)These are private blog posts intended for members of the Watson Group Community ONLY.[IBMs TAP](https://ibm.biz/BdxtKD)The Technology Adoption Program (TAP) is where you can find, try, and share emerging technology! TAP brings together IBMers – from every location, business unit, and job role – who have innovative projects (innovators) and those who are willing to try new technology that helps them work smarter (early adopters). Initial link will direct to the Community / Wiki. You can also sign up to Subscribe to the newsletter.[IBM Agile Academy](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=f14aa341-aeef-4a21-bf4c-df41faf817c7)This community is a cross-IBM Agile center of learning and capability development to create a shared understanding of Agile at IBM. We will do this by providing training and coaching to help IBMers grow their skills, a framework for measuring our maturity, and this community as a means to IBMers to support each other in their journey to become agile.[Mac Community](http://w3-connections.ibm.com/communities/service/html/memberjoinsubmit?returnto=communityview&communityUuid=5387b4bb-23ee-4a4e-8948-fc5fc9666697&dangerousurlnonce=9D4G092D5B5EEF59414B9AF1F7A66C002F7D)This community is intended for those MAC users within IBM. It includes Tips & Tricks, as well as a Forum and Support Site.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/resources/index/",
    },
    {
      "title": "IBM Guidelines",
      "text": "---title: IBM Guidelines---[IBM Analytics](http://apguide.stage1.mybluemix.net/)[IBM Cognitive Naming](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/IBM%20Watson%20Naming%20Guidelines/page/Cognitive%20Naming%20Guidelines)[IBM Design Language](http://www.ibm.com/design/language/)[IBM Design Thinking](http://www.ibm.com/design/thinking/)[IBM Design Thinking University](http://gbslearn.atlanta.ibm.com/iSPO/design_thinking_university/index.html)[IBM Design Research](http://design.ibm.com/design/research/)[IBM Security](http://security-design-guide.stage1.mybluemix.net/)[IBM User Experience Guide](http://idl-xp-preview.rtp.raleigh.ibm.com/design/language/experience/?pk_campaign=IBM_DL-DesignStudiosWW_160614)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/resources/ibm-guidelines/",
    },
    {
      "title": "Hosting Events",
      "text": "---title: Hosting Events---So, youre going to hold an event. This page is a collection of things weve found helpful when running events around the Watson Universe...OutcomeBefore you start planning for an event, stop and ask yourself if you even need it. Why are you holding the event? What outcome are you trying to achieve? Teach people something? Change the way a team works? Increase Unit Test Coverage? Figure that out first before you do anything else. Events are expensive from a resource perspective, make sure that the outcome will benefit everyone that attends.PlanningOnce I understand the outcome I want to achieve, I break it down into topics that will help achieve that.  I do this fast and low tech. Sticky notes and whiteboards. One sticky note per hour, draw a few quick columns, and start mapping out the day(s). Edit, edit, edit. Work on limiting yourself.Everyone that attends your event is a human being and as such, needs downtime.  Much more than youd think. Based on feedback Ive gotten, 30 mins in the morning, 45 mins for lunch, 30 mins in the afternoon. Dont punish anyone for having to get up and briefly leave. Dont lock the doors. People need to feel free to come and go, tell them that.You should make sure you have proper buy-in so that people can attend your event without their day job interfering. Also, think about holidays and vacations! Work around these things.Buy-inNow that youve figured out an agenda that will achieve the desired outcome, you need buy-in from leadership. Not yours, leadership from each of your attendees should provide support for their people to attend without having to duck out for meetings. Ask managers to send a note that says something like This is important, cancel or reschedule any meetings you might have during the event, we want you to be able to fully participate.WhoBottom line, you want the whole team involved with most kinds of events. Have you only invited Engineering? Did you invite specialists in OM? Ops? Design? Have you excluded anyone by band? Not all change comes from above, most revolutions start from below, dont forget to include those that might not normally get a seat at the table.Web ConferencesFace to face communication works far better than anything else. Weve all been on countless remote meetings where ten minutes or more is wasted on trying to get a web conference running. Dont waste peoples time.If you absolutely MUST have a remote web conference, book yourself and any presenters into a pre-meeting 30 minutes before the web conference to get set up and work through any kinks. People should be able to dial in, hit the conference and see the title slide / screen the moment youre scheduled to start.RoomsBooking a room is usually just a matter of using the Find Rooms option in your calendar. Some rooms are managed by people that approve the use of your room.All of the labs have a variety of room types; classrooms, conference rooms, all hands rooms and more.Littleton- If youre going to use one of the all hands rooms in Littleton, MA, you have to open a work ticket (http://ibm.biz/workticket) _after you reserve the room_ to specify what room layout you want.- A1407 is the large all hands room- A1409 is the smaller all hands room- A1611/12/16/17 are the training roomsWhenIf youve traveled to a location, remember that the people coming to your event live there. As such you should remember that people have lives, horrible commutes, need coffee, etc.- Schedule your event to start at 9AM, but plan for a 9:20AM start.- Schedule your event to end at 5PM but plan for a 4:30 stop.Bake that into your schedule.InvitationsUse an inviter. Event Central is the main one I use. Its not incredibly intuitive but it gets the job done. The single biggest confusing thing that confused me at first is that an Event is really more like a Series of events. You create an Event like CodeRetreat and then add Sessions in that event. The session invites are what you send out. Heres a quick step by step:- Go to Event Central    - https://learn.atlanta.ibm.com/ec/- Create a New Event- Once youve created an event, click Schedule and then click By Date- Now you can create a session for your event by clicking the New Session buttonTo send out invites, do the following:- Click on your Session- Click Inviter Options- Click Share Link- Copy the second link in the dialog (this will auto-enroll users)- Paste that link into your mass mailing/blog post/etcContent- Less is more. Keep your slides simple and clean. Follow [Guy Kawasackis 10/20/30 rule for slides](http://guykawasaki.com/the_102030_rule/)- Dont put up an Agenda slide - you want to surprise and delight your audience - dont preview what youre going to talk about- In a multi-day session, dont have a presentation about what the other presentations are going to be about.Prepare & PracticeTalking to slides? Run through your pitch every day on the way to work for at least a week.Doing a demo? Run through it at least 10 times before.- Have screenshots as backup for those days that the system/network/internet explodesEnergyYou are putting on an event, an event! You need to keep the energy going in the room. Keep them awake, alert and excited! You need to show them how much youre excited and be bigger than life.That being said, be aware that too much enthusiasm can be off-putting. Remember to look around the room for someone that gets it and pull them into your presentation.RetrospectiveAlways hold a Retrospective at the end of your event. Use the feedback to make the next one better.Never run a Retrospective? Visit the [Agile Playbook](agile)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/resources/hosting-events/",
    },
    {
      "title": "Watson Universitytemplate: _markdown.html",
      "text": "---title: Watson Universitytemplate: _markdown.html---&nbsp;##### IBMs internal educational resources for learning about Watson and cognitive technology___### About Watson[Watson 101](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W0f52bbf68d89_4c26_8981_016213442e59/page/Watson%20101)[Watson Academy](http://lt.be.ibm.com/watsonacademy) (note, this site is tailored to classic Watson solutions)[Watson Continuing Education](http://watsonuniv.swg.usma.ibm.com/welcome.html)[Watson University](https://w3-connections.ibm.com/communities/service/html/communityoverview?communityUuid=3aabb03b-4ff7-49db-9e16-198a9a87b765)[Become a Watson Ambassador](https://yourlearning.w3bmix.ibm.com/#activity/BLOG-42C66)[Watson Brand Community Wiki](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W0f52bbf68d89_4c26_8981_016213442e59)[Watson Outthink](http://www.ibm.com/cognitive/outthink/?iio=CHQ&cmp=C3440&cm=k&csr=agus_outthink&cr=google&ct=C34403YW&cn=Cognitive_General_BMM_BR&S_PKG=&S_TACT=C34403YW&campaign=Agenda%20-%20Cognitive_General_Broad_BR&group=Cognitive_General_BMM_BR&mkwid=0f97ee50-17e9-4360-a835-e145518b2502|447|132549900767&ck=%2Bibm%20%2Bcognitive&cs=b&ccy=US)### Watson Products[Wiki for all Watson Products and Industries](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W9d6c1069a159_40a3_a3ec_187b00f55c3f/page/Watson%20Integrated%20Toolbox?section=Watson%20Core)[IBMs Marketplace / Cognitive IBM Products](https://www.ibm.com/marketplace/cognitive/us/en-us)      [IBMs Marketplace / Cognitive App Gallery](http://www.ibm.com/marketplace/cognitive/cognitive-apps/)      ### The Watson Organization[The Watson Ecosystem](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W9d6c1069a159_40a3_a3ec_187b00f55c3f/page/Ecosystem)[The Watson Organization Chart](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W9d6c1069a159_40a3_a3ec_187b00f55c3f/page/Watson%20Organization)[Watson Org Resources Wiki](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W9d6c1069a159_40a3_a3ec_187b00f55c3f/page/Resources)### Cognitive[IBM Marketplace: Watson APIs](http://www.ibm.com/cloud-computing/bluemix/watson/)[Think Academy: Cognitive in 20 Minutes](https://w3-workplace.ibm.com/ibm/thinkacademy/?cache=7-23-9#/home)[Welcome to the Cognitive Era by IBM Think Academy](https://w3-workplace.ibm.com/ibm/thinkacademy/?cache=7-2-14#/cognitive-business/all-ibmers)[Watson Cognitive Build: Outthink Challenge 2016](https://cognitivebuild.w3bmix.ibm.com/launch/)[Watson Outthink: How the world is using Watson](http://www.ibm.com/cognitive/outthink/?iio=CHQ&cmp=C3440&cm=k&csr=agus_outthink&cr=google&ct=C34403YW&cn=Cognitive_General_BMM_BR&S_PKG=&S_TACT=C34403YW&campaign=Agenda%20-%20Cognitive_General_Broad_BR&group=Cognitive_General_BMM_BR&mkwid=0f97ee50-17e9-4360-a835-e145518b2502|447|132549900767&ck=%2Bibm%20%2Bcognitive&cs=b&ccy=US)### Watson Social[Watsons YouTube](https://www.youtube.com/c/ibmwatsonsolutions)[Watsons Facebook](https://www.facebook.com/ibmwatson)[Watsons Twitter](https://twitter.com/IBMWatson)[Watsons Google+](https://plus.google.com/+IBMWatsonSolutions)[Watsons LinkedIn](https://www.linkedin.com/company/ibm-watson)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/resources/watson-university/",
    },
    {
      "title": "Launch Readiness",
      "text": "---title: Launch Readiness---After your new offering is approved by the MMT, or if youre an offering thats already Generally Available (GA), you will enter a state of perpetual development and design, i.e. ongoing delivery.  Existing Hills will be taken, new ones created, and the cycle will repeat infinitely.  This corresponds to the loops around the [OM wheel](http://calmedia.atlanta.ibm.com/om_academy/process_artifacts.php).  Each Hill has a refinement step in the backlog (i.e. Define and Prove) where it gets detailed and validated through market experiments, the decomposed to Epics, and eventually rises to the top of the backlog where it is completed (i.e. Build and Deliver).  All the while, data is gathered from both quantitative sources (financials and usage metrics) and qualitative sources (NPS survey data, customer feedback, user research) to help the OT make smart decisions about what to prioritize next (Sense and Respond).During Build and Deliver, the team sets a milestone schedule and Launch dates after decomposing their Hills into Epics. As you near each release of your offering (Experimental, Beta, GA), you will complete a Launch Readiness Playback with your Offering Team (OT). There are [Launch Readiness Templates](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W57e951d4f2d9_4f03_9055_13737a926af9/page/Launch%20Readiness%20%20-%20Template) in wiki page format that get copied over, completed, and stored on each OTs wiki. The Offering Team Program Manager (OTPM) will create the pages and facilitate the review cadence with the OT. The Launch Readiness Playback serves two purposes:1. To Playback the results of the Launch efforts to the broader team, which can be coupled with a [Retrospective](agile/ongoing-delivery/schedule-retrospective/)2. To record the decisions, actions, and assets/records in one place that auditors can review as needed.The Offering Manager is the Go To Market (GTM) Owner and has a [GTM Readiness](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W57e951d4f2d9_4f03_9055_13737a926af9/page/Go%20To%20Market%20Readiness%20-%20Template) page. OM will decide based on the scope of the release which GTM items are required and will work together with Sales, Marketing, and other groups to create the assets and communications channels needed. In this way, the OM acts as a decision maker and as a project manager to ensure that we choose the right activities for the launch and that activities get completed at the right time to match the launch dates. They may need to manage the work with their own GTM squad in GitHub with their own team ceremonies as needed to ensure coverage and completion.The Release Manager owns the [Offering Readiness](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W57e951d4f2d9_4f03_9055_13737a926af9/page/Offering%20Readiness%20-%20Template) page and ensures that all testing and verifications are complete. The Release Manager may work with various development functions (Dev Managers, Architects, Documentation, ID) as well as other key functions (Legal, Brand, Pricing, RFA writers, etc) to ensure that the offering itself is ready (Coded, Verified, Validated, Production Ready) and that other Key Deliverables (Legal, Globalization, Accessibility, etc) are complete. The number of additional deliverables will depend on the type of release and the delivery method of the offering. If you are delivering on Bluemix, there are additional requirements from the platform team that must be completed and incorporated into your checklist. The Release Manager hosts their own cadence outside of the OT and manages their squad in GitHub with their own team ceremonies as needed. The Release Manager is also the Point of Contact to provide updates to their leadership team (bi-weekly Innovations Status call) using the [Watson Quarterly Tracker](https://github.ibm.com/Watson/quarterly-project-tracker#boards?&showClosed=false) (requires ZenHub).Sometimes there is cross-over with members of both teams and it makes sense to combine some of the tasks/cadences (especially for smaller releases). Overall, the Launch Plan must include the Offering Readiness and GTM Readiness with collaboration across the OT for the final Launch Readiness Playback.The Sense and Respond part of the OM Wheel should be happening on a continuous basis. The OT should decide which metrics are most important to the Offering and will set up how/when to track them. These metrics are also frequently used for Executive communication. Many do track revenue attainment on the Product Management Dashboard or come up with their own version of a dashboard to track the key metrics that are important to their team.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/om/launch-readiness/",
    },
    {
      "title": "Creating a New Offering",
      "text": "---title: Creating a New Offering---## OverviewBefore an offering is brought to market, it must first be defined and validated.  The [OM Academy](http://calmedia.atlanta.ibm.com/om_academy/index.php) provides in depth education for offering managers on the key skills needed to effectively define offerings.  In this section of the Playbook, we define how the [Offering Management Model](http://calmedia.atlanta.ibm.com/om_academy/process_artifacts.php) fits into Watsons implementation of Agile.The basic process consists of three iterations:Each iteration expands on the former, adding detail and validation before bringing the new offering to the MMT for approval to move into ongoing development.  Working through all three iterations will varying by project. On average, plan for roughly 12 weeks to complete the full cycle.Work should be conducted with the guidance of an Offering Team Program Manager (OTPM) and should be tracked in GitHub.Before proceeding to the first iteration, make sure these per-requisites are complete:1. Identify your OT Program Manager and as much of your exploratory team as possible.  This should include an OM, Designer(s), and a consulting Dev lead or architect.  If you cant secure Design or Development assistance early on, try to get a consult from each discipline, and then work with your OTPM to secure resources starting in Iteration 2.2. Create a new issue tracker repo in GitHub, inside the [Watson organization](https://github.ibm.com/Watson).3. Schedule your recurring Agile ceremonies. Your team will work in sprints during this process, and should use the basic Agile process to manage your work across all the disciplines.  This ensures everyone is aligned to a common set of goals, and a common timeline.4. Create a new epic in the [Strategic Planning tracker](https://github.ibm.com/Watson/strategic-planning/wiki) for communication to executive leadership.  As milestones are reached for each iteration, the Strategic Planning tacker should be updated to keep leadership informed of your overall progress and readiness for playbacks.## Iteration 1: Explore the MarketNow that youre set up in GitHub, its time to get to work!  In this iteration, the Offering Manager researches a potential market and business model to determine if its worth investing time and resources to explore further.Typical activities include:- Market Research- Generative User Research- Collaboration with other parts of IBM (GBS, Research, etc)- Creation of the [Business Model Canvas](https://ibm.box.com/s/rcrfyht8xmfhc0lczf4epdqwfheevz57)### Iteration 1: DeliverablesAt the end of this phase, a Business Model Canvas and Market POV are presented to the Offering Management VP during a Decision Playback.  Execs from Design and Development should also attend the playback to provide input, stay abreast of the projects progress, and secure resources for the next iteration .>[Download the Exploration Playback template and an example](https://ibm.box.com/s/y3xb3b9retdby0o1tte196b8cbbgqgjo)## Iteration 2: Validate the OpportunityIn this iteration, the team expands the idea into a more detailed view of a specific market segment, and the segments need.  They then propose one, or more, solutions and conduct experiments with the market to validate or refute the proposed solution.Market experiments can take several different forms, but all should start with a statement of the problem in the form of Hills, and a proposed solution to test.The testing artifact will typically be a prototype (aka a solution concept or concept car).  Prototypes can take many forms, from interactive presentations used to collect feedback, all the way to semi-functional applications for usability testing.  To determine the correct type of prototype and level of fidelity, the Design Researcher should prepare a Market Experiment Plan with the agreement of OM and Dev.The team should not expect the initial market experiment to validate the opportunity.  In many situations, the initial solution or prototype may not produce the results desired.  In this case, the team needs to make a decision to pivot, and create a new solution, or abandon the opportunity and end the project.  If the decision is made to continue, a new solution concept should be proposed, a new plan documented, and another market experiment run.  If multiple pivots are required, this iteration of the project could take several months to complete.>[Download an example Solution Concept](https://ibm.box.com/s/blp3of5dnobhvwcsg7vxcywnhmqtdn6j)>[Download the Market Experiment template and examples](https://ibm.box.com/s/n9x07z2bzywsqs1igsl8glfxqzas69tc)### Iteration 2: DeliverablesAt the end of the iteration, if a validated solution concept has been produced, and a Decision Playback is conducted with the OM VP, as well as Design and Dev execs.  The team should present:- Validated Business Model/Canvas- Hills- Results of Market Experiment(s)- Initial Business Case>[Download the Market Validation Playback template and an example](https://ibm.box.com/s/y3xb3b9retdby0o1tte196b8cbbgqgjo)## Iteration 3: Operationalize the OfferingThe team has validated the opportunity with the market and has feedback from potential users.  It is now time to update the solution concept and business case based on the knowledge gained from Iteration 2.  These updates culminate into a decision playback for the MMT.  This commitment pitch includes pricing & packaging, full business model, delivery method, KPIs, team (i.e. resources needed) and potential ROI.Key activities in Iteration 3: Update the Solution Concept/Prototype Revise Hills and define MVP Make a Resource Plan Pricing & Packaging Investigate/Architect Delivery Model KPIs (set the Success Criteria) Playback 0 demonstrating the validated Solution Concept.  Playback 0 should occur in advance of the decision playback so that MMT members have the opportunity to view the playback recording.### Iteration 3: Deliverables> [Download the Playback 0 template](http://calmedia.atlanta.ibm.com/om_academy/pdf/model/Playback_0_deck.pptx)> [Download the Commitment Pitch Playback template and an example](https://ibm.box.com/s/y3xb3b9retdby0o1tte196b8cbbgqgjo)## Taking the Next StepIf the offering is approved by the MMT, it is time to move into full Agile development and design.  During the Playback the offering leaders need to secure the following information: Dedicated resources from Development, Design, and Offering Management Priority level in relation to other existing offerings> Next Steps: [Organize the Squads](../../ibm-squad-thinking) and [Build Your Backlog](../../agile/ongoing-delivery/hills-epics-stories-usecases/)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/om/new-offering-definition/",
    },
    {
      "title": "IBM Design Thinking",
      "text": "---title: IBM Design Thinkingweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/design-guild/design-thinking/",
    },
    {
      "title": "Accessibility",
      "text": "---title: Accessibilityweight: 3---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/design-guild/accessibility/",
    },
    {
      "title": "Meet Duo",
      "text": "---title: Meet Duoweight: 1---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/design-guild/meet-duo/",
    },
    {
      "title": "Design Guild Guide...",
      "text": "---title: Design Guild Guide...---## Watson & Cloud Platform Design Guild- [Meet Duo](https://www.ibm.com/innovate/brand/)    - [Duo Guidelines](https://duo-preview.w3ibm.mybluemix.net/)- [AI Accelerator Program](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/Wa6ded752885c_43dc_bf4a_7fcdcb918d97/page/About%20the%20Program)- [AI 101 Courses](https://yourlearning.ibm.com/#channel/CNL_LCB_1525119180321)- [Learning in Human/AI Interaction](../../ai-design/learning/introduction/)- Wake: A hub for collaborative critique [https://ibm.wake.com](https://ibm.wake.com/)- [Sketch Licensing](../../watson-design-guide/sketch-licensing)## Cloud Design Guide    Carbon Design System    Accessibility Guidelines and Tools    Bluemix User Research## Additional Resources  IBM Design Thinking  IBM Design Icons and Resources  IBM-wide Design Guides## Watson Platform Design Guide (Deprecated Resources)    Cognitive Thinking Workshop    Watson Design Kit 2.0 (Requires Sketch)    Getting Started with Watson Design    Watson Archetypes    Watson Portfolio Review    2017 Competitor Review",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/design-guild/index/",
    },
    {
      "title": "Setup for Designers",
      "text": "---title: Setup for Designers------ Use the Sketch Watson Design Library to build and stay up to date with Watsons latest components and patterns. ___- [Get started with Sketch](tools/sketch)		- [Download the Watson Sketch Library](https://ibm.box.com/v/WatsonDesignLanguage)___## Watson Design Library 2.0 will launch June 2017!## Watson Online Design Guide coming end of summer 2017!",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/setup-for-designers/",
    },
    {
      "title": "Guideline Demo",
      "text": "---title: Guideline Demo---### 1. Buttons 			 				Who are you designing for? 				Download	",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/guideline-demo/",
    },
    {
      "title": "Watson Users",
      "text": "---title: Watson Users---___ A strategic tool for helping teams build user focused strategies and products ___[Archetypes](design-guide/meet-watson/watson-users/#archetypes)[Personas](design-guide/meet-watson/watson-users/#personas)[Experiences](design-guide/meet-watson/watson-users/#experiences)___ Archetypes  Engage and empathize with the people using and buying their products Align around a common understanding of their target users and buyers Focus and prioritize efforts and activities## The Buyers### Mary, The Biz Exec#### A CEO, business unit director, or line of business leader, Mary seeks applications that increase employee productivity, optimize business processes, and improve the customer experience.### Bob, The CIO/CTO#### A C-level executive tasked with driving business innovation through technology, Bob seeks solutions that improve operational performance and drive new revenue streams but is conscious of managing risks and costs.### Deb, The Developer  #### Working on the front line of IT and LOB digital transformation, Deb uses her front end web interface skills and knowledge of front end and back end technologies to create, integrate, and customize new and existing apps.## The Cognitive Development Team### Deb, The Developer(_Yes, she can be both a Buyer and/or on the Cognitive Development Team_)#### Working on the front line of IT and LOB digital transformation, Deb uses her front end web interface skills and knowledge of front end and back end technologies to create, integrate, and customize new and existing apps.### Andy, The Low-code App Maker#### While Andy has a technical foundation and can do some coding. Low-code rapid application development tools allow him to more quickly meet the business needs of the LOBs. ## Tanya, The Trainer #### Typically a subject matter expert, Tanya manages the content ingestion and enrichment process, annotates content, and trains machine learning models. #### Paula, The Performance Manager#### Responsible for monitoring and tracking the performance of different applications and solutions brought in or built, Paula tries to ensure that any digital investments have a positive ROI and drive desired business outcomes.## The End Users### Ernesto, The Employee End User#### Ernesto uses apps developed by his company that help him do his job more efficiently or effectively — more easily accessing or working with large amounts of data and/or more effectively discovering new insights and relationships. ### Cade, The Consumer End User#### Cade uses consumer-oriented apps to get better recommendations, to more quickly explore and discover information relevant to him, and to have a more human-like interaction with machines. ___PersonasA single archetype can’t encapsulate all the needs and behaviors specific to all Watson products. To resolve this tension, we developed a two-tiered system of a universal archetype with product-specific variations.## Product-specific variations of an archetype = PersonaProduct teams, at their own discretion, should create specific personas, based on their own learnings and research. All personas should ladder up to one of the 8 Archetypes.### Example Personas for Deb across 3 products___ Experiences ## Each Archetype Has Different Types of Interaction (or Experiences) With Watson Apps, Services, & Content## MakingThe act of making applications, whether using code written from scratch, sample code (starter kits) and/or model-based low or no code development tools.## TrainingThe act of content curation and/or ingestion, including enrichment, annotation, generating machine learning models and other ground truth components, and making improvements and updates based on accuracy.## SupportHow users get help when they encounter problems Making, Training, Managing, Experiencing as an End User, or Extending a Watson product.## ManagingThe day-to-day tasks that keep Watson up and running and useful others.## End User ExperienceThe way an end user interacts with a product. Includes what that user needs in order to have a good product experience.## ExtendingThe act of creating, or purchasing and using, new capabilities not present withinthe developers’ existing application.## BuyingThe process of discovering, trying, and buying Watson apps, services, and content.> ## Resources> [Watson Archetypes Guide](https://ibm.app.box.com/files/0/f/10985425860/1/f_92424343930)> [Archetype Headshots](https://ibm.app.box.com/files/0/f/10985425860/1/f_92363338001)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/watson-users/",
    },
    {
      "title": "Competitors",
      "text": "---title: Competitors------ Take the time to get to know Watsons top competitors. ___### Microsoft## [IBM Microsoft Competitive War Room Wiki](https://apps.na.collabserv.com/wikis/home?lang=en-us#%21/wiki/Wf115c387fadf_48a3_b4ed_6392ffca63ae/page/Welcome%20to%20Microsoft%20War%20Room)## [Microsoft Cognitive Services](https://www.microsoft.com/cognitive-services/en-us/apis)## [Microsoft Competitive Overview by Bluemine, February 2017](https://github.ibm.com/jsukis/WatsonDesignGuide/files/31118/Competitive.Overview.MSFT.Feb.2017.final.pptx)## [Design Team Notes](https://github.ibm.com/jsukis/WatsonDesignGuide/wiki/-Microsoft)### Amazon Web Services## [Amazon Web Services](https://aws.amazon.com/)## [Amazon Competitive Overview by Bluemine, February 2017](https://github.ibm.com/jsukis/WatsonDesignGuide/files/31119/Competitive.Overview.Amazon.Feb.2017.final.pptx)## [Design Team Notes](https://github.ibm.com/jsukis/WatsonDesignGuide/wiki/-Amazon-Web-Services)### Google## [Google Machine Learning](https://cloud.google.com/products/)## [Google Competitive Overview by Bluemine, February 2017](https://github.ibm.com/jsukis/WatsonDesignGuide/files/31120/Competitive.Overview.Google.Feb.2017.final.pptx)## [Design Team Notes](https://github.ibm.com/jsukis/WatsonDesignGuide/wiki/-Google)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/competitors/",
    },
    {
      "title": "Accessibility",
      "text": "---title: Accessibility------ Watson uses IBMs guidelines for accessibility standards ___Enabling more people to benefit from computing and information resources technology is part of IBMs larger vision of e-business on-demand. Accessibility features embedded in on-demand technology and services benefit customers and employees with temporary or long-term disabilities, including those who are blind or vision impaired, mobility challenged, hearing impaired or simply adjusting to characteristics associated with aging or limiting environments.High color contrast helps users who are partially or completely color blind see differences between certain colors. It creates a strong visual hierarchy and improved usability for everyone. Never rely on color as the only visual means of conveying information, indicating an action, prompting a response, or distinguishing a visual element.When distinguishing an interactive element, do not rely on color as the only visual indicator.Colors at a 50 value or lower are not accessible when applied to text on neutral backgrounds, unless the text is 24 px or larger. There are no formal color contrast requirements for icons or glyphs that are paired with supporting text. If an icon is used separately from supporting text on a neutral background, use a color value of 50 or higher.> ## Resources> [IBM Accessibility](http://www-03.ibm.com/able/)>> [IBM Marketplace / Accessibility](http://www.ibm.com/accessibility/us/en/)>> [Colour Contrast Analyzer](https://www.paciellogroup.com/resources/contrastanalyser/)>> [Color Oracle](http://colororacle.org/)&nbsp;&nbsp;&nbsp;&nbsp;A free color blindness simulator for Window, Mac and Linux. It takes the guesswork out of designing for color blindness by showing you in real time what people with common color vision impairments will see.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/accessibility/",
    },
    {
      "title": "Contribute",
      "text": "---title: Contribute------##### The Watson Design Guide is a community driven effort. Thanks for your help!___## [Send Feedback and Content](https://github.ibm.com/jsukis/WatsonDesignGuide_ContentOutline/issues)Add your feedback, needs and ideas to our backlog. Please include snapshots and design files if possible.## Our Commit Process# Step 1: ContributeClicking our [Contribute Content](https://github.ibm.com/jsukis/WatsonDesignGuide_ContentOutline/pulls) links will open up a pull request in our [GitHub repo](https://github.ibm.com/jsukis/WatsonDesignGuide_ContentOutline). There you can add your design files or code to recommend new assets or existing asset updates.# Step 2: ReviewThe Design Guide Team reviews your pull request, looks at how it works across the complete portfolio, and decides if any additional edits need to be made before its merged into the Guide.# Step 3: RefineThe contributor or a member of the Design Guide Team makes the recommended edits and submits for a final review.# Step 4: MergeThe Design Guide Team merges the approved pull request into the primary branch of the Design Guide – now its live and available to everyone!# Step 5: SocializeOur repo is public so everyone can see all contributions and feedback. If you watch our [GitHub repo](https://github.ibm.com/jsukis/WatsonDesignGuide_ContentOutline) youll receive email notifications for all of these updates.![SpockThankYou](https://media.github.ibm.com/user/10972/files/3a6b8104-65f0-11e6-99f6-3e13886f228e)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/contribute/",
    },
    {
      "title": "Cognitive Workshop Materials",
      "text": "---title: Cognitive Workshop Materials---> ## How cognitive is your application? [Find out.](https://cognitive-academy-stage.w3ibm.mybluemix.net/#!/form/profile)  For a system to be cognitive, it must be able to understand, reason, learn, and interact. Measuring your application across these four pillars will help to find opportunities for further improvement and use of cognitive technologies.### A Brief for Cognitive Thinking#### What is cognitiveThe components of human communication (perception, motivation, reasoning) paired with the mechanics necessary for machines to communicate with us (input, output, knowledge, learning and memory) are the parameters required for creating a cognitive human to machine communication experience.#### The role of machinesThe role of machines in cognitive communication is to simplify, improve and amplify the quality of human life by providing us with better solutions and new insights with supported by evidence and lines of argument, revealed to us faster than humanly possible.#### The purpose of the modelThe purpose for any new technology is to improve the quality of human life. Remembering this is the key to taking a first step towards using machine learning and AI - asking not what could it do, but what should it do.The Human to Machine Communication Model ties the components necessary for cognitive machines together into an methodology for creating cognitive experiences. It’s purpose is to guide and inspire intentional innovation, as well as provide a structure for making responsible design decisions based on humankind’s needs, values and expectations - starting today.> ProTip: Before doing a workshop, make sure your product is ready and your team is prepared with the tools theyll need ahead of time.### Prerequisites#### Do you have the necessary technology?- Big data- Watson API’s#### Is cognitive the right solution?- How could machine learning help you deliver the product’s vision?- Will it significantly improve the user’s experience?- Is it necessary for delivering the vision?- Will the resources required to create a cognitive experience justify the value of the end result?#### Do you have clear Design Thinking outcomes?- Stated vision for the product (Hills, Prioritization Grid or concept car)- User personas- User needs and values (Empathy Map)- User journey (Scenario Map)- Give you and your team a solid understanding of how to apply the Communication Model- Amplify and extend your concept car with a strategic cognitive vision#### Goals- Give you and your team a solid understanding of how to apply the Communication Model- Amplify and extend your concept car with a strategic cognitive vision#### Who should attend- OM lead- Product Manager- Design lead- UX lead- Dev lead### Preparation#### Define the parameters- Problem statement: who wants what?- Vision statement: what’s the wow?- Technical restraints: insurmountable challenges to implementing a cognitive experience##### TimeframesDecide ahead of time how far out you want the workshop to explore, or if you want to ideate first, then prioritize your concepts.- Small: tomorrow (3-6 months from today)- Medium: this year (12 months from today)- Large: 1-3 years from today- X-Large: the future##### Key MotivationsWhat are the high level goals and motivations of the company who will use this app? To increase revenue? To streamline process? To improve employee satisfaction and reduce attrition? To reduce waste?What are the high level goals and motivations of the user of this app? To get work done faster? To find better answers? To get promoted? To go home early?##### Map a hero journeyChoose one or two user journeys that embody the core value of the product to use during the workshop. Use the IBM Design Thinking Scenario Map to identify the  steps of your journey.  The more detail you include, the more opportunities you’ll find for applying cognitive solutions- What device(s) will they use- How did they find the tool- How did they login- How do they know where to begin- Where do they go for help- What types of notifications will they receive- Will they receive information from other apps about the work they’re doing- How do they know when they’re done- How do they log out### Exercise 1: Cognitive PersonaTime:1 hourWhen you might use this:Your current persona likely isn’t granular enough for cognitive thinking. Use this exercise to make sure you’re considering all of the possibilities for improving the user’s experience using Watson API’s.Instructions:1. Define the basics of your user by filling in the mad lib at the top.2. Get gritty and have fun giving your user’s persona added depth and personality.3. To conclude, one team member should walk everyone through the results, summarizing what’s been identified for each section.Take-Back TipsEmpathy requires information. It’s important that everyone has a clear picture in their mind of who this user is and what their life is like. You should be able to put yourself in their shoes, imagine their day, feel their hopes and fears.Download### Exercise 2. Cognitive Haves and Needs							Time:		1 hour		When you might need this:		When you need to understand what tools you have to work for creating a cognitive experience, use this exercise to identify everything the app does or could have to work with.Instructions:		1. Starting with the Data Lake section of the model, list everything you can think of for each node, one at a time as a group.  		2. Once everyone has exhausted their ideas, move on to doing the same thing for the cognitive section of the model.		3. To conclude, one team member should walk everyone through the results, summarizing what’s been identified for each section. Take-Back Tips		Quantity over categories. It’s likely that many of your ideas could be categorized under multiple nodes. Pick one and move on. What’s important is the awareness that it’s available, not how it’s categorized.		Download	### Exercise 3. Cognitaive Scenario Mapping							Time:		1-2 hours		When you might need this:		When you need to understand what tools you have to work for creating a cognitive experience, use this exercise to identify everything the app does or could have to work with.Instructions:		1. Use the user journey you defined ahead of time to fill in the Stages and Steps boxes at the top of the exercise.  		2. As a team, identify the user’s motivations during each step. 		 Why are they doing this?  What do they want to achieve?  Is there anything driving their decisions from an employee perspective?  Is there anything driving their decisions from a personal perspective?  How do they feel? 3. Once motivation is complete, review step-by-step what the cognitive technology (API’s, big data, trained knowledge) could do to add value to this moment		4. Now consider what the wow’s could be if this technology was applied to each step.		5. To conclude, one team member should walk everyone through the results, summarizing what’s been identified for each section.Take-Back Tips		Get granular. It’s tedious but important to consider every detail of each step in order to find new opportunities to improve the user’s experience. Take your time to put yourself in the user’s shoes and really discuss their needs and goals in each moment.		Download	### Exercise 4. Big Cognitive Idea Vignettes							Time:		1 hour		When you might need this:		This activity is a great way to rapidly brainstorm a breadth of possible ideas. Start by writing the company’s and user’s key motivations at the top of the exercise to keep ideas focused on adding value.Instructions:		1. One one sticky note, write a brief overview of an idea or solution. Use the categories on the poster to make sure you’re considering the various cognitive possibilities. 		2. On a second sticky note, sketch a visual depiction. Think of this as a single frame storyboard–for example, a rough prototype of a user interface or depiction of the user.		3. Create as many ideas as you can - quantity over quality. Post them as you go to inspire your teammates ideas.Take-Back Tips		Say yes to the mess.Avoid evaluating of dismissing ideas while you are generating them-dedicated period of time to get everyones thoughts onto the wall and only then begin to discuss whats been shared. 				Everyone has ideas. Dont make the mistake of leaving idea generation only to the designers. Engineers, the offering managers, and the executives have a unique perspective on the user and the problem, so everyone should contribute to ideas for solutions!		Stay out of the weeds.Evaluate which ideas are important and feasible (using a Priortization Grid) before deep-diving into the details.		Download	### Exercise 5. Creating Cognitive Themes							Time:		30 minutes		When you might need this:		Cognitive experiences are not about one off features or moments, they should weave throughout a user’s journey. Use this exercise to discover the themes within your Big Idea Vignettes.Instructions:		1. Synthesize the stickies from your Big Ideas exercise into clusters that share the same qualities.		2. Looking at your clusters, draw lines between clusters that could tie together to create a larger theme.		3. Decide which themes will be most valuable to pursue.		4. Identify which ideas inside of each theme would work together best and should be taken into Scenario Mapping or Storyboarding.Take-Back Tips		Use your hills. Be sure to refer back to the vision statement for this product to help guide the team through prioritizing these issues.		Download	### Exercise 6. Value vs Speed						Time:	30 minutes - 1 hour	When you might need this:	Once you have themes with supporting features, use this exercise to understand how much value they’ll give to your user vs how difficult they’ll be to implement.Instructions:	1. Theme by theme, place each feature on the map comparing how much value they’ll deliver to the user over how much effort they’ll take to create and implement.	2. Once you’ve categorized all of your features, synthesize into categories what the challenges to implementation are	3. Discuss how and when these challenges can be addressed.Take-Back Tips	Use your hills. Be sure to refer back to the vision statement for this product to help guide the team through prioritizing these issues. 	Involve all. This exercise requires input from developers, designers, researchers, OM’s and strategists. Make sure everyone is heard and on board with the decisions being made.		Download 	### Exercise 7. Roadmapping								Time:		30 minutes		When you might need this:		Use exercise 6 to prioritize your ideas into a roadmap and plan when you’ll be able to implement features to build the most valuable user experience for the short, mid and long term goals you identified beforehand.Instructions:		1. Fill in the blanks for your short, mid and long term timeframes.		2. Organize the features identified inside of the chosen themes into their appropriate time box.		3. Discuss how to time feature implementation to deliver the most valuable experience to the user. Consider prioritizing features that contribute to delivering on multiple themes. Take-Back Tips		Use your hills again. Be sure to refer back to the vision statement for this product to help guide the team through prioritizing these issues.Involve all. This exercise requires input from developers, designers, researchers, OM’s and strategists. Make sure everyone is heard and on board with the decisions being made.		Download 	",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/cognitive-workshop/",
    },
    {
      "title": "What is Cognitive",
      "text": "---title: What is Cognitive------ In the future, every decision that mankind makes is going to be informed by a cognitive system like Watson, and our lives will be better for it. ~Ginni Rometty___[Four Requirements for Being Cognitive](design-guide/meet-watson/what-is-cognitive/#four-requirements-for-being-cognitive)[Four Components of Watson](design-guide/meet-watson/what-is-cognitive/#four-components-of-watson)___## Cognition_v._ The mental action or process of acquiring knowledge and understanding through thought, experience, and the senses.## Cognitive computing_n._ The simulation of human thought processes in a computerized model. Cognitive computing is comprised of self-learning systems that use data mining, pattern recognition and natural language processing to mimic the way the human brain works. Four Requirements for Being Cognitive ## UnderstandingCognitive systems understand like humans do by analyzing structured and unstructured, text-based or sensory — in context and meaning, at astonishing speeds and volumes.## ReasoningCognitive systems form hypotheses, make considered arguments and prioritize recommendations to help humans make better decisions.## LearningCognitive systems ingest and accumulate data and insight from every interaction continuously. They are trained, not programmed, by experts who enhance, scale and accelerate their expertise. Therefore, it gets better over time.## InteractingCognitive systems interact with humans in a natural way. Four Components of Watson ## Cloud[Bluemix](http://www.ibm.com/cloud-computing/bluemix/?S_PKG=AW&cm_mmc=Search_Google-_-IBM+Cloud_Bluemix+Program-_-WW_US-_-blue+mix_Exact_AW&cm_mmca1=000002FP&cm_mmca2=10001882&mkwid=0f97ee50-17e9-4360-a835-e145518b2502|401|232214), the infrastructure that everything lives in. Watsons cloud service is high powered, scalable, robust.     ## ContentAll structured and unstructured data, which is what makes Watsons cognitive technology possible.   ## Compute[All Watson APIs](http://www.ibm.com/cloud-computing/bluemix/watson/), which give users the power to add cognitive technology to their products.     ## ConversationsAll of the dialog between customers, users and Watsons technology.> ## Resources> [The Watson Cognitive Communication Model](https://github.ibm.com/Watson/Unified-Watson/wiki/The-Watson-Cognitive-Communication-Model)> [Think Academy: Cognitive in 20 Minutes](https://w3-workplace.ibm.com/ibm/thinkacademy/?cache=7-23-9#/home)> [Welcome to the Cognitive Era by IBM Think Academy](https://w3-workplace.ibm.com/ibm/thinkacademy/?cache=7-2-14#/cognitive-business/all-ibmers)> [Watson Outthink: How the world is using Watson](http://www.ibm.com/cognitive/outthink/?iio=CHQ&cmp=C3440&cm=k&csr=agus_outthink&cr=google&ct=C34403YW&cn=Cognitive_General_BMM_BR&S_PKG=&S_TACT=C34403YW&campaign=Agenda%20-%20Cognitive_General_Broad_BR&group=Cognitive_General_BMM_BR&mkwid=0f97ee50-17e9-4360-a835-e145518b2502|447|132549900767&ck=%2Bibm%20%2Bcognitive&cs=b&ccy=US)> [IBM Developer Cloud: Watson APIs](https://www.ibm.com/watson/developercloud/)> [Watson Company Analyzer: A Demo for a Cognitive UX](https://ibm.app.box.com/files/0/f/10985425860/1/f_92424555501)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/what-is-cognitive/",
    },
    {
      "title": "Watson Brand",
      "text": "---title: Watson Brand------ Watson is the brand for IBM’s cognitive capabilities. In order to use the name “Watson,” an offering must have some element of [cognitive capabilities](watson-design-guide/what-is-cognitive/) and also meet brand experience attributes. ___The Watson Brand is a child of the [IBM Design Language](http://www.ibm.com/design/language/). It takes the IBM Design Languages palette, typefaces, and principles and adds to it the unique personality traits, vision and tone of Watson.As Watson grows in capabilities, partners, solutions and users, it is critical that we codify the things that make Watson special. Core Values ## Watson IlluminatesWatson embodies our unending quest for knowledge, answers and discoveries. We represent enlightenment in the face of uncertainty and ignorance. By harnessing the power of human intellect and wisdom, Watson symbolizes our hope for and belief in a brighter future. Delights with insight           Does not like being in the dark                Partners with humility                Provides a positive influence                Always experiments and explores                Demonstrates to communicate                Thinks ahead   Promise ## Man and machine working together will create knowledge from data and enhance human expertise.             Voice                       ## Conversational               ## Curious             ## Straightforward              ## Positive          Principles                       ## Essential                ## Meticulous               ## Alive               ## Wonderful          Personality ## Humble Genius Friendly        Inquisitive        Charming        Emotional Intelligence# The personality of Watson guides us to…      make Watson approachable      make Watson engaging emotionally, beyond the functional technology      make Watson likeable           > ## Resources> [Meet Watson](http://www.ibm.com/watson/)> [Watson Brand Guide](https://ibm.app.box.com/files/0/f/10985425860/1/f_92407459396)     > &nbsp;&nbsp;&nbsp;The Brand Teams vision and creative direction for Watson.> [Watson Brand Center](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W9d6c1069a159_40a3_a3ec_187b00f55c3f/page/Watson%20Brand%20Center)> [Watson Brand Center Box](https://ibm.app.box.com/v/watsonbrandcenter)> &nbsp;&nbsp;&nbsp;The Brand Teams design assets, guidelines and templates.> [Watson Brand Personality by Ogilvy](https://ibm.app.box.com/files/0/f/10985425860/1/f_92412236826)> [Watson Animation Direction by the IBM Brand Team](https://ibm.app.box.com/files/0/f/10985425860/1/f_92413425081)> [IBM Brand Center](https://www.ibm.com/innovate/brand/)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/watson-brand/",
    },
    {
      "title": "Sketch Licensing",
      "text": "---title: Sketch Licensing---_Thanks to Dezzi Garcia of the Watson Conversation team for putting this together for everyone!_### Dont go through SLM, buy it on [BOND](https://w3-01.ibm.com/procurement/buyondemand/common/enUS/). This is what worked for me and I got my license soon after. Total time was about 1 day.### BOND [https://w3-01.ibm.com/procurement/buyondemand/common/enUS/](https://w3-01.ibm.com/procurement/buyondemand/common/enUS/)#### Purchasing the Sketch License on BOND- Log in to BOND- Search for Bohemian Coding Sketch- Add the latest version/single user to your cart- Submit to BOND- When you get to the extra-ugly blue site click Continue to next step- Pick Expense from Purchase type drop-down, then Continue- Product category drop-down: Purchased Non-IBM application & dev software OR 6990842000, Continue- Edit accounting in one step- What worked for me was:Dept: YOUR DEPARTMENT NUMBERDivision: YOUR DIVISIONMajor: YOUR MAJOR- Save accounting and Continue- If you get an Approval path choice, choose the one with SIMA, then Continue- Youll get a screen that says the name of your approver and he will determine if yes, you need this to do your job#### Business Justification```I cannot do my job without the latest version of Sketch because Sketch is the only UI design application used on Watson Conversation. There are no alternative applications that can open Sketch files. My current license is expired and I cannot open any more Sketch files at this time. If I do not have the latest version of Sketch, I cannot collaborate and meet deadlines on my immediate team. I will also be unable to deliver the assets that software engineering needs to develop Watson Conversation and they will also not meet the deadlines set by the business unit. The word Revenue.```- Then hit Submit- A few hours later you should get your cart approved with an email from ibmbond@us.ibm.com- Then a few hours later you should get an email from SHI International Corp from Dylan_Klemuk@SHI.com. This isnt it the Sketch license. Its just saying SHI got a request from the guy in the Czech Republic to buy the app for you and theyll get to it at some point. Reply to this email. You need Sketch now! Add URGENT to the Subject line, and then say something like:```There is an urgent need for me to produce work on my team using this software. It is the only software the team uses and current files will not open with older versions of the application. The word Client. I really need a serial number asap, as I have been requesting a license for like forever but our system is down, or I have to meet a deadline today.```- Dylan Klemuk is a real person who works in Austin for SHI. He will then go to the Bohemian Coding website, buy the app for you, and then send you a screenshot of his browser window showing the serial number you need.- In Sketch, go to Sketch>About & Registration and remove the current serial you have (mine was registered to a Mike Bothello at IBM). Enter your new serial. Now your app will belong to a Rita Katransky at SHI.Hooray, you are done.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/sketch-licensing/",
    },
    {
      "title": "Setup for Developers",
      "text": "---title: Setup for Developers------ The Carbon Design team is in the process of theming their framework for Watson in React and JavaScript. ___## [Prototyping with Armadillo and TravisCI Guide](https://w3-connections.ibm.com/blogs/jtremblay/entry/Prototyping_with_Armadillo_and_TravisCI_Integration?lang=en_us)      ## [Gulp Armadillo](github.com/snugug/gulp-armadillo)## [The IBM Colors](https://github.com/IBM-Design/colors)  ## [The IBM Web Fonts](https://github.ibm.com/Design/fonts)  ## [Contribute Code](https://github.ibm.com/jsukis/WatsonDesignGuide_ContentOutline/pulls)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/setup-for-developers/",
    },
    {
      "title": "2016 Watson Portfolio Review",
      "text": "---title: 2016 Watson Portfolio Review------A snapshot of Watsons Core Products, their users, use cases, what customers see today and what the team is working on for tomorrow. ___> [Download Portfolio Review Posters](https://ibm.ent.box.com/folder/35911824008)##### What is Watson?___## Watson is a platform of APIs, tools and cognitive products geared towards the enterprise market.  Watson API’s are the foundation for building cognitive user experiences.A cognitive experience happens when a machine can understand, reason and learn from outside input. Why would companies want this?  Higher quality insights  with greater confidence  faster than humanly possible. ##### Big Wins Watson 2017___We beat our revenue and profit goals for the first half of 2017! Paid customer accounts up 27% quarter-to-quarter Our new website, ibm.com/watson, provided a 50% increase in conversion rates compared to the previous website by applying data-driven design decisions Watson Conversation Service grew it’s usage nearly 50%, growing to 65+ millions calls in Q2Every core team has made a comprehensive upgrade to their user experience - unifying new features, UI patterns and visuals Monthly active users rose approximately 17,000, growing quarter-to-quarter by roughly 18% ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson-design-guide/portfolio-review/",
    },
    {
      "title": "Scrum Master",
      "text": "---title: Scrum Masterweight: 1keywords: Iteration Manager, Iteration Manager, Iteration Manager---## Role of the Scrum MasterLike Product Owner, this is a title you dont typically see here at IBM. The closest equivalent is an Iteration Manager or a Squad Leader, but the roles and responsibilities of the industry standard Scrum Master dont always seem to line up with how things have been happening here. For most people, the transition from Iteration Manager to Scrum Master wont be a massive change. Most will need to take over running a handful of events, some will need to take on a greater role in building the backlog, few will need to change their world completely.In fact, compared to the (typically) overloaded IBM-proprietary role of Iteration Manager, the role of the Scrum Master is meant to be significantly less demanding.So, if you break down a business into the simplest terms possible, we need to know who owns what we’re going to build, who owns how we’re going to build it, and how we determine when we can do it.- The Product Owner owns the “WHAT” and the “WHY”- Our Squads own the “HOW”- Our Product Leadership Teams works with the Squads to determine the “WHEN”- The Scrum Master owns the Sprint Plan and helps the Squads achieve their goals.Simple, right? If only we could keep to these roles straight around here. We’re constantly seeing conflicts of interests stemming from people wearing multiple (or the wrong) hats. Conflicts of interest are bad because they cause waste. Waste is getting in our way of greatness.A Scrum Master must:- Run a few Agile Events- Attend a few Agile Events- Keep the Squad’s work flowingWait, what?How much time is it going to take me to do this? Can I still be a Developer?If you do this with  discipline, this is a 25% or less role. You are still a Developer and still a member of your Squad.Seriously, Scrum Masters have to attend one or two 15 Minute events per day beyond what all Squad Members attend.The extra events are all done by 10:30AM.Doesnt sound so bad, right?Heres the deal though, if you dont do this with discipline, it will overwhelm everything.So, dont do that.How can you ensure this? Simple, all events are _strictly_ time-boxed and do not go over. Ever. When you come to the end of the scheduled time, the event ends. Always. Youre in charge of this.Ok, so, what needs to be done?## Sprint EventsOur Product Teams hold a number of regularly scheduled events to provide process guardrails to help people be productive. The Scrum Master is responsible for:Running- 15 Minute Daily Standup- 30 Minute Daily Backlog Refinement- 45 Minute Sprint Retrospective (Last day of the Sprint)- 30 Minute Sprint Planning (Last day of the Sprint)Attending- 15 Minute Daily Scrum Master Standup- 15 Minute Daily Director Standup (if blocking/blocked)Must be _available_ during Product Roadmap Refinement every day. Your Product Owner may call you in to help answer a question or ask for your input on an Epic theyre working on...What does the repeating event schedule look like on a well-performing Team?Week One:Week Two:> Dig Deeper: For the story behind these calendars, head to the [Agile Calendars](../../enterprise-agile/events/agile-calendars/) Page## Morning EventsEach Morning, the Scrum Master runs:- [15 Minute Daily Standup](../../enterprise-agile/events/daily-standups)Then, they attend the:- [15 Minute Daily Scrum Master Standup](../../enterprise-agile/events/daily-standups/#15-minute-daily-scrum-master-standup)If their Squad is blocked, is blocking someone, or in need of shared resources, they attend:- [15 Minute Daily Standup (Optional)](../../enterprise-agile/events/daily-standups#15-minute-daily-director-standup-optional)Thats it for the morning, now you can rejoin your Squad. Well pick this back up at 3PM.## Afternoon Events### Daily Backlog Refinement- Who: The Whole Squad- Scrum Master runs the event- Review the New Issues in your New Issues Column- If a bug - triage it!    - Today or Next Sprint?- `Aha!:New` Label? Those are new Epics sent by OM    - Is there Acceptance Criteria? Can you understand the AC?    - Do you know what to do?    - Do you know how you might do it?If you know what needs to be done, it’s Planning Poker Time!Btw, if youve never run a Planning Poker session, before, [heres all you need to know](../../enterprise-agile/practices/estimates-and-reports/#planning-poker)(BTW, if you are NOT going to do it, assign it to a Parking Lot Milestone and close it, you can always get it back!)- Once an Issue has been reviewed and sized, drag and drop it into your Backlog column.- Assign it to a Sprint if you know when you plan on doing it, otherwise, put it at the bottom.- Your Backlog Column must be a rank-ordered prioritized list of upcoming work by Sprint. Ask your Squad to take a pass through at prioritization live during the refinement.- Scroll down to see Sprints worth of work clustered together> ProTips:> - Some Teams call their “New Issues” column their “Inbox” column and use an “Inbox Zero” approach>> - Some Teams call their “Backlog” column their “Groomed” column> - Many Teams have a “This Sprint” column to easily show where to focus### Last day of the SprintOn the last day of the Sprint, your Product Team should hold their Demo, then each Squad should hold a Retrospective followed by Sprint Planning.Details on running these events [can be found here](../../enterprise-agile/events/#last-day-of-the-sprint)## WIP LimitsTo help your Squad maintain focus and limit task switching (which is a productivity _killer_) we need to limit the number of things they do at the same time. The pattern thats been used for decades in Lean manufacturing is the WIP Limit (Work in Progress Limit). Heres the rule, its _very_ simple.Limit the number of Issues in your `In Progress` column to one per Squad Member.Easy, right? If youve done the You cant multi-task exercise from the IBM Scrum Master JumpStart, you know just how important it is to stay focused. This is one of the most important things you can do for your Squad...Thats it. For most Squad Leaders (or Squad Members), the transition to Scrum Master wont be a massive change. Most will need to take over running a handful of events, some will need to take on a greater role in building the backlog, few will need to change their world completely.For further reading, visit the [Suggested Reading List](https://pages.github.ibm.com/the-playbook/getting-things-done/reading-list/) page...## Questions and AnswersQ: How do we deal with distributed teams, especially those in different timezones?A: Industry Best Practices say build teams that are co-located. Given that we cant seem to do this _very_ simple thing, here are some suggestions:- Regularly scheduled events are based on US Eastern Time because thats where the company leadership is based (NY).- For those teams that are ahead of US Eastern Time, hold a local standup and have the Scrum Master (Squad Leader) attend the Scrum Master Standup at 10AM Eastern- For those teams that are significantly behind US Eastern Time, they can:- Hold a Standup at 9:45AM (local time)- Before you leave for the day, add any Blockers your Scrum Master (Squad Leader) needs to know about in your Slack Channel- Scrum Master attends the Scrum Master Standup at 10AM EasternQ: Can you help us get started?A: _Probably!_ Heres the deal, we are a small team thats actively engaged with existing projects, but we can often additional teams. Head to the [IBM Scrum Master JumpStart](../../roles/scrum-master/jumpstart) page...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/roles/scrum-master/",
    },
    {
      "title": "Product Owner",
      "text": "---title: Product Ownerweight: 1---## Role of the Product OwnerFirst off, this is a title you dont typically see here at IBM. The closest equivalent is Offering Manager, but the roles and responsibilities of the industry standard Product Owner dont always seem to line up with how offering management happens here. For most Offering Managers, the transition to Product Ownership wont be a massive change. Most will need to take over running a handful of events, some will need to take on a greater role in building the backlog, few will need to change their world completely.So, if you break down a business into the simplest terms possible, we need to know who owns what we’re going to build, who owns how we’re going to build it, and how we determine when we can do it.- The Product Owner owns the “WHAT” and the “WHY”- Our Squads own the “HOW”- Our Product Leadership Teams works with the Squads to determine the “WHEN”Simple, right? If only we could keep to these roles straight around here. We’re constantly seeing conflicts of interests stemming from people wearing multiple (or the wrong) hats. Conflicts of interest are bad because they cause waste. Waste is getting in our way of greatness.A Product Owner must:- Have a compelling vision for a product _that can be built_- Build a roadmap to align the organization and move from vision to reality- Own the Release Plan to ensure we are releasing value to our customers- Note - this is NOT the Release Report! Thats owned by the Squads- Build the backlog of work for the coming SprintsWait, what?Yes, the Product Owner the responsible for building a healthy, ready to execute backlog of upcoming work. They are responsible for writing the Hills and Epics. They are responsible for working with the Squads to get high level sizing done for those Epics. They are responsible for sending the Epics from Aha to GitHub a few Sprints before the Squads will be ready to start working on it. This means the Product Owner is responsible for getting each and every Epic to the point where it has clear, understandable acceptance criteria. A Squad should be able to open an Epic thats been sent to GitHub and break it down into Sprint-sized Stories they can estimate.If we look to industry best practices, Product Owners:- Spend 50% of their time working on the business (market research, working with customers, vision, mission, goals, strategy)- Spend 50% of their time working with the Team Members building the ProductGiven that the Global OM content exhaustively covers the 50% about the business, were going to focus on the other 50%, building the Product## Sprint EventsOur Product Teams hold a number of regularly scheduled events to provide process guardrails to help people be productive. The Product Owner is responsible for:- Attending the [15 Minute Daily Director Standup](../../enterprise-agile/events/daily-standups/#15-minute-daily-director-standup-optional)- Attending the [30 Minute Daily Product Roadmap Refinement](../../enterprise-agile/events/product-refinement/)- Attending the 30 Minute Mid-Sprint Design Review- Running the [End of Sprint Demo](../../enterprise-agile/events/end-of-sprint-demo/) (aka Playback/Review) on the last day of the Sprint- Being available during [Sprint Planning](../../enterprise-agile/events/sprint-planning/) on the last day of the SprintWhat does the repeating event schedule look like on a well-performing Team?Week One:Week Two:> Dig Deeper: For the story behind these calendars, head to the [Agile Calendars](../../enterprise-agile/events/agile-calendars/) Page### Getting Started with Value-Based Roadmap Building- Before you continue, read the [experience report](../../getting-things-done/lessons-learned/user-value-based-roadmaps/) about how the Watson Assistant product team now builds and refines their Product Roadmap...### Daily Product Roadmap Refinement- Who: Product Leadership Team, Squad Technical Leaders- Product Owner runs the event using the [details found here](../../enterprise-agile/events/product-refinement/)### Last day of the SprintOn the last day of the Sprint, your Product Team should hold their Demo, then each Squad should hold a Retrospective followed by Sprint Planning.### End of Sprint DemoAs the Product Owner is responsible for the End of Sprint Demo, they own the agenda. It should include items like:- What was the Sprint Goal?- What was completed?- What affected the Sprint?- Whats being demod- Review Release Burndown- FeedbackThe Product Owner runs the End of Sprint Demo using the [details found here](../../enterprise-agile/events/end-of-sprint-demo/)### Sprint PlanningThe Product Owner must be available while Squads are planning their Sprints. Be prepared to:- Answer questions (Slack / join a WebEx)- Make decisions (e.g. priority / timeline)- Provide guidance (e.g. explain business value)Thats it. For most Offering Managers, the transition to Product Ownership wont be a massive change. Most will need to take over running a handful of events, some will need to take on a greater role in building the backlog, few will need to change their world completely.For further reading, visit the [Suggested Reading List](https://pages.github.ibm.com/the-playbook/getting-things-done/reading-list/) page...## Questions and AnswersQ: How do we deal with distributed teams, especially those in different timezones?A: Industry Best Practices say build teams that are co-located. Given that we cant seem to do this _very_ simple thing, here are some suggestions:- Regularly scheduled events are based on US Eastern Time because thats where the company leadership is based (NY).- For those teams that are ahead of US Eastern Time, hold a local standup and have the Scrum Master (Squad Leader) attend the Product Team Standup at 10AM Eastern- For those teams that are significantly behind US Eastern Time, they can:- Hold a Standup at 9:45AM (local time)- Before you leave for the day, add any Blockers your Scrum Master (Squad Leader) needs to know about in your Slack Channel- Scrum Master (Squad Leader) attends the Product Team Standup at 10AM Eastern",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/roles/product-owner/",
    },
    {
      "title": "IBM Scrum Master JumpStart",
      "text": "---title: IBM Scrum Master JumpStartweight: 1---The IBM Scrum Master JumpStart program from the GTD Squad helps Product Teams grow Scrum Master skills from within their existing Squads. It consists of the following:- The JumpStart Event is a 2 hour focused, interactive training that can be done in-person or remotely (in-person is always the best option).- GTD Squad members will then work with each Scrum Master on a rotating basis to transform their daily events and will:    - Teach one    - Run one    - Coach one on one## Replays### Watson Assistant Scrum Master JumpStart (2018-10-24)- We ran an _abbreviated_ 90 Minute JumpStart with the Watson Assistant Team. We learned quite a bit from this session, but here is the [recording](https://ibm.box.com/s/d5va1dxvtu7g4ysqirrcy7mn1iziy7cd)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/roles/scrum-master/jumpstart/",
    },
    {
      "title": "Thank you!",
      "text": "---title: Thank you!---Thank you for your feedback, we really appreciate it! Well bring you back to the Scrum Master page now...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/roles/scrum-master/jumpstart/nps/",
    },
    {
      "title": "How are we doing?",
      "text": "---title: How are we doing?---## How likely is it that you would recommend the Scrum Master JumpStart to a friend or colleague?Not at all likely &nbsp; &nbsp; &nbsp; &nbsp; 01&nbsp;&nbsp;   02&nbsp;&nbsp;   03&nbsp;&nbsp;   04&nbsp;&nbsp;   05&nbsp;&nbsp;   06&nbsp;&nbsp;   07&nbsp;&nbsp;   08&nbsp;&nbsp;   09&nbsp;&nbsp;   10 &nbsp;&nbsp; &nbsp; &nbsp;  Extremely likely",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/roles/scrum-master/jumpstart/nps/get-nps/",
    },
    {
      "title": "About us...",
      "text": "---title: About us...weight: 1---The Playbook is produced by Watsons GTD Squad. We are a small, multi-disciplinary group of people that work as accelerators throughout the Watson Core Platform Organization. Weve brought modern tooling like Slack into IBM Watson, weve moved teams from closed systems like RTC into open systems like GitHub, weve used tooling as a catalyst for culture change. We work with our Squads and Product Leadership Teams. We define practices, we mentor mentors, we coach coaches. In short, we help our organization Get Things Done (hence our name)... Our Home in Aha: GTD Squad PageOur ZenHub Board: GTD Squad TrackerOur Shared Channel in Slack Enterprise Grid: #gtd-squadGTD Squad at Playback Mondays: 2017-11-21 Recording### GTD Squad Members         George Champlin-Scharff joined Watson in 2011 (just after Jeopardy!) as a member of the original Watson Core Technology Team. Through each variation of the Watson Organization, George has been helped our Squads grow engineering skills, optimize process, embrace automation, and adopt continuous improvement.    &nbsp;             Micaela Eller joined Watson in June 2017. Her unconventional journey as an agile coach started in biotech at Amgen before joining IBM in August of 2015. After driving the transformation of the MobileFirst team in IBM Cloud, Micaela brought her experience and expertise to Watson. She is passionate about making a difference in the lives of people around her (while having fun along the way). Her personal motto is Transforming the world, one iteration at a time.    &nbsp;### Alumni          Sarah (Knudson) Davis was a member of the GTD Squad in 2016 & 2017 - she helped drive the GTD Sessions and is featured on every single one of the webinars. Sarah joined IBM in 2014 managing the Client Experience for Watson Labs after completing her MBA at IESE Business School in Barcelona. Sarah has shifted to a new role in the Offering Management organization where she will get to leverage her background in business/data analysis, strategic planning, and revenue growth hacking.     &nbsp;         Jonathan Atkins was a member of the GTD Squad in 2016 & 2017 and acted as our executive sponsor while he was the Director of Design for IBM Watson. Jonathan is featured on the early GTD Sessions and helped us hone our focus across discipline. He wasnt here for very long but he had a lasting impact on us all...    &nbsp;         Sam Richard was a member of the original GTD Squad who got things rolling with getting paid Slack (before there was a Slack Enterprise Grid), helped us move the organization from RTC to GitHub, and wrote the static site generator that powered v1 & v2 of the Playbook. Hes currently in the CIOs Office working on awesome things...             Tom Griffin joined Watson in 2016 coming from Magento Commerce (an eBay company) where he lead the Agile transformation. As part of Watson, Tom has been helping squads embrace Agile practices in the journey to continuously deliver high value, high quality products to Watson customers.    &nbsp;             Leah Lawrence is an Interaction Designer on the Watson Platform team and collaborates with the GDT Squad by providing design guidance for The Playbook.    &nbsp;",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/about/index/",
    },
    {
      "title": "Changes...",
      "text": "---title: Changes...weight: 2---Ch-ch-ch-ch-Changes...Now that youre hearing Bowie, it turns out you can trace time, or at least our changes. Heres what weve changed lately...2019-01-24- Updated the [Developer Guide](../../developer-guide/index/) with Code Review content rescued from the last version of the whitewater site2018-12-17- As the Playbook is now part of the IBM Agility Office, weve re-organized and re-worked much of the contentto better align with the Enteprise Agile brand.- Added Search to the main Playbook page- Lots of cleanup, got rid of a bunch of duplicate content.- Added info about the new Cumulative Flow Diagrams that ZenHub added for us recently2018-11-29- Added [Value-based Estimation and Roadmap Building Replay](https://pages.github.ibm.com/the-playbook/getting-things-done/replays/)2018-11-08- Added [Scrum Master and Product Owner Replays](https://pages.github.ibm.com/the-playbook/getting-things-done/replays/)2018-10-24- Added [Roles - Scrum Master](https://pages.github.ibm.com/the-playbook/roles/scrum-master)2018-10-11- Added [Getting started with User Value-based Roadmaps](https://pages.github.ibm.com/the-playbook/getting-things-done/lessons-learned/user-value-based-roadmaps/)2018-10-04- Added [Roles - Product Owner](https://pages.github.ibm.com/the-playbook/roles/product-owner) and the GTD Webinar Replay on Product Ownership...2018-10-02Oops, we forgot to update the changelog through the end of the summer!- Globally replaced the IBM-only term Iteration Manager in place of Scrum Master. Why the change? Most people were giving us a blank stare every time we said Iteration Manager but then said oh, ok when we replied that an Iteration Manager is a Scrum Master. Weve decided to throw in the towel on being good corporate citizens and just use the same role title that the entire rest of the world uses...- GTD Webinar Replays have been added for the quarter- Added books to the [Suggested Reading List](https://pages.github.ibm.com/the-playbook/getting-things-done/reading-list/)- So many other tweaks over the last few months, well try to do a better job keeping the changes up to date!2018-07-13- Added the [Watson AI Test Manifesto](https://pages.github.ibm.com/the-playbook/developer-guide/test-manifesto)- Added the [Watson AI Performance Manifesto](https://pages.github.ibm.com/the-playbook/developer-guide/performance-manifesto)2018-07-10- Added the [Scrum Masters Case Study](https://pages.github.ibm.com/the-playbook/getting-things-done/lessons-learned/iteration-managers/)2018-06-29(Oops, we havent updated our changes list the entire quarter. Heres what weve added...)- GTD Webinar Replays have been added for the quarter- Added books to the [Suggested Reading List](https://pages.github.ibm.com/the-playbook/getting-things-done/reading-list/)- Added case study covering how to run a Squad Camp- Added branching strategy for IBM Cloud Private- Updated HA guidance for MZR and GLB- Updated the Private Channel Policy for IBM Watson Slack Workspace- Updated IBM Squad Thinking page to be more reflective of real world constraints- Updated Pager Duty Access- Updated the Design Guild Guide to reflect shift to Carbon/DUO- Updated the retrospectives, estimates, standup, and other practice pages- Hundreds of little tweaks, typo fixes, link fixes, and other good change2018-03-27- Added a [Suggested Reading List](https://pages.github.ibm.com/the-playbook/getting-things-done/reading-list/) to help you find things to read on Safari Books Online2018-03-27- GitHub Social Coding Ecosystem page is back (it got left behind in the transition to the new site)    - Clarified process instructions for adding exceptions.- The SRE Manifesto is back (it got left behind in the transition to the new site)- Added info about how to [easily export issues using ZenHub](https://pages.github.ibm.com/the-playbook/zenhub/#exporting-issue-data)2018-03-26- Search returns to the Playbook, and oh yes, its faster. _Much faster._- Added Popular Editors info to the [Developer Guide](https://pages.github.ibm.com/the-playbook/developer-guide/index/#popular-editors)    - This includes a required setting for Visual Studio Code and Atom that you _probably dont know you need to set_- Fixed countless broken links from the transition from the old to the new- Added updated Tooling as a Service links (including Artifactory info)2018-03-23- v3 of The Playbook launches    - Now powered by [Jekyll](https://jekyllrb.com)    - Framework by: [https://github.ibm.com/jason-lengstorf/docs-starter](https://github.ibm.com/jason-lengstorf/docs-starter)    - Note: This was a _major_ reworking of the Playbook. If you find dead links, use the [Report a Bug link](https://github.ibm.com/the-playbook/the-playbook.github.ibm.com/issues/new?title=%3Creplace%20with%20a%20description%20of%20the%20bug%3E&body=Description:%0A%0ASteps%20to%20Reproduce:%0A%0A%0A%0ABrowser:%0A%0AOS:%0A%0A%0A%0A%23playbook-bug&labels:bug) at the top of every page!",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/about/changes/",
    },
    {
      "title": "How are we doing?",
      "text": "---title: How are we doing?---## How likely is it that you would recommend The Playbook to a friend or colleague?Not at all likely &nbsp; &nbsp; &nbsp; &nbsp; 01&nbsp;&nbsp;   02&nbsp;&nbsp;   03&nbsp;&nbsp;   04&nbsp;&nbsp;   05&nbsp;&nbsp;   06&nbsp;&nbsp;   07&nbsp;&nbsp;   08&nbsp;&nbsp;   09&nbsp;&nbsp;   10 &nbsp;&nbsp; &nbsp; &nbsp;  Extremely likely",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/nps/get-nps/",
    },
    {
      "title": "Aha! Idea Portals",
      "text": "---title: Aha! Idea Portalsweight: 1---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/om-guild/idea-portals/",
    },
    {
      "title": "OM Guild Guide...",
      "text": "---title: OM Guild Guide...weight: 4---## Watson & Cloud Platform Guide    OM Academy    New Product Offering Definition    Launch Readiness    Getting Products Ready for Passport Advantage    Watson Platform Announcements Channel## Roadmaps    Getting Started with Aha!    Ideas Portals",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/om-guild/index/",
    },
    {
      "title": "Our Roadmaps",
      "text": "---title: Our Roadmapsweight: 1---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/om-guild/roadmaps/",
    },
    {
      "title": "How we Work",
      "text": "---title: How we Workweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/play-by-play/",
    },
    {
      "title": "Getting Things Done...",
      "text": "---title: Getting Things Done...weight: 3---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/getting-things-done/",
    },
    {
      "title": "Planning and Tracking Work",
      "text": "---title: Planning and Tracking Work---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/ongoing-delivery/hills-epics-stories-usecases/",
    },
    {
      "title": "How we Work",
      "text": "---title: How we Workweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/play-by-play/agile-calendars/",
    },
    {
      "title": "How we Work",
      "text": "---title: How we Workweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/play-by-play/retrospectives/",
    },
    {
      "title": "How we Work",
      "text": "---title: How we Workweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/play-by-play/squad-backlog-grooming/",
    },
    {
      "title": "How we Work",
      "text": "---title: How we Workweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/play-by-play/estimates-and-reports/",
    },
    {
      "title": "How we Work",
      "text": "---title: How we Workweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/agile/play-by-play/product-grooming/",
    },
    {
      "title": "Planning and Tracking Work for Ongoing Delivery",
      "text": "---title: Planning and Tracking Work for Ongoing Delivery---> Our highest priority is to satisfy our users through the early and continuous delivery of valuable software.## Fundamentals (Concepts)In order to stay focused on the user, and be as efficient as possible, [Squads](../../agile/ibm-squad-thinking/index.html#squads) and their [Agile Leadership Team](../../agile/ibm-squad-thinking/index.html#agile-leadership-team) organize work using Hills, Epics and Stories.![Hills > Epics > Stories](https://pages.github.ibm.com/the-playbook/resources/images/agileplaybook/hills-epics-stories.png)> [Hill:](#hills) The big goal. Contains a who, what, and wow factor. Created in [Aha!](../../aha/)> [Epic:](#epics) A collection of customer value centered on a common theme. Epics may contain additional smaller Epics, if needed. Created in [Aha!](../../aha/) and syncd with [GitHub](../../github/).> [Story:](#stories) A chunk of customer, or team, value that can be completed in a single sprint. Created in [GitHub](../../github/) as children of Epics.## Define your Hills> Who: Offering Manager (assisted by the Agile Leadership Team)Hills turn users needs into project goals, helping the team align around a common understanding. Hills arent detailed requirements - theyre statements of intended outcome. Address who the outcome will serve, what they will be enabled to do, and the differentiator that will make this outcome worth the users time.  Hills are integral to IBM Design Thinking.  Without Hills as our starting point, we wont be focused on the user, and will fall back into old habits of developing features instead of experiences.Define as many hills as needed, however a squad should only focus on delivering on one hill at a time.  Dividing the squads attention across multiple Hills at once will reduce efficiency and focus.  In Agile, serial work is almost always faster than parallel work.|                 |               | Insert story content        |  Example   || -------------   | ------------- | --------------------------- | ---------- || Who             | As a...       | [User Archetype]            | As Mary the business owner || What            | I want to...  | [Need]                      | I want to use technology to answer common customer questions || Wow             | so that...    | [Measurable business value] | so that we can reduce calls into customer service by 15% in one year |> As Mary the business owner, I want to use a self-service solution to answer common customer questions, so that we can reduce calls into customer service by 15% in one year.Notice that in the example above, Mary is not the end-user of our offering.  Its important to remember that Hills can apply to any of the users for our offerings -- the end-user, the developer, the business user, IBM partners, and even IBMers that might have a role in implementing an offering for a client.For more information on Hills, refer to the [IBM Design Thinking guide](https://www.ibm.com/design/thinking/keys/hills/).## Add your Hills to Aha!> Who: Offering Manager- Navigate to your Product in Aha!- Click on Strategy -> Hills- Click the (+) button next to _Your Product Hills_![Create Hill](https://pages.github.ibm.com/the-playbook/resources/images/aha/aha-create-hill.gif)>ProTip: Assign Hills to the milestone that lines up with the desired date for the Hill. Remember, a Roadmap is a wish list of things we want to do. The further out your Roadmap goes, the less accurate it becomes.## Product Roadmap Refinement SessionsOnce youre going, new Ideas, Epics and requests will start coming in. To address these, your Product Leadership Team needs to run regular [Product Roadmap Refinement Sessions](../../enteprise-agile/events/product-refinement/).## Decompose the Hills into Epics> Who: Offering Manager (assisted by the Agile Leadership Team)Mmm, decompose...sounds pretty gross!  Really its just Agiles term for breaking big things down into smaller things because big things are hard to work on.  Theyre ambiguous and risky.  We dont like risk. The smaller you make a piece of work, the easier it is to complete on time and accurately.Our goal is to decompose work all the way down to stories.  Most of the time, however, its too big of a mental leap to go from the big goal of Hill all the way down to the dozens (or hundreds) of stories it will take to complete a Hill.  To make the process easier, we simply decompose the Hill into slightly smaller units called epics.  If the hill is the big goal, then the epics are the capabilities, behaviors, or user experiences that allow us to reach the goal.  There is no time limit on an epic, but its a good idea to keep them relativity compact, a few sprints, or so.  If it looks like itll take a year to complete an epic, keep decomposing!  You probably have multiple epics masquerading as one.>Epics follow a similar pattern to Hills, but replace wow with why to give us a who/what/why pattern.  Epics use the standard story format of As a [user archetype], I want [desired experience] so that [why the user cares about the experience/capability].Unlike Hills, Epics arent done with just a who/what/why.  A good Epic needs requirements to establish its boundaries (i.e. how we know weve completed the epic).  But we dont want to write our requirements the old fashioned way, the system shall...  Instead, we want to describe our requirements in a user-centric manner.  This approach has many labels: use cases, user scenarios, behavior driven development, etc.  Each technique is slightly different based on its origin, but they all aim to accomplish the same thing. Use the format of your choice, just be sure to write your requirements from the perspective of the user, not the system.## Add Epics to your Hills in Aha!> Who: Offering Manager- Navigate to your Hill in Aha!- Click on Details- Click the (+) button next to _Epics_![Aha - Create Epic Under Hill](https://pages.github.ibm.com/the-playbook/resources/images/aha/aha-create-epic-under-hill.gif)>ProTips:> - Always create Epics as children of a Hill, this will make it easier to find.> - Assign Epics to the milestone that lines up with the desired date for the Epic. Remember, a Roadmap is a wish list of things we want to do. The further out your Roadmap goes, the less accurate it becomes.> - The Create Epic dialog has a handy Create Epic & Add Another button that makes it fast to create a number of Epics that all roll up to the same Hill.## Add your Acceptance Criteria as Requirements in Aha!> Who: Offering Manager[Acceptance Criteria](https://www.google.com/search?q=acceptance+criteria) is how you know whether or not your work is complete. Well written Acceptance Criteria align Offering Management, Design, and Development and ensure that we build the right things. Always ensure you provide your Squads with detailed information about what the user needs the software to do. Its often helpful to use an established pattern, like the [BDD pattern](https://www.ibm.com/cloud/garage/content/code/practice_behavior_driven_development/) to help get your needs understood.- Open your Epic- Scroll down and click the (+) button next to Requirements- Enter each Acceptance Criteria item as a separate Requirement## ZenHub> Who: EveryoneWe use ZenHub to add advanced functionality to GitHub. In addition to the Board view, and the awesome reporting, ZenHub brings hierarchy to GitHub by introducing Epic Issues. To continue, you must ensure you have ZenHub installed or use the ZenHub Web App.- Details can be found in the [ZenHub Guide](../../zenhub/)## Send your Epics from Aha! to GitHub> Who: Offering Manager> [Prerequisite: Request GitHub Integration](../getting-organized#github-integration)You can send Aha! Epics (and associated Requirements) to your GitHub Issue Tracker. When an Epic is closed in GitHub, it is closed in Aha!- Once the integration is set up, you can send an Epic from Aha! to GitHub. Open your Epic, scroll down to the Integrations section then pick Send.    - Note: This will send any associated Requirements as checklist items in the GitHub Epic.- Switch to ZenHub, open your new Epic, scroll down and select Convert to epic from the Epics sidebar.- You can then create any Issues that correspond to your Aha Requirements as child Issues of your Epic. These Issues that started as Acceptance Criteria often become Stories with their own Acceptance Criteria.### Things to Note- You can send updates _from_ Aha! _to_ GitHub. Open your Epic, click the Actions dropdown and then pick Update GitHub Issues. (you must manually _push_ updates _from_ Aha! _to_ GitHub)    - When you send an update _from_ Aha! _to_ GitHub, the Title and Description of your GitHub Issue will be overwritten.- Synchronization is limited. Only the GitHub Issue state (Open/Closed) and the labels are sent _from_ GitHub _to_ Aha!, discussions are not synchronized- If you add additional Aha Requirements make sure you open your Epic, click the Actions dropdown and then pick Update GitHub Issues to ensure that all Requirements have been sent to GitHub. You will also need to add these to your ZenHub Epic.## Pre-existing Epics> Who: Offering Manager and/or Release ManagerAha synchronization only works if an Epic is sent from Aha to GitHub in the first place.If you have pre-existing ZenHub Epics that you want in Aha, we can swap out the old Epic for a new one. Do the following:- Create a new Epic in Aha with the same description as your pre-existing ZenHub Epic. (Add NEW to the title)- Send the Epic to GitHub- Convert it to a ZenHub EpicYoull now have a new Epic you can use to replace your pre-existing Epic, now we just need to reassign all of the child issues to the new Epic.- Add your new Epic as a child of your pre-existing Epic- On the board, click the Filter by this Epic button on your pre-existing Epic- Click the Select all link.- De-select the pre-existing Epic and the new Epic- Click the Set Epic button, find new new Epic and then click Apply Changes- Click Done![ZenHub - Reassign Epics](https://pages.github.ibm.com/the-playbook/resources/images/zh/zenhub-reassign-epics.gif)Youve now reassigned all of the child issues from the pre-existing Epic to the new Epic.> ProTip: If you de-select the pre-existing Epic when assigning the new child issues, you can automatically assign the pre-existing Epic as a child of the new Epic. This will preserve any history / comments / ideas that may be captured there.You can now remove all child issues from the pre-existing Epic and then Close it (Give it zero Points so it doesnt pollute your Agile reports), dont forget to remove that NEW from the title of the new Epic.## Anchor your Epics in GitHub> Who: Release ManagerA pattern were seeing over and over again is the inclusion of a Roadmap or Epics column in the ZenHub boards used across the organization. This allows you to anchor your Aha! created Epics in your ZenHub board in a single place making it easy to show all of the work of an Epic.- Rank order your Epics Column so that the most important Epic is at the very top of the list- Ensure all related issues are added to the Epic- This allows you to quickly see the progress of the child Issues by clicking the Filter by this epic button- This helps create swimlane-like functionality to help the team see what it is that they need to focus on first- Most teams place it after the New Issue column and before their Backlog column. Yes, this places it into the drag and drop flow, but the value it seems to provide outweighs the annoyance it can bring some of us. A future release of ZenHub will allow us to place the Roadmap/Epic column to the left of the New Issue column which should help everyone enjoy the functionality without being annoyed by the placement of the column.## Create Stories  (GitHub Issues)> Who: Agile Leadership Team & Squads> Get started with this  [4 minute video](https://agileacademy.mybluemix.net/standalone/stories/) from the IBM Agile Academy about User StoriesStories add even further detail to Epics, turning large chunks of work into specific issues that are small enough to be completed in one sprint.The fastest and easiest way to do this is to have a Story Mapping workshop.  Story Mapping helps the team visually break the Hill down into ever-smaller chunks until they reach chunks of work small enough to work in a single sprint.### Story Mapping Resources>[Workshop Example](https://www.thoughtworks.com/insights/blog/story-mapping-visual-way-building-product-backlog)>[Jeff Pattons Story Mapping Site](http://jpattonassociates.com/user-story-mapping/)Continue to follow the same who/what/why pattern.  Use the standard story format of As a [user archetype], I want [desired experience] so that [why the user cares about the experience/capability].As with epics, stories need more than just a description, they also need requirements.  In an epic, your requirements may be high level scenarios describing a series of behaviors by one or more users.  In a story, the scenario should be much more specific, isolated to a single user, and provide specific conditions.  Because of the specificity needed, the best practice for story scenarios is to write them using Gherkin.### Start with a User Story:> As a store owner, I want returned items to go back to my inventory, so I know what I have in stock.### Describe the scenarios using the keywords GIVEN, WHEN, AND, THEN> GIVEN a customer purchased red converse chuck taylors (chucks) from me> AND I currently have three pair of red chucks in stock> WHEN the customer returns their chucks for a refund> THEN I should have four pair of red chucks in stockSimple, right? These patterns are communication tools to help the team align...> ProTips:> - Keep going until you have a Sprint or two worth of Stories entered.> - Assign work to milestones in GitHub only when it has become clear when the work can be delivered. This is usually a Sprint or two out.> - Learn more about writing requirements using Behavior Driven Development techniques at [Bluemix Garage.](https://www.ibm.com/devops/method/content/code/practice_behavior_driven_development/)## Real World ExampleWe had a quick look through Aha and picked the following real world example of using Hills > Epics > Stories. We went through all of our Product areas in Aha and found that we are inconsistent at best when using these patterns. So, how do we learn, lets take a real world Hill and re-write when the pattern breaks down.> Hill: Mary can use C&C Element Classification while utilizing modern cloud infrastructure and development technologies within the security of her companies own data centerThats actually really good. It states Who, What and Wow. Trust us, being able to use C&C in their own data center is absolutely a WOW.Now, on to the Epics. There are a great many Epics under this Hill. Lets pick one:> Epic: Business Model for Element Classification on ICPThats _close_ but doesnt clearly express Who, What, and Why. Lets tweak it a bit:> Epic: A Watson Offering Manager can create a Business Model for Element Classification on ICP so they can determine and predict the ways we can drive growth, increase adoption, and ultimately increase revenue.Everything there was already contained within the description of the Epic itself. Bringing that text up and out into the open helps everyone understand at a glance whats going on.Now, lets pick a Story from that Epic:> Story: 3-5 year financial model on ICPAgain, theres a focus on the what but doesnt say who and why. Easy enough to fix:> Story: A Watson Offering Manager can create a 3-5 year financial model on ICP so they can understand growth rate over the next few yearsAgain, everything that was added was already contained within the description of the Story itself.By adopting these patterns, you clearly define who your customer is, what they need (and the scope of it) along with justification of why youre doing it in the first place.Remember, these are communication patterns and we can only ensure were building the right things by clearly communicate what were doing...## DependenciesDependencies are such a challenge for most organizations that weve got a special page for how to deal with them.- [Play by Play: Dependencies](../../enterprise-agile/practices/dependencies/)## BugsAll Watson Service Teams need to follow the standard process used across across entire IBM Cognitive organization:- Use the label  for bugs- Use the label  for bugs reported by customers> ProTip: You dont need both labels, just use one or the other...The format / template for your bugs is up to you, but all bugs must be labeled following the standard so that Watson Teams show up in cross-organizational reports that are being run...## Keeping GitHub Accurate> Who: Release Manager and Squad Leaders> When: Every DayThe information we get out of GitHub is only as good as how we organize it. Without a watchful eye, GitHub can easily becomes a misleading source of information. Having accurate information in GitHub is the key to becoming predictable. Stripping everything else aside, there are three things that can dramatically improve the accuracy of the information in GitHub.### Ensure Issues are in the correct State- During the Daily Standup, each Squad runs their Daily Standup from their ZenHub Board. Use the Daily Standup as an opportunity to keep every issue in the correct State. Notice that a Squad Member said that they closed #42 but its still in the In Progress column? Drag it to the Closed column right then and there.### Apply an Estimate to EVERY Issue- To understand your Squads velocity, ensure that each and every Issue has an estimate so that it is shown in your [Burndown, Burn up and Velocity Reports](../../../enterprise-agile/practices/estimates-and-reports/#agile-reporting). Notice that a Squad didnt estimate some of their Issues? Assign 1 point to any unestimated issues. That will provide a better estimate than none at all.### Assign EVERY Issue to the Milestone that it was closed during- Every day, review your closed issues, filter by Issues with no milestones and assign any issues to the current Milestone. This helps prevent work from slipping through the cracks and helps you get closer to predictability### Assign EVERY Relevant Issues into the appropriate Release- Every Iteration you should review the content of the release adding any new issues that are part of the release and removing all issues that are no longer part of the release.Using Issues with no release on the Kanban board you can quickly identify issues not in a release and assign them to the appropriate release.  Using Issues in the Release you can verify that the release contains the correct issues and remove any issues that are no longer part of the release.See [Burn up Reports](../../../enterprise-agile/practices/estimates-and-reports#release-reports) for the details of creating a release.![GitHub - Assign milestones to closed issues](https://pages.github.ibm.com/the-playbook/resources/images/github/github-assign-milestones-to-closed-issues.gif)> ProTip: Remember, there are really only two kinds of work, work you track and work you dont. Our tools make it quick and easy to help you keep all of your work visible.## Whats Next? Getting the most out of ZenHub...Now that youve started Sprinting, youre ready to start tracking work with Kanban, estimating your work with Story Points and leveraging Agile Reports (Burndown, Velocity, and Burnup). How? By [getting the most out of ZenHub](../../zenhub/).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/planning-and-tracking-work/ongoing-delivery/",
    },
    {
      "title": "Release Planning",
      "text": "---title: Release Planning---Our Release Plans focus on near term dates to help the whole team drive towards taking the Hills in the Roadmap. Release Plans should be a few months or shorter, never longer than a Quarter...> ProTip: Remember, were taking Hills, not Mountains.## Before you begin> Our highest priority is to satisfy our users through the early and continuous delivery of valuable software.Before you start planning, take a step back and reflect on your values and vision, as a team. Take the [IBM Agile Principles](https://agile-ibm.mybluemix.net/principles) to heart.- Begin with clarity about the outcome, and let it guide every step along the way.- Listen, iterate, learn, and course correct rather than waiting until it’s perfect.- Build small teams with the right skills to encourage self-direction and innovation.## Whos involved?Release Planning is _primarily_ owned by the Release Manager and the Product Leadership Team, but _the whole team_ is involved in the process. Without our Squad Members keeping GitHub accurate, our Release Plans wouldnt provide any value.## Conducting your Release Planning meeting> Who: Release Manager, Squad Leaders, and the Product Leadership Team> When: Two Sessions held a Sprint or two before the start of the ReleaseBy holding your Release Planning Meeting several sprints ahead, it will naturally feed the roadmap, your Squad Backlog Refinement cycles, and will keep your Squads unblocked. The Product Leadership Team leads by being a few Sprints ahead of their Squads, clearing the brush, and continuously looking forward so the path ahead remains clear. Reserve a few hours for your Release Plannning Meeting, no more than three. Gather your leadership team together, in person if possible, via [Zoom] if not. Come prepared - Squad Leaders should know the latest and greatest on their Squads; velocity, current blockers, health of backlog, etc. Release Managers and Offering Managers should know the health of the Roadmap, any strategic themes that are changing or new, customer feedback. Design should bring feedback from Sponsor Users, and ensure Personas are up to date. The Release Manager facilitates the session using ZenHub to prioritize and size the upcoming release. Pick the three (and only three) Hills that you will focus on for the release. Break your Hills down into Epics and send them to ZenHub. See [Planning and Tracking work for Ongoing Delivery](../ongoing-delivery#hills)> ProTip: You will need two sessions. After your initial session, ensure theres a week or so to validate any assumptions with Squads or Execs, and come back to confirm. this could take a Sprint or two which is why its important to start a sprint or two ahead of the Release starting timeframe.## Defining your Release Plan in ZenHubYour Release Plan is built using ZenHubs Release Reports. A Release Plan is a collection of Issues needed to take the Hills.> ProTip: Issues can be added to multiple Release Reports. This allows you the flexibility of creating Release Reports for each Hill _and_ for a group of Hills.See: [Release Reports in ZenHub](../../enterprise-agile/practices/estimates-and-reports/#release-reports)> ProTip: Do not build a Release Plan during the release. Build your releases before the start date of the release. There is a scope creep algorithm baked into Release Reports that will skew the predicted end date dramatically.## Ensuring your Release Plan is completeAs youre pulling together your development and feature related work to add to your release, make sure you dont forget to include stories for other elements that ensure the release is effective for your users. Examples are:1. Go To Market (GTM) - Will you need to create a new demo video, blog post, talk or presentation to help users understand the value in the release? Will you be showcasing it at a big confrence or event? Think about all the channels youll want to know about the release and how youll communicate with them. Will there be changes in exisitng pricing or packaging to go along with the new feature? Think about what it takes for users to adopt the new functionality and all the steps your team needs to make to ensure a smooth customer journey.2. Accessibility - youll want to make sure that youre creating accessible features from the start. It should be included in the design of your product, not a separate task. From time to time, we do get assessed on how accessible our solutions are so youll want to always include it in your requirements so it doesnt become a firedrill for the team. For more information of including accessibility in design, see the [OM Academy resources](http://calmedia.atlanta.ibm.com/om_academy/om_resources.php) (bottom left corner) and for the latest announcements on changes in accessibility (including updated checklists), see the [Accessibility forum](https://w3-connections.ibm.com/forums/html/topic?id=678e615c-a95d-48a1-9988-c96705c9be1f&ps=25).3. Globalization & Languages - Did you include language testing on the new feature? Or are you targeting new countries or languages as part of your strategic roadmap? Ensure youve included stories for those items in the appropriate release.## Starting your release### Ready, set, SPRINT!We want our [Squad members](../../enterprise-agile/organization) to have big blocks of time to get things done. To accomplish this, we always start with the minimum viable process possible.Head on over to the [Events](../../enterprise-agile/events/) pages to see how to Sprint effectively...### Release Management Meeting (OPTIONAL)> Who: Release Manager, Squad Leaders, Product Leadership Team > When: Weekly - Optional as content can be covered in a Whole Team StandupUnless otherwised covered during a Whole Team Standup, products may also hold a Release Management Meeting. The Release Manager will run this with the Tribe/Product/Squad Leaders (ensuring all disciplines are represented). The objective of the meeting is to review progress of the current release, any changes in scope, dependencies and risks for all milestones identified on the Release Plan.#### Assumptions- A Release Plan has been created and that and everyone understands the scope of the release and associated milestones.- All Squad leads are aligned on the content#### During the Release Management Meeting- Review the Roadmap that aligns with the Release Plan- Review the Release Report (burn-up chart) for relevant milestones- Filter the Release Report by Squads to determine if theyre On Track, At Risk, or Blocked- Review dependencies, risk, changes to plan (scope, time, resource)- Assign and review action itemsMany Products in Watson cover these items during their weekly Whole Team Standup (aka Scrum of Scrums)...## Measuring progress> Who: Release Manager and Squad Leaders> When: Every Day at the 15 Minute Daily Standup### BurndownBurndown reports show completion of work over time (from 100% to 0% remaining). ZenHub adds Burndown reports to GitHub. All you have to do is add Story Points to your Issues, assign your Issues to Milestones, and ZenHub will automatically generate Burndown charts for you.> ProTips:> - The diagonal line is your ideal, if youre below the line, youre ahead of schedule, above the line, youre behind.> - Notice that plateau? Thats a weekend. We expect work to pause on the weekends.### Filtered Burndown ChartsOn a big project? Use the Label dropdown to create custom Burndown charts for your Squad that you can bookmark.Things to note...- Every filter option you pick is added to the URL, that makes every custom view  bookmarkable and shareable- Add links to filtered burndown charts to your wiki- Create a burndown chart for defects by filtering on your defect label- The Burn Pipeline dropdown allows you to add additional pipelines (columns) to the burndown chart. If you have an automated build, but manual deployment process, this can let you see how much faster you could be done if you adopted Continuous Delivery Practices### VelocityAfter a few Sprints, add up the number of completed Story Points and divide by the number of Sprints. The average number of Story Points completed is called your Velocity. Use your average number of Story Points to determine how many Points to put in each Sprint moving forward. Understanding (and using) your Velocity is key to getting your Squad to predictability.ZenHub generates Velocity charts automatically. Youll find them under the Reports tab.Things to note...- By default, ZenHub looks at 10 Sprints; the 3 most recent open Sprints, and the 7 most recent closed Sprints.- Your average velocity is the purple line- You can remove a Sprint from the Velocity chart by unchecking it in the table below the chart (you might want to do this for Sprints that happen around major holidays)- You can filter the Velocity chart just like the burndown chart by picking one or more Labels from the Label drop-down.> ProTip: Look at the chart above. The average Velocity for this project is a little over 30 Story Points per Sprint and yet theyve added 193 Story Points to the Sprint. The Velocity chart is a great way to spot overcommiting. Overcommitting is a big problem that negatively impacts morale, causes lost revenue, and prevents teams from becoming predictable.### Burnup (aka Release Reports)Burnup reports show completion of work over time (from 0% to 100% complete). ZenHub adds Burnup reports to GitHub called Release Reports. All you have to do is add Story Points to your Issues, assign your Issues to a Release, and ZenHub will automatically generate Burndown charts for you.- Filter your board to see the issues you want to add to a Release Report> ProTip: Do not build a release during the release. Build your releases before the start date of the release. There is a scope creep algorithm baked into Release Reports that will skew the predicted end date dramatically. Youll still be able to use the burn up chart, but the predicted end date will be off if you build a release report while the release is already underway...## Keeping GitHub Accurate> Who: Release Manager and Squad Leaders> When: Every DayThe information we get out of GitHub is only as good as how we organize it. Without a watchful eye, GitHub can easily becomes a misleading source of information. Having accurate information in GitHub is the key to becoming predictable. Stripping everything else aside, there are three things that can dramatically improve the accuracy of the information in GitHub.### Ensure Issues are in the correct State- During the Daily Standup, each Squad runs their Daily Standup from their ZenHub Board. Use the Daily Standup as an opportunity to keep every issue in the correct State. Notice that a Squad Member said that they closed #42 but its still in the In Progress column? Drag it to the Closed column right then and there.### Apply an Estimate to EVERY Issue- To understand your Squads velocity, ensure that each and every Issue has an estimate so that it is shown in your [Burndown, Burn up and Velocity Reports](../../enterprise-agile/practices/estimates-and-reports). Notice that a Squad didnt estimate some of their Issues? Assign 1 point to any unestimated issues. That will provide a better estimate than none at all.### Assign EVERY Issue to the Milestone that it was closed during- Every day, review your closed issues, filter by Issues with no milestones and assign any issues to the current Milestone. This helps prevent work from slipping through the cracks and helps you get closer to predictibility> ProTip: Remember, there are really only two kinds of work, work you track and work you dont. Our tools make it quick and easy to help you keep all of your work _visible_.## Release!> _“Agile at scale requires trust at scale”_> [@HenrikKniberg](https://twitter.com/HenrikKniberg) ([Spotify](https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/))To truly scale release operations, you must provide your Squads with the authority to push changes into production.This is how cloud companies operate. This is how Amazon works, this is how Netflix works.There are no tickets opened, no votes by review boards, they have granted their Squads with the authority release their work when they see fit.This authority comes with a great deal of responsibility in the form of PagerDuty, as Amazon says, you build it, you run it.> ProTip: To dig deeper, read the book [Lean Enterprise](https://www.safaribooksonline.com/library/view/lean-enterprise/9781491946527/) by Jez Humble, Joanne Molesky and Barry OReilly. [Heres a link](https://www.safaribooksonline.com/library/view/lean-enterprise/9781491946527/part03ch05.html#chapter_3_5) to the section on how other companies work.## Celebrate> Agile processes promote sustainable development.> The sponsors, developers, and users should be able> to maintain a constant pace indefinitely.Were people, not robots.We forget that sometimes.The [Last day of the Sprint Ceremonies](../../enterprise-agile/events/#last-day-of-the-sprint) are a good place to start. End of Sprint Demos can be a wonderful opportunity to showcase what youve done.We need more than that though.From time to time, its vital take a break and celebrate your accomplishments. Enjoy the company of your team.Share a mealNothing bonds a Squad like sharing a meal. Have lunch together, go out for drinks, or grab an ice cream on a hot day.Get together with other Squads at your site and plan a potluck.Team day outLive near an amusement park? Take a day and go together. Outdoor concert series happen each and every summer in all of our cities. Mini golf and ice cream down the street? Go together for a few hours.ClubsEach and every site has an amazing array of fun activities.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/planning-and-tracking-work/release-planning/",
    },
    {
      "title": "Planning and Tracking Work",
      "text": "---title: Planning and Tracking Work---## Getting Organized (Tools)- [Aha!](../../aha/) is the home for everything related your business strategy, your user personas, and your product roadmap. Your Offering Manager lives in Aha! each and every day.- [GitHub](../../github/) (with [ZenHub](../../zenhub)) allows your Squads to plan and track  their work in the same place they deliver their code. ZenHub plugs into GitHub and provides advanced Planning and Tracking features to GitHub. Your Squads live in GitHub each and every day.If you dont work in Watson & Cloud Platform, you might use different tools. The IBM CIO provides the following three tools for three VERY different audiences:- Trello for teams that don’t use GitHub (finance, procurement, etc, not us)- ZenHub for teams that use GitHub (this is us)- JIRA for those teams working in HIGHLY regulated environments (not us)> ProTip: This Guide focuses on Aha! and ZenHub, weve got _lots_ of other tools in the [Tools Guide](../../tools)## Create your Organizational Structure in Aha!> Who: Offering ManagerAs Aha! is shared with other IBM organizations, your [Segment](../../agile/ibm-squad-thinking/#segment), [Tribe](../../agile/ibm-squad-thinking/#tribes) and Product need to be created in Aha! by a [Offering Manager](../../aha/). This is _usually_ a Senior Offering Manager that holds a [Offering Manager Aha! license](../../aha/). Tribes are represented in Aha! as Product Lines. A Product Line is a collection of Products. Each Product Line has one or more Products> How To:> - Go to: [https://bigblue.aha.io/settings/account/projects](https://bigblue.aha.io/settings/account/projects)> - Click the Add Product Line button and fill in the form to create a Tribe> - Click the Add Product button and fill in the form to create a Product and add it as a child of your Tribe## Create your Organizational Structure in GitHub> Who: Release ManagerAs GitHub is shared with every IBM organization, your [Segment](../../agile/ibm-squad-thinking#segment), [Tribe](../../agile/ibm-squad-thinking#tribes) and Product need to be created in GitHub by the [Release Manager](../../agile/ibm-squad-thinking#release-manager). Tribes are represented in GitHub as GitHub Organizations. A GitHub Organization is a collection of GitHub Repositories, Members and GitHub Teams. A GitHub Repository includes an Issue Tracker to plan and track work, a Wiki, and Source Code (usually).### Create a GitHub Organization for your Tribe Go to [http://github.ibm.com/](http://github.ibm.com/) Click the + icon in the upper right corner Click New organization Add the name of your Tribe and your contact details### Create GitHub Teams for your Squads Create a GitHub Team for each of your Squads. These will be used for access control for your code repositories.   Go to `http://github.ibm.com/your-organzation-name/teams`   Click the New Team button Add Squad members to each GitHub Team   Go to `http://github.ibm.com/your-organzation-name/teams/your-squad-name`   Use Add a person to add the Squad Members (note: you may need admin rights to do this in your organization - your Release Manager almost always has the ability to add new people)> ProTip: A username in GitHub is almost always the first half of their email address (before the @ symbol). Search [Bluepages](http://w3.ibm.com/newbp/) if you cant find someone as some emails are not always guessable.Please keep your GitHub Teams up to date! GitHub Teams are used to manage who has write access to code repositories!### Create your GitHub Issue TrackerWere seeing two patterns used throughout Watson to track work across large organizations: centralized, Product Issue Trackers and using ZenHub to create a Board of Boards.> ProTip: Larger Products _usually_ use a single, centralized, Product Issue Tracker to plan and track work across multiple Squads. Smaller projects with less than 15 repositories sometimes use ZenHub to combine multiple GitHub repositories into a single Board of Boards.Before you decide on your strategy, you need to know that there is a serious limitation in the number of boards you can merge together. Ten to Fifteen is the max according to the ZenHub team, one team took down our internal ZenHub for all of IBM when they created a board of boards with too many repositories.### Centralized, Product Issue Tracker (Most Common)As a result, we _strongly suggest_ that large projects use a single, centralized Product Issue Tracker to plan and track your work, while keeping your code in separate repositories. This also improves security by allowing tighter control over who has write access to your code.Its incredibly easy to share a single board across many Squads, just use labels to represent each Squad and then bookmark the filtered view.Set up a wiki page with links to the filtered views for each Squad and youve easily created a way to see the big picture and the small picture in the same place. Create a repository to act as the Product Issue Tracker using this pattern:   `http://github.ibm.com/your-organization-name/tracker`   (where tracker is the name of the actual repository used for Product-wide issue tracking) Each Squad will commit code to one or more repos in the organization, but track their work in the central tracker. To reference an issue in your central tracker from a pull request in another repository, just include the organization and tracker in addition to the issue number in your comment:   `this closes watson-conversation/tracker#42`   GitHub will automagically figure out the right thing to do. Easy and fast. If more than one offering is sharing a GitHub Organization (e.g. watson-services) then the name of the centralized issue trackers should follow this pattern:   `http://github.ibm.com/your-organization-name/offeringname-tracker`### Create Labels for your Squads Create a label in your Centralized Issue Tracker for each of your Squads. These will be used to assign Issues to Squads and generate Agile Reports for Squads.> ProTip: Ensure that all of the Squads for your Product Offering Team have write access to the Central Issue Tracker - this can be done by adding the teams under the Settings -> Collaborators & Teams page. Use the Add a team dropdown to add your GitHub teams to the list.### Board of Boards (Less Common)For smaller projects with a few repos, you can use ZenHub to make a Board of Boards for the overall offering, then adding in the repos of each and every SquadYou can track multiple projects on the same board/burndown charts by clicking the Repos button and then Merge another repository (this only merges reporting, not the code).> Please Note!> Please note that this will make each repository have exactly the same columns.To create a Board of Boards- Create a repo in your organization that will act as your Board of Boards.- Go to the Kanban Board view and click Repos- Click Merge another repository and add another repository thats part of your offering- Repeat until youve added every repository that make up your offering (up to ten)## Request GitHub Integration > Who: Offering ManagerYou can send Aha! Epics to your GitHub Issue Tracker. When an Epic is closed in GitHub, it is closed in Aha!- To request Aha!  Github Issue) for the following:- Description- Milestone- RequirementsThe synchronization is bi-directional for Aha! workflow status changes (e.g. Aha!:New / Aha!:Shipped) and GitHub Labels.## Create Release Targets in Aha!> Who: Offering Manager- Release Targets in Aha! are aligned with _business goals_, usually monthly or quarterly. This is configurable at the Product level. Release Targets need to be set up in Aha! by a Offering Manager.Please note, Release Targets used to be called Milestones in Aha, you may see references to them in other documentation...## Create Milestones in GitHub> Who: Release Manager- Milestones in GitHub are aligned with [Sprints](../../enterprise-agile/events/agile-calendars). The Release Manager creates Milestones in GitHub. Release Managers in the Watson Core Platform organzation can [open an issue](https://github.ibm.com/Watson/github-milestone-requests/issues/new) to request that the standard 1 week or 2 week Sprints to be added via automation.## Whats Next? Ongoing Delivery...Now that youve set up Aha! and GitHub, youre ready to start [Planning and Tracking work for Ongoing Delivery](../ongoing-delivery).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/planning-and-tracking-work/getting-organized/",
    },
    {
      "title": "GitHub - Big Products",
      "text": "---title: GitHub - Big Products---## Big ProductsIts easy to see how to track the work of a small Service Squad. GHE naturally lends itself to the needs of a small 8 to 10 person team. What isnt obvious, is how to see the big picture when an offering is made of up many teams working together. It turns out this is actually simple, but requires you set things up with the big picture in mind.Whole Team TrackerMost teams in Watson follow a model where you have a central issue tracker for the _whole team_. Follow the guidance found on the [Getting Organized](../../planning-and-tracking-work/getting-organized) page.## Board of BoardsZenHub allows you to merge up to ten repositories together to create a Board of Boards. This appears to work well for small to medium size projects. See the [ZenHub](../../zenhub) page for information._Seriously, ten is the max suggested by the ZenHub team, there have been reports of major performance problems when teams merged too many repositories..._      &#10094; Labels    Finding Things &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/05-big-products/",
    },
    {
      "title": "GitHub - Issue Templates",
      "text": "---title: GitHub - Issue Templates---_Finally_GitHub Enterprise has _finally_ added the ability to create multiple issue templates, per repository!### Official Issue TemplatesDocumented here: [Multiple Issue and Pull Request templates · GitHub](https://github.com/blog/2495-multiple-issue-and-pull-request-templates)Extras!- Want to include a bug label?`[click here to open an issue](http://github.ibm.com/your-organization-name/your-issue-tracker-name/issues/new?template=bugs.md&title=your-issue-title-here&labels=bug)`- Want to include bug and blocker labels?`[click here to open an issue](http://github.ibm.com/your-organization-name/your-issue-tracker-name/issues/new?template=bugs.md&title=your-issue-title-here&labels=bug,blocker)`      &#10094; Hills / Epics / Stories / Tasks    Code Reviews &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/09-issue-templates/",
    },
    {
      "title": "GitHub - Labels",
      "text": "---title: GitHub - Labels---## LabelsGitHub uses labels for nearly everything - categorization (task/defect/etc), state (open/in progress/etc), priority (h/m/l), size (S/M/L)Your team is free to create the labels you need to organize your work. In the Issue Tracker, click on Labels. Click the green New Label button, enter some text and pick a color (you can use html colors here)## Filtering of labelsFiltering is usually easy, you just select the labels you want to see and GitHub quickly filters out everything that doesnt have your labels.One thing that has come up is that the filtering is AND based and not OR based. Theres a bit more work involved if you want to achieve the equivalent of an OR.Heres a scenario: Carl wants to view issues assigned to the App Squad that are labeled with Epic and Major Epic labels, but does not want to see issues assigned to that team labeled bugs, stories or tasks.  To achieve this, just enter the following into the filter field to exclude the labels you dont want: `is:open is:issue label:Squad: App -label:story -label:bug -label:task`This will give you a bookmarkable link in the browser address bar.This is probably the ugliest thing Ive found around task tracking, but at least we have an easy way to do it.## BookmarksEvery filter/search you do in the GHE Issue Tracker can be bookmarked in your browser for easy sharing. You can think of this to creating a report in RTC (search/filter) and saving the Report (bookmarking).Use a wiki page to keep the URLs for the search/filters your team uses regularly      &#10094; Milestones (Sprints / Iterations)    Big Products &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/04-labels/",
    },
    {
      "title": "GitHub - The Issue Tracker",
      "text": "---title: GitHub - The Issue Tracker---## The Issue TrackerHeres what the Tracker looks like:Heres what everything means:Nearly everything you can do in RTC or other tools can be done in the GHE Issue Tracker.Now, just because we can do everything we used to, doesnt mean we should. Read the rest of the pages for some ProTips for planning and tracking work in the GHE Issue Tracker.      &#10094; Planning and Tracking Overview    Milestones (Sprints / Iterations) &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/02-tracker/",
    },
    {
      "title": "GitHub - Code Reviews",
      "text": "---title: GitHub - Code Reviews---Code review is the practice of one team member reviewing and discussing another team member’s code change, using a tool like GitHub Enterprise, in order to build confidence in the change before it’s merged. Based on the reviewer’s comments, the code should be updated and reviewed again, until it is as good as it needs to be for the long-term success of the project.      &#10094; Issue Templates    Dependency Management &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/10-code-reviews/",
    },
    {
      "title": "GitHub - Executive Dashboards",
      "text": "---title: GitHub - Executive Dashboards---Our leadership team meets regularly to review the work of all of our teams focusing on the big picture. For those teams practicing Design Thinking, the Hills are the focus. For those teams not practicing Design Thinking, youll see milestone achievements. To create a single source of truth for your organization, move this reporting into GitHub and stop copying and pasting information into Powerpoint/wikis/spreadsheets which quickly got out of date.Bring your Executive Status to your Executives.Were using a Watson-wide Quarterly Project Tracker which provides a single place to see:- Status of each offering - On Track / At Risk / Blocked / Complete- All offerings scheduled to go out during a year- Quarter by quarter breakdown- Filter by status- Filter by Month- Filter by Offering / Release ManagerIt looks like this:To implement this, weve:- Added columns in ZenHub for each Quarter- Created one Issue, per Offering, per Quarter  - For those teams _not_ practicing Continuous Delivery, weve used Milestones to capture the month a scheduled release is targeting- Assigned one of the Status labels (On Track / At Risk / Blocked / Complete) as appropriate- Used the Issue Description to capture the high level current Status  - After a Status Review Meeting, we move the current Status to a comment (to keep a history of what was reported)  - We continually update the description with any up to date information- Included links to/from other Issues to allow our leaders a quick click through experience if they wish to dig deeper      &#10094; Dependency Management    RTC Cheat Sheet &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/12-executive-dashboards/",
    },
    {
      "title": "GitHub - Finding Things",
      "text": "---title: GitHub - Finding Things---Finding Things...If youve been working in public GitHub, you probably know how to find the stuff you care about. If not, here are some helpful hints.- The Issues link in the black bar at the top of the GitHub page (https://github.ibm.com/issues) takes you to a view that allows you to see the issues that you created, were assigned to you, or where you were @mentioned.- Created: https://github.ibm.com/issues- Assigned: https://github.ibm.com/issues/assigned- Mentions: https://github.ibm.com/issues/mentionedYou can add a few parameters to focus your search:- All open issues across an organization:`https://github.ibm.com/issues?&q=is:open+is:issue+user:ORGANIZATION-NAME`- All open issues labeled `bug` across an organization:`https://github.ibm.com/issues?&q=is:open+is:issue+user:ORGANIZATION-NAME+label:bug`- All open issues labeled `bug` and `blocker`:`https://github.ibm.com/issues?&q=is:open+is:issue+user:ORGANIZATION-NAME+label:bug+label:blocker`GitHub has a great page detailing the extended search syntax here:https://help.github.com/articles/search-syntax/      &#10094; Big Products    ZenHub (Kanban) &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/06-finding-things/",
    },
    {
      "title": "GitHub - Milestones (Sprints / Iterations)",
      "text": "---title: GitHub - Milestones (Sprints / Iterations)---One Tracker, many Milestones.RTC promotes the creation of a separate plan for each and every iteration, plus one for the backlog. This leads to mis-marked work items and things slipping through the cracks. In the GHE Issue Tracker, you have the tracker,  a single repo used for Issue Tracking and assign issues to Milestones. You have ONE place to keep track of all of your work, and use filters to show only what you want to focus on.Your team is free to create the Milestones you need to group work together for a period of time. In the Issue Tracker, click on Milestones, then click the New milestone button. Milestones can be created with and without Due DatesThe Milestone tab makes it incredibly easy to see a teams progress towards completion of their work, it looks like this:Easy, simple, clean.      &#10094; The Issue Tracker    Labels &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/03-sprints-releases/",
    },
    {
      "title": "GitHub - Hills / Epics / Stories / Tasks",
      "text": "---title: GitHub - Hills / Epics / Stories / Tasks---## Hills / Epics / Stories / TasksGitHub Enterprise uses a single work item type - the Issue. Many people expect to categorize their work as Epics/Stories/Tasks/Defects/etc.- Hills, Epics, and Stories should be Issues in your product-wide issue tracker, use hill, epic and story labels to differentiate them- Stories should include a link back to the parent epic- Tasks should be tracked as checklist items in the body of a Story, but dont fill up your Tracker with Issues labeled as Tasks. If something is big enough to track as an issue, its not a task, its probably a Story or Epic.## Epics / Stories[Epics have come to ZenHub](https://w3-connections.ibm.com/blogs/widp/entry/ZenHub_Update). Epics allow us to easily see all of the child dependencies of an Issue with ease.Heres how it works.Open an Issue, scroll down until you see Epics in the right side bar. Click it and select Convert to epic.Youll now see an empty table and two new progress bars for Issues and Story Points completion.Click the Add or modify issues in this epic and youll be brought to the Epic Builder View.Find your child issues by searching, filtering, or scrolling, the check the checkbox. Theyll be added to the list on the left.Click Update Epic and youll be brough back to the Epic Issue. The table will be populated and the progress bars will reflect the Open v Closed status and Story Point Completion status for each of the child Issues.The Kanban board adds a Filter by this epic button to every Epic card.Click it and you filter the board to show only the Epic Issue and all children.The very first day we had the update, we started testing it out with Watson Conversation epics and immediately saw that we had an Epic in the implemented column, while it still had a child story in the backlog! ZenHub makes it incredibly easy to spot probrems.Fast, simple, clean, powerful.## Linking IssuesYou can easily link one issue to another, details on the [Linking Issues](github/16-linking-issues/) page.## TasksHeres a screenshot that shows how to use - [ ] checkbox lists and @mentions to deal with tasks needed to complete the Story:![Tasks](https://pages.github.ibm.com/the-playbook/resources/images/github/tasks.png)Using this technique you have ONE place to see the progress of all work related to the User Story, the User Story itself. Simple, effective, fast.@mentions work even if the person isnt a member of your repo/team/organization, typeahead doesnt work, but you can easily paste them right in if you know their github username...## Epics/Stories (the old way)Heres a screenshot that shows how you can leverage labels and #mentions to do set up Epic/Stories:      &#10094; ZenHub (Kanban)    Issue Templates &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/08-hills-epics-stories-tasks/",
    },
    {
      "title": "GitHub - RTC Cheat Sheet",
      "text": "---title: GitHub - RTC Cheat Sheet---Many of the terms and concepts in RTC can be found in GitHub. This page will help you make the connections.RTC | GitHub Enterprise Issue Tracker------------ | -------------Term: Work Item | Term: IssueTerm: Epic/Story/Task | Term: Issue (use labels to categorize)Term: Sprint/Iterations/Release | Term: MilestoneTerm: Due Date | Term: MilestoneTerm: Tag | Term: LabelRTC tag=mor | Add #status-review in the description plus one of the Status- labelsMOR R /Y/G/B drop down | Use one of the Status- labelsNew/In Progress/etc work item states | ZenHub provides states - drag and drop issues between columns.High/Medium/Low Priority | Use a Label for High/Medium/Low PriorityParent/Child work items | ZenHub provides Epics (you can also use #issue-number to cross reference - any referenced issue will show up in the audit trail)Story Points | ZenHub provides Story PointsCode Review Workflow | Team member creates a Pull Request which gets reviewed before code can be merged in      &#10094; Executive Dashboards    FAQ &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/13-rtc-cheat-sheet/",
    },
    {
      "title": "GitHub - Dependency Management",
      "text": "---title: GitHub - Dependency Management---Following is guidance on the workflow a team can use to track and review dependencies using GitHub. It is meant as an example to help get you started and should be tweaked to meet your teams specific needs.Requesting team creates a new Issue in the Delivering teams repository. The issue description should include the following at minimum... Requesting teams contact info - i.e. Offering Manager, Release Manager, Technical Lead, etc... basically who the Delivering team should contact for more info. Details on the requested work and links to reference materials. Timeframe for when the work is needed by. Depending on phase of project this could be a quarter, month, sprint or even a specific date. A cross-org/repo link to the work item in the Requesting teams repository that requires this work using the following convention... this functionality is needed for organization-name/repository#. Delivering team reviews the new issue and may request additional information in order to identify all the activities needed to satisfy the request. Once appropriate level of information is provided, the Delivering team assesses the request...  prioritizing it among other work assigning to the appropriate squad for estimation and ultimately providing confirmation on whether or not it can be contained in the requested time frame. An initial agreement confirming timing of implementation from the Delivery team will be needed prior to it being officially picked up by the assigned squad as part of their sprint planning activities.  This will be used by the Requesting team to continue their planning efforts.  If contained - it will get moved to the Delivering squads backlog to be picked up in the appropriate sprint for implementation.  If not contained - prioritization or negotiation discussions will need to occur between the OM/Dev/Design leadership teams.Once containment is agreed, continuous interlocks between the teams should occur to check on the progress of the dependencies and discuss risks and mitigations if issues arise. The Requesting team may also want to create labels within their projects tracker to help highlight open items awaiting acceptance by the Delivering team and assist with understanding potential downstream impacts.  Examples include...  Team you are dependent on so you can filter your views as needed for interlocks and reporting - ex. OnPlatform, On Status - ex. Dependency: Interlockedor Dependency: NOT Interlocked### Additional guidance Depending on the amount of dependency requests coming into your team, additional workflow may be needed in order manage the review and acceptance process. The Platform Team has a great workflow in place that allows them to funnel requests to the broader team through one channel and clearly communicate where things are within their review process back to the requestor.## Dig Deeper- [Play by Play: Dependencies in Aha! and ZenHub](../../ennterprise-agile/practices/dependencies)      &#10094; Code Reviews    Executive Dashboards &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/11-dependency-management/",
    },
    {
      "title": "GitHub - Planning and Tracking Overview",
      "text": "---title: GitHub - Planning and Tracking Overview---Planning and tracking is one of the top-priority items for teams moving to GitHub Enterprise. Just about everything you can do in other planning and tracking tools you can do in GitHub, even if the names and exact ways of doing them are slightly different. While GitHub provides a robust set of tools for planning and tracking out of the box, it is augmented by [ZenHub](http://ibm.biz/zenhub-install) ([ibm.biz/zenhub-install](http://ibm.biz/zenhub-install)), a browser plugin for Chrome and Firefox browsers.  The following pages should help you understand how to use GitHub and ZenHub together to achieve your planning and tracking needs.      &#10094; Getting Started with GitHub    The Issue Tracker &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/01-overview/",
    },
    {
      "title": "GitHub - Mobile",
      "text": "---title: GitHub - Mobile---GitHub works _amazingly well_ on mobile devices now. Simply launch your browser and navigate to http://github.ibm.com to see the default view.## Screenshots- View all Issues and Pull Requests assigned to you by searching for assignee:your-name- Tap an Issue to open it- Tap the menu to switch to navigate- Work with Pull Requests- Tap Changes to access the diff viewer- You can update an out of date branch, add comments and even merge a Pull Request- On iOS, you can tap the share icon and then Add to Home Screen to put an icon on your home screen      &#10094; FAQ    Linking Issues &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/15-mobile/",
    },
    {
      "title": "GitHub - Getting Started with GitHub",
      "text": "---title: GitHub - Getting Started with GitHub---As we make the shift from locked down, private RTC instances, to the [Social Coding](https://whitewater.ibm.com/field-guide/practices/social-coding) world of GitHub, you might need some help. Thankfully, with GitHub being the world leader in hosting Open Source projects and Git being the worlds most popular source control management system, theres plenty of help available.## Getting Access- GitHub is automatically available to all IBMers (including contractors). Log in with your w3ID here: [http://github.ibm.com](http://github.ibm.com)> ProTip: Youll need to log into GitHub before you can be added to a GitHub Team or Organization.## Learning Git and GitHubGit is an open source control management system, and its what underlies GitHub. For those new to Git, [its website](https://git-scm.com/) is a learning resource, including documentation and the ability to try it out in your browser. Atlassian has a fantastic set of [Git tutorials and tips](https://www.atlassian.com/git/) for those looking to learn for the first time or dive deep in to things they may not know.GitHub Enterprise, being an on-prem offering of GitHub Public, has _great_ help available on the [public help site](https://help.github.com). Everything applies to GHE, just make sure to substitute `github.ibm.com` when walking through any steps.  GitHub also provides a great set of [guides](https://guides.github.com/) for those new looking to learn how to navigate Git and GitHub.Finally, if youre looking to implement Git for your team, check out [Git for Teams](https://www.safaribooksonline.com/library/view/git-for-teams/9781491911204/) on Safari Online.## Using GitThere are so many ways to use Git! Pick whatever way works best for you, or use a combination of them! The choice is yours!### Text Editors and IDEsFor those who would like to use Git from their Text Editors and IDEs, there are plenty of Git plugins available! [Git and GitHub for Eclipse](http://eclipse.github.io) [Git for Sublime Text](https://github.com/kemayo/sublime-text-git) [Git for Atom](https://github.com/akonwi/git-plus) [Git for VIM](https://github.com/tpope/vim-fugitive)### Desktop ApplicationsFor those who prefer a stand-alone application for Git, there are quite a few available for both Windows and Mac [SourceTree](https://www.sourcetreeapp.com/) - (Windows/Mac) [Git Tower](https://www.git-tower.com/) - (Mac) [GitHub Desktop](https://desktop.github.com/) - (Windows/Mac)### Command LineFor those who like to work using the command line, here are some helpful links. [Git CLI](https://git-scm.com) from the official website. [Hub](https://hub.github.com/) is a command-line wrapper for git that makes you better at GitHub. [Git Cheat Sheet](https://education.github.com/git-cheat-sheet-education.pdf) is a nice poster-style pdf that prints nicely.### ConfigurationBefore you go any further, `git` must be set up properly on your local machine. We require that the author for commits be your full name and IBM email address. Please use the common form of your full name. For example George Champlin-Scharff instead of georgecs. If you go by another name for your first name, its okay to use that, for example Burak Akbulut instead of Muhtar Akbulut.```bashgit config --global user.name Jane Doegit config --global user.email janedoe@us.ibm.com```We cannot accept code that has invalid `user.name` or `user.email` settings.### Delivering Code with GitHub [Delivering Code with GitHub Desktop](../../developer-guide/delivering-code) [Delivering Code with the Command Line](../../developer-guide/delivering-code-command-line)### Dont Dont share [Protected Health Information (PHI)](https://en.wikipedia.org/wiki/Protected_health_information), [Personally Identifiable Information (PII)](https://en.wikipedia.org/wiki/Personally_identifiable_information), or [Sensitive Personal Information (SPI)](https://en.wikipedia.org/wiki/Sensitive_personal_information) in GitHub. If you suspect PHI, PII, or SPI has been shared in GitHub, unintentionally or otherwise, please immediately send an email to [Watson Security/Jericho/IBM@IBMUS](mailto:wmssec@us.ibm.com?Subject=Potential%20Security%20Incident%2C%20Watson%GitHub) and copy your manager. Indicate that a potential security incident may have occurred in GitHub. Your manager and the Watson Security Team will work together to help you determine whether an incident has occurred and, if so, what the next steps are required to remedy the incident.   IMPORTANT: Our primary concern is not to place blame or get anyone in trouble, but to determine the depth of any incidents that may occur and contain them as quickly as possible. If you see something you are unsure of, it is safer to report it to the Watson Security Team than to not do so. They are here to help protect both you and IBM. Please give the Watson Security Team your full cooperation, and please do not take any action to contain or remediate an incident unless doing so under the direction of the Watson Security Team.## Frequently Asked QuestionsQ: Ive been granted access, but my w3 username/password isnt working in the Eclipse/Desktop/CLI client, whats wrong?A: Clients dont actually use your w3 credentials.- Your GitHub username is almost always the name part of your email address (without the `@.ibm.com` part)- You need to create a _Personal Access Token_ in the GitHub web UI that you will use for your password ([instructions](https://help.github.com/articles/creating-an-access-token-for-command-line-use/))- For GitHub Desktop (Mac), click the `Enterprise` button, type in `https://github.ibm.com`, and click `Sign In` without entering your username or password. This will prompt you with OAuth authentication, which will up the _Personal Access Token_ for you.- For GitHub Desktop (Windows), click the `Enterprise` button, type in `https://github.ibm.com`, add your GitHub username and the _Personal Access Token_ created above, as your password, then click `Sign In`.Q: I have a local project on my laptop, how do I move it to github.ibm.com?A: See [adding an existing project to GitHub using the command line](https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/) on GitHubs help website      &#10094; GitHub    Planning and Tracking Overview &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/00-getting-started/",
    },
    {
      "title": "GitHub - Linking Issues",
      "text": "---title: GitHub - Linking Issues---Linking IssuesGitHub provides the ability to link issues together by simply mentioning them in a description or during a conversation. This is incredibly helpful define relationships between issues.Linking is done by referencing one issue from another.Links are bi-directional, but depending on where you create the link, GitHub displays the link differently. One of the Issues will get a link with a live Open/Closed status icon, the other just gets a link.Well use two issues to illustrate how it works. Issue A (#1) and Issue B (#2).- To create the live Open/Closed Icon in Issue A (#1), go into Issue B (#2) and add this is related to #1- To create the live Open/Closed Icon in Issue B (#2), go into Issue A (#1) and add this is related to #2To link between issues in the same repository, just type a # followed by the number or the description - auto-fill will take care of the rest.To link between issues in different repositories, use the following syntax:- organization-name/repo-name#issue-number (e.g. watson/transformation-tracker#406)      &#10094; Mobile    GitHub Overview &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/16-linking-issues/",
    },
    {
      "title": "GitHub - F.A.Q",
      "text": "---title: GitHub - F.A.Q---## FAQQ: Templates! How do I create Templates!A: GitHub Enterprise 2.6 added a single issue template per repo, if you need more, we have a clever trick.  See the [Issue Templates](github/09-issue-templates) page.Q: SO MANY EMAILS! SPAM! Too many Notifications!A: Tame them! Details here: [https://w3-connections.ibm.com/blogs/widp/entry/Taming_GitHub_Enterprise_Email_Notifications?lang=en](https://w3-connections.ibm.com/blogs/widp/entry/Taming_GitHub_Enterprise_Email_Notifications?lang=en)Q: How do I import my RTC Work Items into GHEs Issue Tracker?A: DONT DO THIS! Use the opportunity to start fresh. No? Thats not a good enough answer? This might help: [http://github.com/rtcTo](http://github.com/rtcTo) (we havent had anyone report back that theyve used it)Q: How can I move my team from mercurial to github.ibm.com?A: One of our teams just did this by following the steps outlined here: [http://hivelogic.com/articles/converting-from-mercurial-to-git/](http://hivelogic.com/articles/converting-from-mercurial-to-git/)Q: How do I tag a github repo that a Jenkins build completed successfully?A: See this page: [https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W1e6642eaf1d6_456e_9c1f_1b95e4d3bbc0/page/Tag%20git%20repo%20on%20Successful%20Jenkins%20Build](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W1e6642eaf1d6_456e_9c1f_1b95e4d3bbc0/page/Tag%20git%20repo%20on%20Successful%20Jenkins%20Build)      &#10094; RTC Cheat Sheet    Mobile &#10095;  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/github/14-faq/",
    },
    {
      "title": "Setting up GitHub Integration",
      "text": "---title: Setting up GitHub Integration---## Overview![Hills > Epics > Stories](https://pages.github.ibm.com/the-playbook/resources/images/agileplaybook/hills-epics-stories.png)Setting up Aha & GitHub integration can only be completed by Aha Administrators with at least Product Owner status.## Pre-reqs- Youll need a [Functional ID](https://w3.ibm.com/help/#/article/notes_id_admin_fid/overview) (e.g. watsonpr for Watson Platform, icadmin for IBM Cloud)- The Functional ID will need to have an Aha Product Owner license- Log into GitHub with your Functional ID- Go to: https://github.ibm.com/settings/tokens- Click the Generate new token button and save the 30+ digit token somewhere safe (treat it like a password)## Setting up the Integration### Aha > GitHub Integration- Add your Functional ID to your GitHub Repository (with write access)- Log into Aha with your functional ID and navigate to the product you wish to enable GitHub integration for- Click the Settings icon (the Gear icon in the top right corner)- Click the + icon next to Integrations in the left sidebar- Enter your Functional IDs GitHub Username in the Username field- Click Edit Password and enter the 30+ digit Personal Access Token- Enter https://github.ibm.com/api/v3 for the Server URL- Click the Test Connection button- Pick the organization/repository you want to connect to from the Repository dropdown- Set the Statuses options to New for Open and Shipped for Closed- Set the Mapping option to `Feature -> Issue, Requirement -> Checklist`- Check Add status labels- Check EnableFollowing these steps will give you a Send to GitHub Issues option in your Epics...### GitHub > Aha IntegrationTo enable GitHub to send changes _back to Aha_, do the following:- Copy the Webhook URL in the Aha Integration Settings page![Sample GitHub IntegrationÒ](https://pages.github.ibm.com/the-playbook/resources/images/aha/sample-github-integration.png)- Go to your GitHub Repository- Click the Settings Tab- Click WebHook in the sidebar- Add a new WebHook- Paste the WebHook from Aha into the field- Select the _JSON_ option from the type drowndown- Save and enable the WebHook.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/aha/github-integration-guide/",
    },
    {
      "title": "Aha! Idea Portals",
      "text": "---title: Aha! Idea Portals---> Our highest priority is to satisfy our users through the early and continuous delivery of valuable software.## Overview Ideas in Aha! are similar to requests for enhancement. Externally available Portals allow us to collaborate with our stakeholders and prioritize their feedback. Ideas can be upvoted by registered users. Accepted Ideas are then taken forward and linked to Epics, Hills, and Strategic Priorities.This allows us to track and Idea from thought to production in a closed loop fashion.> ProTip: Before submitting an Idea, [](https://www.ibm.com/blogs/bluemix/2016/10/think-write-submit/)read the blog post by Tim Brantner called [Think, Write, Submit: New Ideas Portal for IBM Cloud](https://www.ibm.com/blogs/bluemix/2016/10/think-write-submit/). This incredibly useful article will help you get the most out of Ideas. Theres also an [Aha! Ideas Portals Presentation](https://ibm.box.com/s/0umrd4mygcznc2nap12zed1h8xjv7d2t) you should watch.## Ideas Portals for Cloud Platform> ProTip: IBMers should use the internal Ideas Portals - just log in using your w3ID.### Cloud Platform Organization- [Cloud Platform Ideas Portal (for Customers)](https://ibmcloud.ideas.aha.io/)- [Cloud Platform Ideas Portal (for IBMers)](https://internal-ibmcloud.ideas.aha.io/)### Watson AI Products- [Watson AI Ideas Portal (for Customers)](https://ibm-watson.ideas.aha.io/)- [Watson AI Ideas Portal (for IBMers)](https://internal-ibm-watson.ideas.aha.io/)### Watson Data Platform (WDP) Products- [Watson Data Platform Portal (for Customers)](https://ibmwatsondataplatform.ideas.aha.io)- [Watson Data Platform Portal (for IBMers)](https://ibmwdp-internal.ideas.aha.io)## Working with Ideas...The Idea is reviewed by the team to determine if the request is “actionable”.If it is Accepted, the Idea is:- Marked Accepted by a Status Change- Prioritized against existing backlogs- Linked to Hills or Epics already created or in plan. Or promoted to Hill or Epic by the teamIf an Idea is Rejected, the status is changed to Will Not Implement. This may be if it is determined to be:- Not aligned with our Strategy- Too costly to implement based on revenue opportunityThe person that submits the Ideas is stored as the “Creator”The Creator receives an email when:| The Owner is responsible to:-----------------------------------|----------------------------The Idea is created | Add a public comment requesting or providing informationThe Idea is updated with a public comment | Link the Idea to an Hill or Epic where appropriateThe Idea transitions states | Transition the state of the Idea_Note: The Owner should comment on the Idea whether it is Accepted or Not, to allow an end-to-end communication with the submitter and the subscribers to the Idea._## Idea Reports and StatusTo begin reviewing your Ideas:1. Create an Ideas List Report that shows the data your team is interested in (for example):- Idea Name- Idea Status- Assigned To- Created By- Record Links- Date Created- Idea Priority2. Filter the Ideas List so that it contains Ideas specific to your team (for example):- Select Product Names \IBM Cloud Ideas and \IBM Cloud Ideas – Internal- Owning Segment/Owning Team- Idea Priority- Idea Status3. If you would like to see your Ideas Status as a Pie Chart for your team, similar to how they are presented in the Overview (for example):- Reports --> Charts- +New Report --> Start with Example Chart - Pie chart: Structured Ideas Status- Select Product Names IBM Cloud Ideas and \IBM Cloud Ideas – Internal- Filter Structured Ideas by Owning Teams",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/aha/ideas/",
    },
    {
      "title": "Aha! Notebooks",
      "text": "---title: Aha! Notebooks---## OverviewNotebooks are an easy way to take almost any view from Aha! and publish it as a PDF or a secure web Page.## Creating a NotebookTo create or add to an existing notebook simply select export at the top right of any screen and select Create new Notebook or Add to Notebook.  Save as image and save as PDF just saves the current view and does not create a notebook.+ or to add to an existing notebook select an existing notebook+ Hover over Reports-> Notebooks and select Notebooks Overview    + The default name will look like _Notebooks dd/mm/year hr:min._    + Select your Notebook and rename it appropriately.  + Change the Public Title to Product -- Report Type  + Set Public Subtitle to the creation / latest date of the Notebook (e.g. Aug. 17, 2017)  + Set Public description to the following Disclaimer Language (cut and paste the language from below)    + Copyright IBM Corporation 2017.  All rights reserved.  U.S. Government Users Restricted Rights - use, duplication, or disclosure restricted by GSA ADP Schedule Contract with IBM Corporation.    + IBM, the IBM logo, and ibm.com are trademarks or registered trademarks of International Business Machines Corporation in the United States, other countries, or both.  If these and other IBM trademarked terms are marked on their first occurrence in this information with a trademark symbol (® or TM), these symbols indicate U.S. registered or common law trademarks owned by IBM at the time this information was published.  Such trademarks make also be registered or common law trademarks in other countries. A current list of IBM trademarks is available on the Web at “Copyright and trademark information at:  www.ibm.com/legal/copytrade/shtml.    + The information contained in this presentation is provided for informational purpose only.  While efforts were made to verify the completeness and accuracy of the information contained in this presentation, it is provided “as is” without warranty of any kind, expressed or implied. IBM shall not be responsible for any damages arising out of the use of, or otherwise related to, this presentation or any other documentation.    + Any statements of performance are based on measurements and projections using standard IBM benchmarks in a controlled environment. The actual throughput or performance that any user will experience will vary depending upon many factors, including considerations such as the amount of multi-programming in the user’s job stream, the I/O configuration, the storage configuration, and the workload processed. Therefore, no assurance can be given that an individual user will achieve results similar to those stated.    + IBM’s statements regarding its plans, directions, and intent are subject to change or withdrawal without notice at IBM’s sole discretion. The development, release, and timing of any future features or functionality described for our products remains at our sole discretion. Information regarding potential future products is intended to outline our general product direction and it should not be relied on in making a purchasing decision.+ After the notebook is created you will have the option to Generate a PDF or Create a Secure WebPage that contains the content of the notebook.    + When sharing a web page you can control access by selecting the gear and setting Enhance Security appropriately.+ Set the Footer to IBM Confidential and the other fields to your needs.  ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/aha/notebooks/",
    },
    {
      "title": "Standard Reports and Views",
      "text": "---title: Standard Reports and Views---## Overview The Watson Core Platform Segment has standardized on a number of standard reports and saved views. This helps our leaders see the whole picture so they can make more informed decisions about our shared priorities.We use Release Targets (formerly named Milestones) in Aha to show when we want to release something.GitHub continues to be the place to best understand on a minute by minute basis when something will actually be done.## Release Targets by Quarter (and Half Year)Release Targets must be set up for you product for the next few Quarters and then for the Half Year after that. (E.g. This Quarter, Next Quarter, First Half, Second Half)- Switch to the Board view for your Product- Click the blue +New Release target button- Enter the name (e.g. Q1 2018, Q2 2018, 2H 2018, etc)- Ensure that your product is listed in the Add new milestone to dropdown- Pick the date the Quarter (or half year) ends- Select No template from the Milestone phase template dropdown- Click Create Milestone## About the Gantt Chart...One thing that isnt obvious - the Gantt chart wont include all of the Epics you start adding to the columns youve just set up. Its meant to be a planning view, not a necessarily a reporting view, so it doesnt automatically populate with your Epics unless you specifically add them to it.##### 🤔While youre thinking about why the team at Aha thinks that the two views shouldnt have the same data automatically, heres what you need to do.- In the Gantt Chart, hover over the bottom of the Release Target until the Existing Epics button appears- Click that button- Add all your Epics.Moving forward, youll need to add any new Epic you want to show up in your Gantt view that you have in your board view.Weve provided feedback to Aha that this is less than awesome...## Standard Reports and ViewsEach Product in the Watson Portfolio needs to have a few views in the Reports folder so that everyone has easy access to the Roadmap.- Log into Aha!- Go to this page: https://bigblue.aha.io/products/WATSON- Youll see that each Product has three links saved, youll need to save these for your Product if they arent already there.### Roadmap (Epics by Quarter)- Select your Product from the navigation dropdown- Click on the Blue Reports Icon -> Roadmaps -> Epics- Click Choose Release Targets and scroll to find your products release targets- Click Customize Epics and select Show epic status and Roadmap Categories- Click Save- Enter the name: Roadmap (Epics by Quarter)- Share with Watson Core- Save in Folder: Your Product Name- Check Allow other users to modify this view- Click Save View- Copy the URL for your saved view- Add it to this page: https://bigblue.aha.io/products/WATSON### Roadmap (Release Targets - Detailed View)- Select your Product from the navigation dropdown- Click on the Blue Reports Icon -> Roadmaps -> Release Targets- Click Customize and select Color bars by status- Click Save- Enter the name: Roadmap (Release Targets - Detailed View)- Share with Watson Core- Save in Folder: Your Product Name- Check Allow other users to modify this view- Click Save View- Copy the URL for your saved view- Add it to this page: https://bigblue.aha.io/products/WATSON### Epics by Quarter (Team View with labels)- Select your Product from the navigation dropdown- Click on the Blue Epics icon -> Board- Copy the URL for your saved view- Add it to this page: https://bigblue.aha.io/products/WATSON",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/aha/watson-standard-reporting/",
    },
    {
      "title": "Armada for Watson",
      "text": "---title: Armada for Watson---This site contains documentation about Watsons use of Armada (Kubernetes managed by IBM Cloud team).This is NOT meant to replace the Armada teams documentation, but to document Watsons usage conventions and details about our cluster(s).## Frequently Asked Questions [FAQ About Watsons Armada Configuration/Administration](https://ibm.enterprise.slack.com/files/seharris/F53KR8B6H/Frequently_Answered_Questions/)## Overview NOTE: Armada for Watson varies slightly from the Armada retail version. See the [Armada for Watson](armada-watson/) section for details. [Armada Architecture Overview](https://ibm.ent.box.com/notes/112926922958) [Armada Architecture Details](https://github.ibm.com/alchemy-containers/armada/blob/master/architecture/architecture.md) [Armada Internal User Documentation](https://console.stage1.ng.bluemix.net/docs/containers/cs_internal.html) [Armada for Watson](armada-watson/) [Watson HA on Armada](armada-watson#ha)## General Kubernetes Links (Suggestions welcome here) [Kubernete Main Site](https://kubernetes.io/) [Kubernetes Gets a Children’s Book](https://thenewstack.io/kubernetes-gets-childrens-book/) [Local Kubernetes Setup with simulated Dev and Production](https://thenewstack.io/tutorial-configuring-ultimate-development-environment-kubernetes/)## Guidance [Shared Cluster](guidance) [Base Images](guidance#base-images) [Example Code (aka Hello World/)](guidance#examples) [Logging](guidance#logging) [Metrics](guidance#metrics) [Building Images and Promoting Them](guidance#image-build-and-promotion) [Persistent Storage](guidance#persistent-storage)## Collaboration [Slack](collaboration#slack) [Daily Standup](collaboration#daily-scrums) [GHE](collaboration#ghe-repos) [Support](collaboration#support)## Environments [Clusters](environments/)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/armada-watson/",
    },
    {
      "title": "GitHub Flow - fork+branch+commit+pull",
      "text": "---title: GitHub Flow - fork+branch+commit+pull---Most teams in Watson follow [GitHub Flow](https://guides.github.com/introduction/flow/) when delivering code. There are a great many sites on the internet that overcomplicate a model that really just has four main steps.Heres how it all works with the [GitHub Desktop](https://desktop.github.com) application (which automates many steps for you). If you prefer, theres a [command line version of this page](../../developer-guide/delivering-code-command-line).> ProTip: [Install and configure GitHub Desktop](../../github/00-getting-started/) before you start...___## Fork & CloneThis will create a personal copy of the repository on github.ibm.com and download it to your laptop...- In your web browser, go to a projects repository and click - Youll be asked where to fork the project (pick your username).- Once the fork has been created, click the green Clone or download button, then click Open in DesktopAs long as GitHub Desktop is set up properly youll soon have a local copy of your fork. Shiny.___## BranchThis will create a branch of the repository that you can work in without making changes directly to your `develop` branch (or `master` branch if your team doesnt use a `develop` branch)- Click the Add a branch button and enter a good name (most teams use the pattern: type/issue-number-plus-a-description-of-what-you-are-changing)The branch is created locally on your laptop. Want to get it to your space on github.ibm.com? Click the Sync button in GitHub Desktop.Thats it. Now you can safely start making changes. Sweet.___## CommitAs you start to make changes to code on your laptop, youll see your changed files automagically show up in the list view of the GitHub Desktop application.- To commit your changes, enter a Summary, a Description, then click Commit to _your-branch-name_> ProTip: Make sure you follow the patterns used by your Squad. See the patterns section at the bottom of this page for details...This commit has been done _locally_ on your laptop. To get it into your user space on github.ibm.com, click the Sync Button.> ProTip: To automatically sync after committing, select Edit -> Automatically Sync after Committing.You can commit multiple times to the same branch.> ProTip: Before you open a Pull Request, click that Update from `develop` button to make sure you are in sync with the rest of the project...When youre done, youre just a button click away from getting your changes into the code review process. Nice.___## Pull RequestCreating a pull request starts the code review process and (eventually) ends with your code being merged into the project.- Click the Pull Request button.> ProTip: If you see a nice big friendly green icon show up, your pull request can be automatically merged. Nice job keeping your branch up to date.- Click the Send Pull Request button.At this point, the collaborative code review process starts. As you get feedback, youll probably need to make additional changes. When you do, just repeat the Commit steps, GitHub will automagically keep your commits funneling into the same Pull Request. Wonderful.___## Wrapping up...Many teams like to Squash commits before merging, this keeps the history nice and tidy. This is easy to do in the GitHub web app.Finally, when youre change has been merged, you can delete your branch. This is also very easy to do in the GitHub web app.Automagic stuffTheres a TON of automation here, so much so that many command line git users are deeply skeptical that the flow can be this basic. The truth is that it can be, _much of the time_, but you can still get into trouble with merge conflicts. GitHub Desktop tries to help you out as much as possible, but you may have to return to the command line from time to time.___### Patterns...Most teams use a number of patterns when delivering to GitHub. Check with your Squad to see which of these you use...## Commit Message FormatEach commit message consists of a header, a body and a footer. The header has a special format that includes a type, a scope and a subject:``` bash(): ```The header is mandatory and the scope of the header is optional.The goal of the commit message is to be human readable across a wide variety of devices and interfaces. Any line of the commit message cannot be longer 80 characters and [should preferably wrap at 72 characters](http://stackoverflow.com/q/2290016/57626).Where possible try to keep the bulk of the first line of the commit under 50 characters, however we realize this can be hard with the `():` prefix. This allows the message to be easier to read on GitHub as well as in various git tools.We allow a very minimal use of markdown within our commit messages. Primarily this relates to thefollowing elements: Bulleted lists. This should be obvious as the markdown version of such lists is very readable. Bold characters. Using `` or `` around a word for emphasis can helpful, although it should be done sparingly. Monospace characters. When embedded a identifier, such as a variable name, inside of prose, it may be more readable to use backticks ( ` ) around the identifier.## RevertIf the commit reverts a previous commit, it should begin with `revert:`, followed by the header of the reverted commit.In the body it should say: `This reverts commit .`, where the hash is the SHA of the commit being reverted.## TypeMust be one of the following: feat: A new feature fix: A bug fix docs: Documentation only changes style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) refactor: A code change that neither fixes a bug nor adds a feature perf: A code change that improves performance test: Adding missing tests chore: Changes to the build process or auxiliary tools and libraries such as documentation generation## ScopeThe scope could be anything specifying place of the commit change. For example `Training`, `StatusPage`, etc.## SubjectThe subject contains succinct description of the change: Use the present tense (Add server side CSV export vs Added server side CSV export) Use the imperative (Add server side CSV export vs Add CSV export to server) Capitalize the first word in your commit after the (): identifier A title is not a sentence – dont close it with a period Assume that your commit message will be rendered as plain text - dont use markdownWhere possible the subject should be under 50 characters. This isnt a hard and fast rule, but its a general guideline that allows support for as many tools as possible.## BodyJust as in the subject, use the imperative, present tense: change not changed nor changes.The body should include the motivation for the change and contrast this with previous behavior.## FooterThe footer should contain any information about Breaking Changes and is also the place to reference GitHub issues that this commit Closes. If youre working on a larger issue that spans multiple commits its safe to refer to the issue in the footer, but you may want to squash the history before submitting your pull request.Breaking Changes should start with the word `BREAKING CHANGE:` with a space or two newlines. The rest of the commit message is then used for this.A detailed explanation can be found in the [AngularJS Git Commit Message Conventions][commit-message-format], which we largely inherit.## Developer Certificate of OriginAll contributions to IBM Watson&trade; Offerings must be accompanied by acknowledgment of, and agreement to, the [Developer Certificate of Origin](http://elinux.org/Developer_Certificate_Of_Origin), reproduced below. Acknowledgment of and agreement to the Developer Certificate of Origin _must_ be included in the comment section of each contribution and _must_ take the form of:``` bashDCO 1.1 Signed-off-by: {Full Name} ```Contributions without this acknowledgment will be required to add it before being accepted. If a contributor is unable or unwilling to agree to the Developer Certificate of Origin, their contribution will not be included.``` bashDeveloper Certificate of OriginVersion 1.1Copyright (C) 2004, 2006 The Linux Foundation and its contributors.660 York Street, Suite 102,San Francisco, CA 94110 USAEveryone is permitted to copy and distribute verbatim copies of thislicense document, but changing it is not allowed.Developers Certificate of Origin 1.1By making a contribution to this project, I certify that:(a) The contribution was created in whole or in part by me and I    have the right to submit it under the open source license    indicated in the file; or(b) The contribution is based upon previous work that, to the best    of my knowledge, is covered under an appropriate open source    license and I have the right under that license to submit that    work with modifications, whether created in whole or in part    by me, under the same open source license (unless I am    permitted to submit under a different license), as indicated    in the file; or(c) The contribution was provided directly to me by some other    person who certified (a), (b) or (c) and I have not modified    it.(d) I understand and agree that this project and the contribution    are public and that a record of the contribution (including all    personal information I submit with it, including my sign-off) is    maintained indefinitely and may be redistributed consistent with    this project or the open source license(s) involved.```### Example Commit MessageHeres a sample commit message that adheres to our commit message guidelines:```bash(doc): Add GitHub Flow to the Developer GuideAdd GitHub Flow to the Developer Guide using GitHub Desktop so that the flow is as easy to understand as possible for users that are new to GitHub. Incorporates content from the Conversation Team’s command line GitHub Flow document.Closes watson/transformation-tracker#273DCO 1.1 Signed-off-by: George Champlin-Scharff ```> ProTip: adding closes or fixes in a commit message followed by the org/repo#issue-number will automatically close the issue once the Pull Request has been merged.### Frequently Asked QuestionsQ: Why do I need to have the `DCO 1.1 Signed-off-by` line in my commit message? The project isnt open source.A: Youre correct, right now most of these projects arent open source, but some may be in the future. When you put the line `DCO 1.1 Signed-off-by` in your commit youre making an assertion that you wrote the code. This make it easier for us to track down this information the future.Q: Is there an easier way to remember the commit format?A: Yes! You can [create your own `.gitmessage` template](https://robots.thoughtbot.com/better-commit-messages-with-a-gitmessage-template) that you can populate when you do a commit.## Helpful links- [commit-message-format](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#)- [angularcontributing](https://github.com/angular/angular/blob/master/CONTRIBUTING.md)- [fork](https://help.github.com/articles/fork-a-repo/)- [squashing](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages)## CreditsThis document is based on one created for the Watson Conversation Team by Patrick Wagstrom (who based _that_ document on the contributing standards from [Angular](https://github.com/angular/angular/blob/master/CONTRIBUTING.md)). We are thankful for their work in setting up good standards and norms of software development.The GitHub Flow image at the top of this page is a modified version of the one from [here](https://desktop.github.com)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/delivering-code/",
    },
    {
      "title": "Coding Standards - The Basics",
      "text": "---title: Coding Standards - The Basics---To ensure quality and consistency throughout our source code, keep these in mind as you are working: All tests must pass All features or bug fixes must be tested by one or more unit tests. Added code should have close to 100% test coverage for statements, branches, functions, and lines. Some projects may use automated mechanisms to prevent commits with sufficient test coverage. Follow the project specific coding rules. These are often found in `CONTRIBUTING.md` for each repository Run a full build, including linters, unit tests and coverage reports, using the gulp command and verify that all tests pass.# Style Guides Each language should have a general style guide and automated style checker. Do your best to adhere to these.  - Java - follow the [Java Coding Style Guide](../../developer-guide/java-coding-style-guide/).  - Javascript - there isnt an internal style _yet_. Please to try to be consistent with the rest of the code. [IBM Hackademy](https://pages.github.ibm.com/hackademy/resources/),  [FED@IBM](http://ibm.biz/fed-homeschool) and [Codestyle.co AngularJS Style Guide](http://www.codestyle.co/Guidelines/angularjs) are good references.  - Python - attempt to follow [PEP8](https://www.python.org/dev/peps/pep-0008/) where practical. Where PEP8 is unclear, defer to the [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html).  - Scala - follow the [Scala Coding Style Guide](../../developer-guide/scala-coding-style-guide).  - Go - follow [Effective Go](https://golang.org/doc/effective_go.html) - run `gofmt` before checking in code. When in doubt, please ask a member of your Squad.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/coding-standards-basics/",
    },
    {
      "title": "Code Review with GitHub Enterprisebanner:  ",
      "text": "---# Begin Pattern Specific datatitle: Code Review with GitHub Enterprisebanner:  title: Code Review  subtitle: with GitHub EnterpriselastUpdated: May 10, 2016resources:    Service Engage Case Study for DevOps TT : https://w3-connections.ibm.com/files/app#/file/fd9a2db7-6981-48a3-b54d-9ca56f71e8e5    Open Stack Peer Review : http://docs.openstack.org/infra/manual/developers.html#peer-review    Marketplace Engineering Wiki : https://ibm.biz/mp-engineeringtools:  - github  - traviscontributors:  - name: Chuck Brant    email: cbrant@us.ibm.com  - name: Rick Gebhardt    email: gebhardt@us.ibm.com  - name: Nick Bartlett    email: ntbartle@us.ibm.com  - name: Brett Lewis    email: lewisbre@us.ibm.compower-ups:  - title: Two Tasks Only    contributor:      name: Nick Bartlett      email: ntbartle@us.ibm.com    content: |      On our team, each developer can only have two tasks open at any give time — one in progress, and one waiting for review. This provides incentive to request and to address code reviews in a timely manner, so that no one on the team is blocked while waiting for a review.featured-patterns: - automated-testing-with-travisimage: /assets/code-review-with-github-enterprise-full.png---[Code Review with GHE](../code-review-with-github-enterprise/) | [Code Review Norms](../code-review-norms/) |  [Code Review Checklist](../code-review-checklist/)## Get more eyes on your codeCode review is the practice of one team member reviewing and discussing another team member’s code change, using a tool like GitHub Enterprise, in order to build confidence in the change before it’s merged. Based on the reviewer’s comments, the code should be updated and reviewed again, until it is as good as it needs to be for the long-term success of the project.## Find an pull request to reviewWithin your teams project repository, find a Pull Request (PR) thats in the queue.  `https://github.ibm.com///pulls`![pull request queue](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/code-review/code-reviews-pr-queue.png)### 2) View the details of the pull requestClick on the PR to visit its page and read the description of the PR. You can also use the tabs to see the `Conversation, Commits, and Files changed`![pull request tabs](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/code-review/code-reviews-tabs.png)- By default, the Pull Request page opens in the `Conversation tab`, where the code reviews discussion takes place  - Check the `Commits tab` to view what the PRs _commit history_- To see all of the changes to the code, click on the `Files changed tab`### 3) Leave commentsVisit the `Files changed tab` to make inline comments within the change set> Pro Tip: You can click on the _number_ of a specific _diff_ to leave a comment for that specific piece of code![inline comments](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/code-review/code-reviews-inline-comments.png)### 4) Review code & testReview _all_ committed lines of code within the PR. Compare it to your teams standards; if your team doesnt yet have well-defined standards, you can start with [this checklist](https://github.ibm.com/Whitewater-Patterns/code-review/wiki/Code-Review-Checklist). (If relevant, it is also best practice to pull down the PR, locally, and review it for functionality and styling. This should also be tested in all browsers and across various screen sizes.)Note - if the changes are too complex or you are unsure of what is happening in the PR, it is a good idea to ask the submitter to personally walk you through their work.### 5) Leave a badgeWhen you have completed reviewing all lines of code within the PR, made comments, and tested the changes in your local environment, you can leave a _badge_ on the PR.- A `-1` indicates that the code has comments to address or some code to fix- A `+1` can mean Looks Good to Me (LGTM) -  you _approve_ of the changes in the PR- Some teams use a `+2` to indicate that the code has been reviewed with enough confidence by the team that it is good to merge## Success Story...> We believe that more eyes on the code will result in better code. To uphold our team’s standards, we review each other’s code line-by-line.> ![We believe that more eyes on the code will result in better code. To uphold our team’s standards, we review each other’s code line-by-line.](https://github.ibm.com/Whitewater/paddle-fire-drill/raw/3cf3bb70c54d4d384d111855840eefe69f40811d/assets/code-review-with-github-enterprise.png)>> ### Storefront Rendering team, IBM Marketplace>> Within our team in IBM Marketplace, we like to say that we do code reviews because we don’t like working weekends. Before, if something broke the build on a Friday, then the “on-call” developer spent the weekend investigating the code change. Now that we review each other’s code, at least two people understand every change that is made. This means that we have better code to begin with, and when we do have problems after deployment, we can fix them faster.>> Code reviews are more than anything else, a cultural change. They require time, rigor, and a shared commitment to improving our team’s craft of programming. Every single one of us reviews code, with an emphasis on reviewing the code, not the contributor. Code reviews work best when code changes are small (less than 200 lines) and when used along with automated tests to catch small issues.>> ### Team details> - All team members are co-located> - More developers than designers> - Average of 6 kickbacks before code finally passes>> ### Examples from this project> [Pull request #1602](https://github.ibm.com/digital-marketplace/nautilus/pull/1602) [Nautilus repo](https://github.ibm.com/digital-marketplace/nautilus)## Steps1. Depending on your team’s process, you’ll be asked to review a pull request (PR) in GitHub Enterprise or you’ll volunteer to take the oldest PR in the queue.2. Before you really get started, read the provided description of the user story or task to better understand the context. Look at previous comments and check to see if all outstanding comments have already been addressed.3. To understand the overall change before you dive in, check to see all of the files that were touched. The smaller the PR, the easier it is to review.4. Pull down the code and run it yourself to see if anything major breaks. If the changes are complex or you’re unsure about the context, you may ask the submitter to personally walk you through their work.5. Review the code line-by-line to check it against your team’s standards, and add comments as needed. These comments should be discussed and addressed before the PR can be merged.6. At the end of the review, indicate your approval with a `+1`. If it needs another review, post `Looks good to me (LGTM)` so that another team member will pick it up. If the PR has been sufficiently reviewed, then you can merge it right then.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/code-review-with-github-enterprise/",
    },
    {
      "title": "Deployment Verification Testing",
      "text": "---title: Deployment Verification Testing---## Goal for Deployment Verification Tests:Validate the fitness of a system that has been deployed into a particular environment.This system may be, for example, one microservice developed and deployed by a single team, or a collection of multiple microservices that work together.  This may involve functional as well as integration tests.## Plan to realize this goal:Provide development teams with an easy-to-use API to enable Deployment Verification Tests to be run in Armada, in a way such that they can be run on-demand, or integrated into automated deployments, callable from our [Hyboria Jenkins continuous delivery system](https://github.ibm.com/watson-continuous-delivery/Documentation/).## How does the DVT library work?1. From a Hyboria job, uses `kubectl` to reach out to Armada and create remote containers from Docker Images containing tests, provided by the dev teams and deployed as Kubernetes `Job`s1. Checks to make sure the job starts correctly and gives realtime feedback, with a link to the live Logmet logs for the test containers e.g.![start message](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/dvt/start.gif)1. Monitors the execution of the `Job`s until they complete, timeout, or fail1. While polling to see if a job is complete, auto-retries in the face of intermittent network connectivity problems1. Copies results from Armada with `kubectl cp` from a test-monitor / beachhead `pod` (details below) back to a Hyboria Jenkins workspace.1. Shunts results automatically to particular Jenkins plugins `junit,cucumber,performance` for automatic evaluation, and presentation of those results1. Stores result artifacts as a Jenkins job `archive`, makes them available for whatever processing teams want to do to them in their Hyboriafile1. Deletes (optionally, but by default) the completed `Job` from Armada, and its artifacts from the remote `PersistentVolumeClaim`1. Provides / highlights diagnostic information in the Jenkins job page in various ways if/when things go sideways in ways weve seen previously, e.g.   Container running out of memory: ![example OOMKilled](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/dvt/OOMKilledError.png)   Armada cant pull the test image: ![example ImgPullBackOff](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/dvt/ImgPullBackOffError.png)   Armada test job exceeds resource quota level: ![example ExceededQuota](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/dvt/ExceededQuotaError.png)1. Enables programmatic result querying using standard Jenkins methods.## How does this fit into an automated CI/CD pipeline:From the existing Hyboriafile teams use to deploy their service, or a from a separate DVT-only one, they can call any of the DVT methods directly, e.g. `dvt.DVT(rendered.d/myTestJob.yaml)` as part of the deployment of a service/microservice, or after that deployment to verify its fitness.  The results could be used to determine if deployments should be rolled-back, if deployments of the service/microservice to subsequent environments should happen, etc. [More info](https://github.ibm.com/watson-continuous-delivery/Documentation/blob/master/on-boarding/examples.md#automatic-deployment-to-dev-from-ghenkins-with-dvt-and-promotion-to-staging).For manual (outside CI/CD automation) execution - as the DVT library is Groovy code intended only to be called from a Hyboriafile, you cant easily use it outside of Jenkins, though you can use Hyboria-cli or `kubectl` to deploy and pull results from DVT jobs manually.## Prerequisites: On-board to Armada, with appropriate amounts of resource provisioned to run the desired tests.   A best practice is to deploy the DVT images into the same cluster/namespace as the service they test.  They can hit external front door or internal service endpoints as needed. [On-board](https://github.ibm.com/watson-continuous-delivery/Documentation/tree/master/on-boarding) to Hyboria.   Docker images with tests in them that write their results to a specific directory.  Images that can be `docker/kubectl run` to execute those tests, exit and return a non-zero result if there was an error executing them (as distinct from test failures).   Ideally, a CI job to build and push updated test images to Armada-reachable Docker registries whenever the tests change. If the tests dont produce standard JUnit/JMeter/Cucumber result artifacts, youll need `Jenkinsfile` (Hyboriafile) [code](https://jenkins.io/doc/book/pipeline/syntax/) that [does _something_] to determine pass/fail from the result artifacts## How teams can use this:1. Create, and store in a repository under https://github.ibm.com/watson-deploy-configs a Kubernetes yaml file that creates a `Job` that describes the test image, and maps the results directoryto a `PersistentVolumeClaim` as with [demo.yml](https://github.ibm.com/watson-innovations-testops/dvt-common/blob/master/demo.yml).1. Create, store and deploy a Kuberentes yaml file for the `PersistentVolumeClaim`, like [pvc.yml](https://github.ibm.com/watson-innovations-testops/dvt-common/blob/master/pvc.yaml)1. Create, store and deploy a Kubernetes yaml file for a `deployment` of a `pod` that will mount that `PersistentVolumeClaim`, andallow remote access to tests results added to the PVC by test pods, 24x7 (or setup/teardown on-demand if thatshow you roll).  e.g.: [ngnix.yml](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt/onetimesetup.d/30-nginx.yaml)which, incidentally, has its differences from a standard nginx install in a `ConfigMap`like [nginx-conf.yml](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt/onetimesetup.d/20-nginxconfigmap.yaml)1. Put something like the following into their Jenkinsfile, that runs 4 different DVT jobs in parallel, then aggregates their results: ```groovy    stage(DVT) {       script {          parallel locust  : { dvt.DVT(${renderedDir}/61-locust.yml) },                 dialog    : { dvt.DVT(${renderedDir}/62-dialog-system-entities.yml)},                 analytics : { dvt.DVT(${renderedDir}/63-analytics.yml)},                 bdd       : { dvt.DVT(${renderedDir}/60-bddjob.yml) }         }     }```1. Bring questions, bug reports and feature requests to the [#continuous-deployment](https://ibm-watson.slack.com/messages/C12M11H99) channel in IBM Watson Slack## Select Examples of Important files: [Demo Hyboriafile](https://github.ibm.com/watson-deploy-configs/demo/blob/master/kingdom-configs/us-south-dev/dvt.hyboriafile): a Jenkins job to orchestrate execution of Deployment Verification Tests [Test Job .yaml file](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt/50-dvt-job.yml) : Sample Kubernetes yaml descriptor that contains the info for a DVT `Job` and its associated testcontainer, the path to their results, the CPU/Memory resources they need, etc. [PVC .yaml file](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt/onetimesetup.d/10-pvc.yaml) an example of a `PersistentVolumeClaim` to temporarily store results [NGINX .yaml file](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt/onetimesetup.d/30-nginx.yaml) Kubernetes yaml file for deploying a sample test monitor [NGINX configmap .yaml file](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt/onetimesetup.d/20-nginxconfigmap.yaml) a `ConfigMap` to configure additional nginx settings (such as enabling directory browsing) [Dockerfile](https://github.ibm.com/watson-engagement-advisor/wea-conversational-api-it/blob/master/Dockerfile) from the Conversation team, showing how a Gradle-based DVT image is built.## More examples / readmes: Hyboria job demo: [Source repository in Github Enterprise](https://github.ibm.com/watson-deploy-configs/demo/blob/master/dvt-demo.md) and [job in Hyboria Jenkins](https://watson-tron-jenkins.swg-devops.com/job/demo/) Hyboria job demo-mars: [GHE](https://github.ibm.com/watson-deploy-configs/demo-mars) and [in Hyboria Jenkins](https://watson-tron-jenkins.swg-devops.com/job/demo-mars/) Hyboria job demo-universe: [GHE](https://github.ibm.com/watson-deploy-configs/demo-universe) and [in Hyboria Jenkins](https://watson-tron-jenkins.swg-devops.com/job/demo-universe) Hyboria job for the Watson Conversation DVT: [GHE](https://github.ibm.com/watson-deploy-configs/conversation-dvt/blob/master/kingdom-configs/pstg/dvt.hyboriafile) and [in Hyboria Jenkins](https://watson-tron-jenkins.swg-devops.com/job/conversation-dvt/) [Github Enterprise Query for references to `dvt.DVT(...)` in the watson-deploy-configs org](https://github.ibm.com/search?l=Groovy&q=org%3Awatson-deploy-configs+%22dvt.DVT%22&type=Code) shows lots of examples of teams using this API.## DVT API details:- [API doc (cicdtest.txt)](https://github.ibm.com/watson-continuous-delivery/hyboria/blob/master/vars/dvt.txt) which is really in markdown format but needs to end in .txt [because Jenkins](https://jenkins.io/doc/book/pipeline/shared-libraries/)- [Library source (dvt.groovy)](https://github.ibm.com/watson-continuous-delivery/hyboria/blob/master/vars/dvt.groovy).  Pull requests welcome!## How do the directories in the various pods relate to whats in the shared Persistent Volume Claim that stores test results as tests run?By our convention, a directory specified by `subPath` in the job .yaml that has the same name as the job off root of the volume is mounted into a directory in the pod specified by `mountPath`.![Pretty picture](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/dvt/dvt-dir-mapping4.gif)Thus in the example above a test would write to what it thinks is something like `/test-output/someSubdir/myResults.data`,this same file would be found _in the PVC_ at `/dvt-suite-1/someSubdir/myResults.data`Note: Currently, by default, `launchTests()` prepends the Jenkins `JOB_TAG` to the Job `.metadata.name` and to the`subPath` so that multiple instances of the same job can run in the same `namespace` at the same time.  Also: In the example [ngx.yml](ngx.yml) and [nginx-browse/ngx-config.yml](nginx-browse/ngx-config.yml), the nginx podreally has its docroot at `/usr/share/nginx/html` with `mountPath` set accordingly.  `wwwroot` is shown in the picture for brevity.## Whats the deal with this beachhead / test-monitor thing? We want tests run as a `Job` which is the idiomatic way to manage containers that are meant to do somethingfinite, then be done, leveraging the help Kubernetes provides to make this easier. In each test pod, each container mounts the same PVC volume, and puts test results in its own subdirectory there.   Once a `Job` is complete, its `pod`s are no longer `active`, so you cant `kubectl cp` stuff from them, so we need _something else_ thats alive when we want to grab the results. Even with a `PersistentVolumeClaim` available in Armada, you cant read/write to them directly, except from a running `pod`. If you have some lightweight process like [NGINX](https://www.nginx.com/) in its own pod point its docroot at the same PVC, you have a way to grab the results whenever you want.  If you have `kubectl` and credentials for the `namespace` where the tests are run on your laptop, you can do stuff like:     `kubectl port-forward nginx-pod-name 32766:80`    and browse to `localhost:32766` to interactively view the files in the results volume in realtime  Its a lightweight proxy into the volume (thats optionally always there) you can use to copy results back.     You can `curl` or `wget` files from the www port     You can use it a source from which to copy files with `kubectl` e.g.    ```bash    kubectl cp $(kubectl -get pods -l role=test-monitor -o jsonpath={.items[].metadata.name}):/usr/share/nginx/html/someFile} local_dir    ```    (this is what the DVT library does automatically, by default)     You can use `kubectl exec` to grab data, as with:    ```,bash      kubectl exec $(kubectl get pods -l role=test-monitor -o jsonpath={.items[].metadata.name} cat /usr/share/nginx/html/subdir/file.ext > localdir/file.ext    ```    Instead of `cat`, you can use pipes and `tar` to copy files, e.g       ```bash    kubectl exec ... -- tar -cf - -C /usr/share/nginx/html someSubDir | tar xf -    ```    To easily find the name of the test monitor pod, you can create an `alias` to find the test monitor pod, using   whatever label you give it, like:    ```bash    alias test-monitor=kubectl get pod -l role=test-monitor -o jsonpath=\{.items[].metadata.name}\    ```   and then you can reference that alias, e.g. to get an interactive shell inside that container:   ```bash   kubectl exec -i -t $(test-monitor) -- /bin/sh   ```   or get the associated logs for the monitor:   ```bash   kubectl logs $(test-monitor)   ```## Best Practices for building DVT Docker Images Image size should be as small as practical   When building image as part of CI, the image should not contain test results or logs from Jenkins workspace   Have only necessary files required for test execution. Image should not contain any `src` files like `.java`, `.cpp`, etc. Build tools such as Gradle and maven makes it possible to run tests using just the Gradle/Maven file, and test binary files. There are couple of ways to package tests in the above mentioned steps by using Dockers multi-stage build, see [Docker documentation](https://docs.docker.com/engine/userguide/eng-image/multistage-build/):   _Method1_: package a fatJar with all files required during runtime.     fatJar can be run in two ways. Either by directly running tests using jar or by unpacking the jar to runtime classpath.   _Method2_: Copy only required files for tests to run:     Copy your build tool application and required dependencies downloaded for tests to run     Copy only required resources and compiled project files to respective folders     Copy any settings or properties files required for project. Examples for implementing this best practices are:   For _Method1_ (using Gradle):     To build image: [Dockerfile]( https://github.ibm.com/watson-engagement-advisor/wea-conversational-api-it/blob/master/Dockerfile)     To build and run fatJar: [build.gradle](https://github.ibm.com/watson-engagement-advisor/wea-conversational-api-it/blob/master/build.gradle)   For _Method2_:     Using Gradle: [Dockerfile](https://github.ibm.com/watson-engagement-advisor/analytics-core/blob/develop/tests/src/it/resources/e2e/docker/Dockerfile)     Using Maven : [Dockerfile](https://github.ibm.com/watson-engagement-advisor/voyager-dialog-service/blob/develop/dialog-v2-test/Dockerfile) If your test image has a lot of dependencies, it takes a while to download dependencies each time you build the image. You can avoid the hassle if you have your gradle/maven dependencies cache saved in a different image, then use the image with cache while building your test image. Only when there is a version change of a particular dependency, your gradle/maven would download newer version of that dependency. This way it would save a lot of build time.    Watson Conversation Analytics team has implemented this with Gradle. Their test image build & push time reduced from ~30mins to <10mins. Examples in analytics repo [Dockerfiles](https://github.ibm.com/watson-engagement-advisor/analytics-core/tree/develop/tests/src/it/resources/e2e/docker), [Jenkisfile](https://github.ibm.com/watson-engagement-advisor/analytics-core/blob/develop/Jenkinsfile#L693-L753) Make sure the return code from your test image is zero unless you want to tell Kubernetes you want the container to be restarted, which is what it will do automatically for non-zero return codes.   The container exit code should not be used to communicate pass/fail for the tests. Know, and enforce the maximum RAM the image may use.  You should be specifying these limits in your Job .yaml [example](https://github.ibm.com/watson-deploy-configs/conversation-dvt/blob/master/armada.d/60-bddjob.yml#L22).  If youre using Java, make sure you specify a maximum JVM heap size (e.g. `-Xmx1G`) otherwise your JVM (which isnt aware or the `limits` you set in Kubernetes, it only knows how much RAM exists on the `node` its running on) may not have attempted to garbage collect until after its used more than the `limits`, though Kubernetes is liable to auto-kill and restart the container once it uses more than the `limits` (`OOMKilled`).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/deployment-verification-testing/",
    },
    {
      "title": "Watson AI Performance Manifesto",
      "text": "---title: Watson AI Performance Manifesto---## BackgroundThis document describes the set of activities that can help Watson product and services teams achieve their performance and scalability business goals. It organizes the activities into sections that overlay on top of a continuous delivery pipeline. Each section contains a list of best practices items that collectively achieve the goals of that section. Items marked with Minimum Viable Product (MVP) indicate a minimum level of validation for each section. Driving to an enterprise level of performance and scalability objectives will normally include executing against all of listed items. Suggestions and recommendations are indicated inside [ brackets ], but teams have the flexibility to chose other values that are in line with their business objectives.- [Continuous Integration (BVT)](#continuous-integration)- [Continuous Delivery (DVT)](#continuous-delivery)- [Reliability](#reliability)- [Capacity](#capacity)- [Production](#production)### OverviewPerformance validation typically occurs across multiple stages of the development and delivery process.  During the delivery pipeline (CI/CD) stages, performance validation is used primarily to ensure that regressions are not delivered into market.  In parallel, additional out of band (longer running) performance validation is executed to ensure:- Performance reliability over time.- Ability to scale.- Adherence to overall cost objectives.- Adherence to customer Service Level Agreements/Objectives (SLA/SLO).The diagram below shows at a high level where and when these actions would occur as part of development and delivery process.![Performance Architecture](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/performance/architecture.png)### GoalsTeams should work with their offering managers (OM) to establish and document the performance, scalability, and cost objectives for their offering.  These goals can be determined from a variety of inputs including SLAs, SLOs, competition, and even best guess (for new offerings). As a general rule testing should at a minimum validate adherence to those objectives.### TrackingTeams should track and document their progress against the set of activities described in this document using whatever methods (e.g. GitHub) defined by their process. An example [Performance Validation Checklist](https://github.ibm.com/watson-perfworks/PerformanceManifesto/tree/master/PerformanceChecklist.md) is available which teams can copy into their own GitHub projects to track progress against their objectives.### Test ImagesTeams are encouraged to develop and leverage a small set of common performance test docker images that can be reused across their performance validation efforts.  These images should be parameterized around data, time, and workload (users). The recommended workload drivers include JMeter and Locust. However, teams are free to use other workload drivers as needed. All tooling efforts around performance validation will assume usage of the recommended workload drivers.  Base workload images are available [here](https://github.ibm.com/watson-perfworks/perf-docker).### Performance EngineeringThe performance engineering (PE) team will continue to provide resources and support across the following activities:- Consulting on performance validation best practices.- Assisting with the execution of performance validations.- Participating in performance plan reviews.- Workload design and development.- Capacity design and development.- Investigation of performance issues.- Champion platform performance issues with the IBM Cloud team.- Support customer engagements and provide input into SLAs/SLOs.- Research, recommend, and/or develop tooling to assist with performance validation activities.### Out of scope itemsThe following validation efforts are not covered by this document:- Functional end-end tests.- Resiliency testing (e.g. network issues, infrastructure failures, etc.).- High availability testing (e.g. chaos tests).## Continuous IntegrationWhere it makes sense teams should include performance validation during build phases. Performance validation during build phases is challenging and not always possible. Any such testing needs to operate under the same set of assumptions as other unit tests executed during BVT.  This likely means using private (unit test) interfaces to perform any tests.  For example, timing the duration of model training code would be a good candidate for a BVT performance test.### What you should be doing-	MVP: Periodically [quarterly] review any performance issues found in production or during the other validation activities to determine if additional testing during BVT is warranted.-	Execute warranted performance validation testing as part of BVT automation.-	Design tests to run within a reasonable time period [< 10 minutes].-	Consider looping and timing unit tests to gather performance data.-	Use test containers to encapsulate test drivers as this enables running tests on developer machines with minimal setup.-	Conditionally fail builds when tests results do not match expectations.-	Periodically analyze test results to look for trends over time.### ToolingTeams are encouraged to use the [PerfWorks Tool](https://pages.github.ibm.com/watson-perfworks/perf-viz/PerfViz/development/) to analyze, track, and validate the performance results from BVT runs.## Continuous DeliveryTeams should validate during the continuous delivery phase that performance regressions are not delivered to customers.  Tests should focus on response time measurements of typical customer usage scenarios.### What you should be doing-	MVP: Include performance validation tests as part of DVT.-	MVP: Cover 80% [100%] of business critical API usage.  This could be a single API if it represents the majority of observed (or expected) customer usage.-	MVP: Define performance expectations for the API coverage.-	MVP: Design tests to run within a reasonable time period [< 30 minutes].-	MVP: Conditionally fail deployments when tests results do not match expectations or other criteria (e.g. SLAs).- MVP: Store a minimum of 30 [90] test results and periodically analyze them to look for trends over time.- MVP: Periodically analyze customer usage (forecasts, new SLAs, etc.) and adjust tests accordingly.  Usage data should be collected from historical data pulled from production.- Review plans and approach with performance engineering.- Establish an alert mechanism for test failures.- Monitor for regressions (escapes to production) and modify test coverage as necessary.- Use docker containers to encapsulate test drivers.- Use either JMeter or Locust to drive performance tests.- Trigger longer running post-deployment tests (as warranted) to provide additional performance validation around scalability, endurance, etc.- Leverage assets from performance Reliability tests to avoid duplication.### ToolingTeams are encouraged to use the [PerfWorks Tool](https://pages.github.ibm.com/watson-perfworks/perf-viz/PerfViz/development/) to analyze, track, and validate the performance results from each DVT run.### ExamplesAn example of a DVT level performance test can be found [here](https://github.ibm.com/watson-perfworks/nlc-build-perf).## ReliabilityReliability performance testing is a measure of the stability and overall performance of a product or service for a period of time under various sets of test conditions.  Utilizing a set of `load`, `spike`, and `endurance` tests, performance reliability testing seeks to establish how well the service behaves at the volumes that are expected in production.  See [Performance Workload Best Practices](https://github.ibm.com/watson-perfworks/PerformanceManifesto/tree/master/articles/WorkloadDesign.md) for additional background and best practices around workload design and development.### What you should be doing- MVP: Work with OM to establish performance reliability objectives.- MVP: Execute load [minimum 30 minutes] and spike tests [minimum 1 hour] on a regular cadence [daily].- MVP: Execute endurance tests [minimum 24 hours] on a regular cadence [weekly].- MVP: Record errors, average, 90%, and standard deviation response time test data [plus min, max, 25%, 50%, 75%, 95%] for each test.- MVP: Archive test data for the last 30 [90] successful test runs and analyze for trends.- Review plans and approach with performance engineering.- Automate test execution utilizing timed or other (e.g. manual) triggers.- Trigger tests on successful DVT exit.- Establish an alert mechanism for test failures.- Establish test entry/exit criteria.- Manage test assets using organization approved tooling (GitHub, Ghenkins, Conan, etc).- Collect system metrics (cpu, memory, etc) from each successful run.- Running with workloads that:    - Drive to the greater of production volumes [2x the peak hour of the last 90-day production volumes] and projected volumes [2x the volumes from product forecasts].    - Cover a majority [80% (weighted)] of the primary use cases.    - When appropriate utilize test data that is both representative and [randomly] varied across requests.    - When appropriate test against a system that is pre-populated with production-like data.### ToolingTeams are encouraged to use the [PerfWorks Tool](https://pages.github.ibm.com/watson-perfworks/perf-viz/PerfViz/development/) to analyze, track, and validate the performance results from each DVT run.  If tests use the official JMeter/Locust test containers the test output can be uploaded to the PerfWorks tooling and it will calculate the recommended response time and error metrics and facilitate trend analysis.### Examples- [Load Test](https://github.ibm.com/watson-perfworks/ExampleReliabilityTests/blob/master/armada/load-test-job.yaml)- [Spike Test](https://github.ibm.com/watson-perfworks/ExampleReliabilityTests/blob/master/armada/spike-test-job.yaml)- [Endurance Test](https://github.ibm.com/watson-perfworks/ExampleReliabilityTests/blob/master/armada/endurance-test-job.yaml)## CapacityCapacity tests focus on ensuring that a product or service scales efficiently as load increases (or decreases) and meets overall cost objectives. See the [Performance Scalability Best Practices](https://github.ibm.com/watson-perfworks/PerformanceManifesto/blob/master/articles/CapacityDesign.md) for additional background and best practices.### What you should be doing- MVP: Work with OM to document performance scalability and cost objectives.- MVP: Ensure the offering can scale beyond current (or projected) production volumes.- MVP: Ensure that container resources (cpu, memory, etc) are set correctly to maximize utilization of the container, minimize load time, and meet cost objectives.- MVP: Execute scalability tests as needed when development changes could affect scalability.- MVP: Record errors, average, 90%, and standard deviation response time test data [plus min, max, 25%, 50%, 75%, 95%] for each test.- MVP: Archiving test data from successful test runs and analyze for trends.- Review plans and approach with performance engineering.- Ensure that the service performs as expected at any defined boundaries or limits.- Run tests to identify upper scalability bounds and to provide input into capacity planning.- Identify bottlenecks and drive improvements.- Manage test assets using organization approved tooling (GitHub, Ghenkins, Conan, etc).- Leverage assets from performance Reliability tests to avoid duplication.- Running with workloads that:  - Drive beyond the greater of production volumes [2x the peak hour of the last 90-day production volumes] and projected volumes [2x the volumes from product forecasts].  - Cover a majority [80% (weighted)] of the primary use cases.  - When appropriate utilize test data that is both representative and [randomly] varied across requests.  - When appropriate test against a system that is pre-populated with production-like data.### ToolingTeams are encouraged to use the [PerfWorks Capacity Tool](https://pages.github.ibm.com/watson-perfworks/perf-viz/PerfViz/experimentation/Experiment.html) to analyze the results of capacity experiments.### Examples- Scalability Test (TBD)## Production### MonitoringFor teams with offerings in production its important that performance metrics are included in their SRE analysis and reporting infrastructure. Teams should monitor for response time spikes against key APIs and have adequate alerts in place. In addition teams should periodically analyze the performance data of key APIs to look for trends that might be indicative of future failures.### What you should be doing- MVP: Monitoring daily response times [peak and average] of the most used APIs in production.- MVP: Monitoring [peak hour] request rates for input into Reliability and Capacity tests.- MVP: Monitoring for response time spikes of business critical [All] APIs as part of the SRE [pager duty] processes.- Analyzing production performance [average response times] to identify any trends over time.### ToolingFor public facing services it is recommended that teams monitor the [Production Service Summary](http://wd-perfviz.rtp.raleigh.ibm.com:3000/dashboard/db/wdc-service-slo) for their service.### ValidationValidation ensures that the performance of a product or service under a set of standardized workloads, in production, is consistent with what has been measured in internal (e.g. staging) test environments. The goal is to document real-world performance numbers (i.e. what customers can expect) and to establish trust in the values collected from internal environments. The collected data can be used for competitive analysis and to provide input to customer SLAs and SLOs. These tests are by nature run in production environments in the appropriate data centers, regions, and/or availability zones.  This means that testing needs to be done responsibly and monitored continuously to ensure that there is no impact to customer traffic.### What you should be doing- MVP: Execute a subset of reliability/capacity tests either when there is sufficient production capacity to run the tests or by utilizing a dedicated environment.- MVP: Analyze results to verify that they are consistent with measurements obtained from Reliability and Capacity tests against the internal test environments.- Execute tests periodically or as needed [major new functionality].- Execute tests in multiple data centers (regions and AZs) to identify and document any differences.- Review plans and approach with performance engineering.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/performance-manifesto/",
    },
    {
      "title": "Behavior Driven Development (BDD) with Cucumber in Java",
      "text": "---title: Behavior Driven Development (BDD) with Cucumber in Java---## Overview[Cucumber](https://cucumber.io) is a tool many teams in Watson use to practice [Behavior Driven Development (aka BDD)](https://www.ibm.com/devops/method/content/code/practice_behavior_driven_development/).BDD is a pattern-based practice that we learn in [CodeRetreat](coderetreat) that provides an agreed-upon contract between not only developers and testers, but among the whole team. Everyone can look to the expected behavior and understand what must be delivered.Cucumber takes plain english written in the [Gherkin syntax](https://github.com/cucumber/cucumber/wiki/Gherkin) and generates code stubs. You can then code to the BDD and your passing automated tests become the proof that youve built what we need to be built.> ProTip: While examples on this page are provided in Java, Cucumber is available for nearly every language. The [Gherkin syntax](https://github.com/cucumber/cucumber/wiki/Gherkin) is the same no matter what language you work in.## Project setup (Java)If youre going to get up and running with Cucumber, you will want to have your project properly laid out.  This will save headaches in the future.  For sanity sake, projects using Cucumber should start adopting the [standard Maven project layout](http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html)```bashsrc/main/java - Java Applicationsrc/main/webapp - Webapp (jsp, html, js, web.xml, etc)src/main/resources - Java Application resourcessrc/test/java - JUnit / Functional testssrc/test/resources - JUnit / Functional test resourcessrc/it/java - Integration Tests (this is where Cucumber implementation will live)src/it/resources - Integration Test resources (this is where the Cucumber/Gherkin .feature files will live)```## Maven pom.xml Changes (Java)If you want to start using Cucumber, you will need to add the following dependencies to your Maven projects pom.xml```xml            info.cukes        cucumber-junit        1.2.2        test                    info.cukes        cucumber-guice        1.2.2        test                  com.google.inject        guice        3.0                  junit      junit      4.11      test      ```For more advanced usage (i.e. if you want to start a web server and stop a web server, before and after integration test runs), you can do something along the lines of [this article](http://www.weblogism.com/item/334/integration-tests-with-cucumber-jvm-selenium-and-maven)## Creating a Feature file and defining ScenariosWe are going to use an Authentication scenario as an example here.Create the following file:```src/it/resources/com.ibm.watson.bdd.example/authentication.feature```Example of a Gherkin Feature file (with Scenarios)``` gherkinFeature: Authentication and authorization    As a developers    I want to ensure that users are authenticated before using a service    so that I know that all actions are securedScenario Outline: Unauthenticated User    Given an unauthenticated user    And a request to feature     When the user submits the request    Then the request will be deniedExamples:| feature       || create      || get_status  || classify    || list        || delete      |Scenario Outline: Unauthorized User    Given an authenticated user    And a request to feature     And the user is not authorized to access the requested pipeline    When the user submits the request    Then the request will be deniedExamples:| feature       || create      || get_status  || classify    || list        || delete      |```## Creating a Cucumber RunnerCreate a new class file: ```src/it/java/com.ibm.watson.bdd.example/ITApp.java``````javapackage com.ibm.watson.bdd.example;import org.junit.runner.RunWith;import cucumber.api.junit.Cucumber;@RunWith(Cucumber.class)public class ITApp {}```This class is simple.  There are some other annotations that you can make, such as @CucumberOptions() where you can define which tags this test will run (if you want to setup multiple JUnit runners) or formatting and output locations for reports.## Running Integration TestsIf using eclipse, you can run ITApp as a JUnit test and you will see the output results.  If you are running maven, you will have to do some extra configuration.  When this is configured you can run via the command line with ```mvn verify``` on the project, you will see a similar console output.You should realize at this point that we havent defined any code to implement any of our integration tests yet.  Cucumber has generated stubs that we can use.  We will use those in our next steps.## Defining StepsCreate a new class file: ```src/it/java/com.ibm.watson.bdd.example/AuthenticationSteps.java```In this file we will take the stubs and copy them into the source.  You should get some errors about missing imports, fix them and re-run the tests.  This time, JUnit will still be green (unless you are running Cucumber in strict mode), but you will see output with TODO warnings about implementing the methods.  If you look at each individual step in the JUnit view, you will see that they are still marked out, so youre not quite done.Your file should look something like this:```javapublic class AuthenticationSteps {    @Given(^an unauthenticated user$)    public void an_unauthenticated_user() throws Throwable {        // Write code here that turns the phrase above into concrete actions        throw new PendingException();    }    @Given(^a request to feature \(.?)\$)    public void a_request_to_feature(String arg1) throws Throwable {        // Write code here that turns the phrase above into concrete actions        throw new PendingException();    }    @When(^the user submits the request$)    public void the_user_submits_the_request() throws Throwable {        // Write code here that turns the phrase above into concrete actions        throw new PendingException();    }    @Then(^the request will be denied$)    public void the_request_will_be_denied() throws Throwable {        // Write code here that turns the phrase above into concrete actions        throw new PendingException();    }    @Given(^an authenticated user$)    public void an_authenticated_user() throws Throwable {        // Write code here that turns the phrase above into concrete actions        throw new PendingException();    }    @Given(^the user is not authorized to access the requested pipeline$)    public void the_user_is_not_authorized_to_access_the_requested_pipeline() throws Throwable {        // Write code here that turns the phrase above into concrete actions        throw new PendingException();    }}```At this point, you will start to stub out and define behavior for each of these methods.  The example below is one way that you might go about defining/stubbing out these steps.  In practice, take these one step at a time, but for the sake of this example we will stub out most of the details.  If you run this example with JUnit, everything will be green and all of your tests will be passing!  Except, youre still not done - this example is just a simple form of the outline of your behavior.  This is where you start to refactor your code.```javapublic class AuthenticationSteps {    Pipeline pipeline;    User user;    Request request;    RequestResult result;    @Before    public void before(){        pipeline = new Pipeline();    }    @Given(^a request to feature \(.?)\$)    public void a_request_to_feature(String feature) throws Throwable {        request = new Request(feature);    }    @Given(^the user is not authorized to access the requested pipeline$)    public void the_user_is_not_authorized_to_access_the_requested_pipeline() throws Throwable {        assertFalse(pipeline.isAuthorized(user));    }    @When(^the user submits the request$)    public void the_user_submits_the_request() throws Throwable {        result = request.submit(pipeline, user);    }    @Then(^the request will be denied$)    public void the_request_will_be_denied() throws Throwable {        assertTrue(result.isDenied());    }    @Given(^an unauthenticated user$)    public void an_unauthenticated_user() throws Throwable {        user = new User();    }    @Given(^an authenticated user$)    public void an_authenticated_user() throws Throwable {        user = new User();        user.authenicate();    }    class Pipeline {        boolean isAuthorized(User user){            return false;        }    }    class User {        boolean authenticated = false;        public void authenicate(){            authenticated = true;        }        public boolean isAuthenticated() {            return authenticated;        }    }    class Request {        String feature;        public Request(String feature){            this.feature = feature;        }        public RequestResult submit(Pipeline pipeline, User user){            return new RequestResult();        }    }    class RequestResult {        boolean isDenied(){            return true;        }    }}```## Refactor & IterateAt this point, you would start to refactor and move out things that should exist in actual application logic.  Things like Pipeline and User might be moved into their own classes in src/main/java and the implementation of the methods would be filled in.  Maybe Request and RequestResult are switched over to a standard REST framework (such as REST Assured, Apache Wink, or Apache HTTP Client) and those details get filled in.  You will continue to break code by filling in implementation details, the tests will fail, then you will fix them and turn the tests green again.  Try to keep thing simple and move one method or behavior at a time.  Iterate over these details until your integration test and application details are fully e-mailed.## What happens when you want to share common steps?Now were going to introduce another wrinkle into this - we have another feature or set of features and they all want to authenticate a user and be able to send out requests.  It doesnt make sense to keep all of these items in AuthenticationSteps - since theyre shared.  What are some potential solutions?Abstract Class - if we have a bunch of API requests that are going to be using Users, Requests, RequestResults, and Pipelines, maybe we refactor AuthenticationSteps to be AbstractApiSteps.  Then we have unique API steps (for example create, get, delete, update) and each of those is an extension of this class.  What happens?  Cucumber wont allow this, because when it finds the steps for Given an authenticated user or When the user submits the request as examples, the Cucumber Container wont know which instance to use (create, get, delete, update?) and will throw an error, since each of those instances technically has a mapping for that step.Dependency and Delegation (Manually) - You could define singleton classes or factory/registry objects for tracking between steps so that you know that objects are being passed between functions the way you intend.  This would be akin to what is below.  Then, suddenly youre finding yourself coding up registries and factories for each of your objects.  You also have to deal with thread safety - what happens when Cucumber is running multiple scenarios at once?  What other bugs might pop up in your code?  How are you going to handle configuration?```javapublic class CommonObject {    static CommonObject getInstance(Context context){ ... }}public class Steps1 {   CommonObject common;   public Steps2(){      common = CommonObject.getInstance(someScenarioContext);   }    @When(^the first thing happens$)    public void the_first_thing_happens(){          doSomething(common);    }}public class Steps2 {   CommonObject common;   public Steps2(){      common = CommonObject.getInstance(someScenarioContext);   }    @When(^the other thing happens$)    public void the_other_thing_happens(){          doSomethingElse(common);    }}```Dependency Injection - Were going to change things over to using Google Guice as our dependency injection framework (it was set to use Pico Container in a previous version of this wiki, double check that your Maven pom.xml reflects the dependencies listed above).  Cucumber already knows how to handle Dependency Injection and its actually a pretty decent pattern and development practice to use - and will make designing for tests a little easier with less code to get up and running.```javapublic class CommonObject {    ....}@ScenarioScoped <-- This means that Steps1 will have a new instance created for each Scenario that gets runpublic class Steps1 {   @Inject CommonObject common;   @When(^the first thing happens$)    public void the_first_thing_happens(){          doSomething(common);    }}@Singleton <-- This means that Steps2 will have one instance created that is shared during EVERY scenario runpublic class Steps2 {   CommonObject common;   @Inject   public Steps2(CommonObject common){      common = CommonObject.getInstance(someScenarioContext);   }    @When(^the other thing happens$)    public void the_other_thing_happens(){          doSomethingElse(common);    }}```This is essentially two different ways of doing the same thing, minus the @ScenarioScoped and @Singleton annotations on the classes.  What the DI (Dependency Injection) container will do here is pass or create an instance of CommonObject.  The objects are scoped and handled for you.  On the Step classes, if you dont supply an annotation, it will assume that for each test step (i.e. When the first thing happens, When the other thing happens) a new instance of the class containing the steps should be created.If you are trying to share state between calls to steps in the same class, this can be problematic:```javapublic class BadSteps {  @Inject CommonObject common;   <--- Lets assume that a new CommonObject has a field name, with a default value of old name@When(^update common object$)    public void update_common_object(){          assertEquals(common.getName(), old name);  <!-- remember, were assuming this is true          common.setName(new name);  <--- the state will be updated on this CommonObject    }@Then(^check common object was updated properly$)    public void check_common_object_was_updated_properly(){         assertEquals(common.getName(), new name);  <--- this will actually be a completely new CommonObject and wont be true, because the state was only set on the previously used CommonObject    }}```If you can keep the scope of the objects in mind, you shouldnt have problems running within the framework and youll have a better understanding of the states your tests are in.---### Best PracticesKeeping Sanity- Use annotations to restrict trying to create/define the steps of one feature at a time (based on tags)- Use tags in your feature files...Steps/Glue Code & DRYOrganize your steps in an OO fashion - this is made much simpler by using the DI framework listed aboveEx: you have Create, Update, Delete, List featuresAll features have request related actions to an APIPull those request related actions into a RequestSteps classYou might find step definitions (i.e. the user requests a pipeline and the user asks for a pipeline) that show up in different feature files, but should be collapsed into a single definition and actionAbstraction & YAGNIStart with stubs, only code the MINIMUM possible neededDont get ahead of yourself and try to start refactoring anticipating what is comingYou will start to see common themes - avoid Analysis ParalysisRefactor based on those themes and code smellsBy keeping things OO and high level, you will see what is needed across all iterations of your testing (i.e. Network [REST Assured] or UI [Selenium]) that might be describing the SAME behaviorStart filling in implementation details around those shells and turn things that need multiple variations into Interfaces or Abstract Classes## Dependency Injection and Abstraction - How to Design for Test and maximum ReusabilityIf you follow the best practices, eventually you might get to a point where you need to support multiple ways of running integration tests or even have an application that needs to support some level of abstraction.  Lets take the User class that we had defined earlier and use that as an example.  Were going to add some credentials to the user while were at it.```javapublic class User {        String userId;        String password;        public User(String userId, String password){            this.userId = userId;            this.password = password;        }        boolean authenticated = false;        public void authenicate(){            authenticated = true;        }        public boolean isAuthenticated() {            return authenticated;        } }```This works fine for a stubbed out test.  But, what if something actually needs to happen during the authentication process?  One such way to deal with this is doing the following:```javapublic abstract class User {        ....        public void authenicate() throws Throwable{            authenticateInner();            authenticated = true;        }        public abstract void authenticateInner() throws Throwable;        .... }```What sort of impact does this have steps we previously defined?  For one, we now have to have a concrete implementation of User that wasnt necessary before.  We also have to deal with updating our step definitions to support things.  Lets take for example that we want to be able to support using a Dummy implementation and some Remote request implementation for handling user authentication.```javapublic class DummyUser {      public DummyUser(String userId, String password){            super(userId, password);      }      @Override      public void authenticateInner() throws Throwable {      }}public class RemoteUser {      public RemoteUser(String userId, String password){            super(userId, password);      }      @Override      public void authenticateInner() throws Throwable {            submitRemoteAuthRequest(user, password);  // <-- this will be implementation specific      }}```So now we have to deal with our step definitions.  If we were using @Inject annotations next to User instances, youre going to get a complaint that nothing is being mapped to a User.  You also dont want to have to write in logic for switching between which user type you want to use in every step definition file where youre using a User.  How do you get around this without having to write a bunch of code for explicitly handling things?  The most flexible way is to take advantage of Guices Assisted Injection - the short story is that you can create factories without explicitly having to write factory code and everything will be auto wired together at runtime.To do that, you will have to create a factory interface:```javapublic interface UserFactory {  public User create(@Assisted(userId) String userId, @Assisted(password) String password) throws Throwable;}```The reason the @Assisted annotations are needed in the factory is because you have two arguments that are of the same type.  If you had different argument types or only one String in the constructor, you wouldnt need the annotation.  You also have the ability to take injected elements in a constructor that arent part of the factorys create method.  Now make the following modifications to your user classes so that they can be wired together:```javapublic class DummyUser {      public DummyUser(@Assisted(userId) String userId, @Assisted(password) String password){            super(userId, password);      }      @Override      public void authenticateInner() throws Throwable {      }}public class RemoteUser {      public RemoteUser(@Assisted(userId) String userId, @Assisted(password) String password){            super(userId, password);      }      @Override      public void authenticateInner() throws Throwable {            submitRemoteAuthRequest(user, password);  // <-- this will be implementation specific      }}```Now, you can continue to use @Inject User user in code and all you have to do is configure the factory, which is shown below:```javapublic class ExampleDummyModule extends AbstractModule {    @Override    protected void configure() {        install(new FactoryModuleBuilder().implement(User.class, DummyUser.class).build(UserFactory.class));        bind(User.class).toInstance(new DummyUser(,));  // <- this will map the instance to @Inject User user where a factory isnt used    }// You will also want to create another Module for your Remote instances}public class ExampleInjectionSource implements InjectorSource {    @Override    public Injector getInjector() {        return Guice.createInjector(Stage.PRODUCTION, CucumberModules.SCENARIO, new ExampleDummyModule());  //if you want to switch between Dummy and Remote you can configure the injector here    }}```You will also need a file src/it/resources/cucumber-guice.properties with the contents guice.injector-source=package.that.contains.ExampleInjectionSourceIf you want to explicitly use the factory to create new instances of something in your code, you can do the following:```java    @Inject UserFactory userFactory;    @Given(^a user$)    public void a_user_that_is_not_authorized_to_that_pipeline() throws Throwable {        user = userFactory.create(non-accessable, good password);    }```Using these methods, you can follow the BDD principles to create only what needs to be created.  Once you have reached a point that something needs to be done, that is when you make the change and abstract out the logic via Interfaces or Abstract Classes.  It will prevent you from over-generalizing too soon and potentially creating code that isnt necessary.  Now you have flexibility in how you want to run your integration tests without having to explicitly change step definition code to match a specific implementation.You can find more details on using Google Guice and Dependency Injection online.  These are some of the basic principles that will allow you to get through the majority of the problems you will encounter.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/bdd-with-cucumber/",
    },
    {
      "title": "Java Coding Style Guide",
      "text": "---title: Java Coding Style Guide---### Deprecated...Please note that most teams have moved to using the style guides maintained by Google, they can be found [here](developer-guide#practices).### IntroductionBefore we start, we must recognize that this style guide is largely the work of the Watson Explorer team and has been adapted with their kind consent. This is a living document, you may want to follow this page as we revise and improve this page.This page documents the Java coding style and formatting used on all Java projects. Coding conventions are important for many reasons. The [Oracle Code Conventions For Java](http://www.oracle.com/technetwork/java/codeconventions-139411.html#16712) lists some of the reasons:- 80% of the lifetime cost of a piece of software goes to maintenance.- Hardly any software is maintained for its whole life by the original author.- Code conventions improve the readability of the software, allowing engineers to - understand new code more quickly and thoroughly.- If you ship your source code as a product, you need to make sure it is as well packaged and clean as any other product you create.### Ground Rules1. By far, the most important standard is to write readable code. The rules documented on this page are NOT hard-and-fast rules. If breaking a convention results in more readable code which better expresses its intent, then by all means, break the convention.2. Some of the conventions in this document must be strictly followed (sometimes for legal reasons). Such rules contain the word MUST in their description.3. Dont break a convention without a good reason for doing so (and as strongly hinted above, breaking a convention for code readability is a good reason). A convention is only good if it is used in the majority of the code written.> PROTIP: Writing readable, expressive code is more important than conforming to a standard or convention.### Eclipse FormatterEclipse Java editor can perform automatic formatting of code according to defined rules.Suggested settings can be downloaded from [watson.formatter.xml](https://github.ibm.com/the-playbook/the-playbook.github.ibm.com/blob/master/_content/developer-guide/eclipse-config/watson.formatter.xml) (Right click the `Raw` button -> Save as...). The file can be imported in Eclipse preferences > Java > Code Style > Formatter page, and then this profile can be selected as active profile.The Java code can then be formatted by using menu Source > Format, or with associated hot key (Ctrl-Shift-F by default).### Eclipse Code CleanupEclipse editor can also perform some code cleanup, which can perform some routine operations like removal unnecessary imports or local variables or adding final keyword for variables which are not changed locally.Suggested settings can be downloaded from [watson.cleanup.xml](https://github.ibm.com/the-playbook/the-playbook.github.ibm.com/blob/develop/pages/developer-guide/eclipse-config/watson.cleanup.xml) (Right click the `Raw` button -> Save as...). The file can be imported in Eclipse preferences > Java > Code Style > Clean Up page, and then this profile can be selected as active profile.The Java code can then be cleaned by using menu Source > Clean Up...### Eclipse Code templatesAll Watson code should include copyright statements. To simplify this routine process, code templates can be used.To use templates download settings from [watson.codetemplates.xml](https://github.ibm.com/the-playbook/the-playbook.github.ibm.com/blob/develop/pages/developer-guide/eclipse-config/watson.codetemplates.xml) (Right click the `Raw` button -> Save as...), import it in Eclipse preferences > Java > Code Style > Code Templates and enable automatic adding of comments for new files at the bottom of the same preference page.> PROTIP: Sometimes code can be formatted manually better than it can be formatted using the Eclipse formatter. To prevent the Eclipse formatter from reformatting a region of code, surround the code with:```java/ @formatter:off / //... your specially formatted code .../ @formatter:on /```## Conventions and Standards### Oracle Coding ConventionsUnless otherwise stated in this document, Watson follows the [Oracle Coding Conventions for the Java Programming Language](http://www.oracle.com/technetwork/java/codeconvtoc-136057.html).### Source Code HeadersJava source files (.java)All Java source code files MUST have a copyright header using the following format.``` java/ BEGIN_COPYRIGHT   IBM Confidential  OCO Source Materials     (C) Copyright IBM Corp. YEAR1, YEAR2 All Rights Reserved.   The source code for this program is not published or otherwise  divested of its trade secrets, irrespective of what has been  deposited with the U.S. Copyright Office.   END_COPYRIGHT /```From the official [IBM Copyright Corporate Standards doc](https://w3-03.ibm.com/standards/esisstds.nsf/E5FD60876972962585256999004E8A0C/%24File/06045002.pdf)> YEAR1, YEAR2 above should be replaced with (YEAR1 - must be GA for the original release and must be retained throughout the life of making the service available. YEAR2 is the year of the first external distribution of the latest substantial changes made in a module in either a source or object form. In the first delivery of a new module such as with now for WVA, only YEAR1 is used. YEAR2 is added to the copyright notice of a module when the module has been changed substantially and released in a year later than YEAR1. After that YEAR2 is changed again when further changes are made.Check with your team for the correct YEAR1 date for your copyright statements.### Property files (.properties)All property files MUST have the following header (which follows the same rules used for Java source files.).``` java### (C) Copyright IBM Corporation YEAR1, ${year}### All rights reserved```### Other source code filesIf possible, similar headers should be present on other types of source code files. The header should appear at the top of the file, and should use the comment characters appropriate for the source code file.### IndentationAs per the Oracle standard, four spaces should be used as the unit of indentation.Tab characters should not be used.### Line LengthThe Oracle standard suggests the maximum line length should be 80 characters. However, in many cases, it is difficult to write readable Java code in 80 characters on a single line. As such, a maximum line length of 120 characters is also acceptable (and is the default line length used by the Eclipse Code Style settings).### Tips:In eclipse,- go Preferences -> General -> Editors -> Text Editors -> check Show Print margin, and enter 80 in Print margin column.- go Preferences -> Java -> Code Style -> Formatter -> Edit... -> go Line Wrapping -> Maximum Line width -> enter 90.The setting above will show a soft line for 80, and hard wrap for 90.### Naming ConventionsIn addition to the naming conventions suggested by Oracle, the following naming conventions should be used.> PROTIP: If you find you are struggling with naming a class or method, look to the standard Java API documentation (Javadoc) for inspiration### Classes- Avoid the Impl suffix naming convention for classes which implement an interface. Instead, use a name that better describes how the class implements the interface. For example, a class which uses JAX-WS to implement a ```WebService``` interface might be named ```JaxWsWebService```.- Only capitalize the first character of an abbreviation. For example, use ```XmlEditor``` instead of ```XMLEditor```. Using camel-case in this way results in class names which are far easier to read.### Interfaces- Do not prefix interfaces with a capital I. Instead, use a noun which the phrase X is-a  makes sense for all implementations of the interface. For example, dont use ```ICar``` for a web service interface. A better name would be ```Vehicle```. Some implementations of the ```Vehicle``` interface might be called ```Car``` (a Car is-a Vehicle), ```Truck``` (a truck is-a Vehicle), or ```Van``` (a Van is-a Vehicle).> PROTIP: The I naming convention is discouraged for several reasons:> - From the consumer of a class/interface, it is rarely important to know whether or not a type is a class or an interface.> - Using the I convention breaks the illusion of polymorphism. This can easily be seen when trying to form is-a sentences (Car is-a IVehicle makes much less sense than Car is-a Vehicle).> - Modern development tools (including Eclipse) are capable of identifying interfaces from classes quickly and easily.### Methods- Only capitalize the first character of an abbreviation. For example, use ```convertToXmlString``` instead of ```convertToXMLString```. Using camel-case in this way results in method names which are far easier to read.- Follow the JavaBeans specification for naming property accessor and mutator methods (getXXX for accessors, and setXXX for mutators).### Variables- Dont use Hungarian Notation. As with the interface I prefix, modern development tools make such notations obsolete.- Abbreviating variable names is acceptable.    - Dont use single-letter abbreviations.### Constants- For XML use the C XML convention that we have used in Velocity:    - Tags: ``````_TAG    - Attributes: ```_```_ATTR    - Attribute values: ```__```    - . and - are replaced with _- Example: if you have `````` you should define:``` javapublic static final String A_TAG = a;public static final String A_B_ATTR = b;public static final String A_B_C = c;```### Private Fields- Use standard variable naming conventions for private fields and properties. Dont prefix private fields with an underscore (_)- Similarly, dont use the m_ or s_ naming conventions.### Java collection variable names- When naming variables which reference a Java collection, use names which describe how and what data is stored in the collection. The following table contains some suggestions and examples by collection type.| Collection Type	| Naming Convention	| Examples || ------------- |-------------| -----|| Arrays and Lists | Use a plural noun. | ```String[] urls = new String[3];``` ```List results = new LinkedList();``` || Maps | Use the format ```By```, where both ``` and ``` are nouns. Alternatively, use ```To```. | ```Map resultsByTerm = new HashMap<String, SearchResult();``` ```Map termsToResults = new HashMap<String, SearchResult();``` || Sets | Use a plural noun. Optionally use unique as a prefix. | ```Set uniqueNames = new HashSet();``` |## Further Resources[Growing Object-Oriented Software, Guided by Tests](https://www.safaribooksonline.com/library/view/growing-object-oriented-software/9780321574442/)Contains a worked example of Test Driven Design in Java for a larger bit of software that interacts using Swing and network connections. Great example of OO design and TDD by guys that have developed software for a long time using these techniques. Shows the progression of code and thought process that you would go through (including dead ends), not just the beginning and end states.[XUnit Test Patterns](https://www.safaribooksonline.com/library/view/xunit-test-patterns/9780131495050/)Classical patterns book, split into two main sections. The first section gives an effective introduction to important aspects of testing such as the goals of testing, test smells, how to improve tests, what clean tests look like, etc.. The second section has named patterns that facilitate discussion and explain when a given pattern is appropriate.[Working Effectively with Legacy Code](https://www.safaribooksonline.com/library/view/working-effectively-with/0131177052/)Invaluable reference for dealing with existing code that is untested or undertested. This code is often not designed with testability and maintainability in mind, which means adding tests or making improvements after the fact is very complicated and has many opportunities to break in subtle ways. The book contains effective techniques on how to safely get tests around code before modification. Jake uses this as his Bible when he gets frustrated with code.[Refactoring: Improving the Design of Existing Code](https://www.safaribooksonline.com/library/view/refactoring-improving-the/0201485672/)Defines the term refactoring, which isnt just a synonym for changing code but is about improving the design of code without changing behavior. This is another patterns book, with a discussion of what refactoring is and how it improves the design of your code, followed by recipes for specific refactorings. While many of these are built into tools like Eclipse, it is important to understand why a given refactoring will help you achieve your design goals.[Design Patterns: Elements of Reusable Object-Oriented Software](https://www.safaribooksonline.com/library/view/design-patterns-elements/0201633612/)The original software patterns book. As expected, it starts with a case study of where patterns could be applied, and follows with a catalog of patterns. These patterns are invaluable for communicating with software development peers and leveraging existing structure without reinventing the wheel.[Clean Code: A Handbook of Agile Software Craftsmanship](https://www.safaribooksonline.com/library/view/clean-code/9780136083238/)Bad code can work, but maintaining it results in wasted time that only increases with each release; you can work faster by working well. Contains practices that any professional developer should be aware of to create clean, maintainable code that can be expanded on and worked with. Includes code reading and worked examples for these concepts. Covers many aspects of development such as naming, method and class design, comments, and testing. These practices have been collected from multiple professionals over many decades.### Delivering changes- As much as possible, deliver small change sets focused on one thing.  This makes the job of reviewers much easier.- Keep in mind that your change set could be picked up and tested by a Continuous Integration build.  Deliver dependent changes as a group, and either tolerate missing external resources, or ensure they exist before delivering your changes.- Deliver style-only changes and refactoring separately from other changes.### Unit Test Conventions and StandardsA unit test is intended to verify a single unit of functionality in isolation. Other types of tests exist and can be written in the JUnit framework. However, those test classes should be in an itest package and can be executed via the maven, verify goal.Writing expressive code is very important when writing unit tests. Expressive unit tests are more valuable in the long run because:- Expressiveness helps unit tests to serve as a form of code documentation.- Makes it easier to understand what a test is testing (when it fails).- Makes maintaining unit tests easier.As such, we suggest using a unit testing style which breaks some of the standard Java conventions in favor more expressive code. This section documents that unit testing style. All of these conventions assume JUnit 4 is being used.> PROTIP: Unit test code is different from production code. It has different needs and requirements. Using a distinct style for unit tests helps to shift your thinking when you are working with the tests.### Test Classes- Append Test to every class which contains JUnit tests (CrawlerTest).- Generally, create at least one test class per production class (ShapeTest for the Shape class, CarTest for the Car class, etc).    - If the test class becomes large, break the tests into separate classes.    - Use the format ```_Test``` for naming such tests, where `````` is the name of the class the tests are for, and ```TestDescription``` is some description of what makes the tests in the test class different from tests in the other test classes.    - Examples:        - ```CarTest```        - ```Car_HandlesNullsTest```        - ```Apple_WhenRottenTest```        - ```Apple_WhenFreshTest```### Test Method Names and Signatures- Use ```snake_case``` instead of ```CamelCase```. ```snake_case``` is easier to read when reviewing unit test results (both in the Eclipse JUnit window, Maven SureFire Test reports, and from the command-line).- Dont start test method names the word test (as of JUnit 4, this is redundant).- If a test is to validate a particular defect hasnt regressed, use the defect ID in the test class name, method name or the descriptive string passed to AssertXXX()- Try to make the method name read like a valid sentence. It is okay for test method names to be long.- Describe the desired result and the behavior/input which should lead to the desired result in the test name.- Use the format ```__when_``` (note the double-underscore between <```expected_result``` and ```when```), where `````` is the common result the methods test for, and `````` is a description of the condition which should generate the expected result. This format is particularly useful when multiple test methods test for the same result.- Always throw ```Exception```.Examples:``` java@Test public void turns_red__when_the_apple_ripens() throws Exception@Test public void enqueues_a_group__when_only_one_group_exists() throws Exception@Test public void enqueues_all_groups__when_multiple_groups_exist() throws Exception```### Test Tips- Should avoid random when writing test, should have control on the test.- Running a test once vs. N times is not important, which means dont run a test N times.- Dont rely on JUnit to run your tests in any particular order, it wont.- Assert only one thing per test method.### Behavior-Based Test Methods (using BDD / Gherkin patterns)- For all but the most basic tests, dont put all of the test code in the test method itself. Instead, create given, when, and then methods (named using snake_case)    - Given methods        - The given method name should describe the state of the system (or class) before the test executes (aka, this is the precondition).        - Often, the setup code that usually goes in an ```@Before``` method will end up in the given methods.    - When methods        - The when method name should describe the action that is taken to trigger the test.    - Then methods        - The then method name should describe the desired result of the behavior described by the when method.    - All assertions should be contained in then methods.- Pass data which is specific for each test as parameters to the ```given```, ```when```, and ```then``` methods.- Use [Hamcrest-style assertions](https://github.com/junit-team/junit4/wiki/assertions) rather than the traditional JUnit assertion methods.- List the ```@Test``` methods before the given-when-then methods in the test class.- List the ```given``` methods before the ```when``` methods, and list the ```when``` methods before the ```then``` methods.> PROTIP: You will find that using the GIVEN-WHEN-THEN method pattern will create a composible set of methods which you can use to build new tests. Using this approach can greatly increase the speed in which you can write new tests, without duplicating a lot of code.Below is an example that illustrates Behavior Based Test Methods. Note that the asserts include a String that will be printed if the test fails.```javapublic class MoviePricerTest {  private MoviePricer pricer;  @Before  public void setUp() {    pricer = new MoviePricer();  }  @Test  public void should_buy_general_admission_ticket() {    GIVEN.i_want_to_watch_a_general_movie();    WHEN.i_purchase_a_ticket();    THEN.the_final_price_should_be(11);  }  @Test  public void should_buy_one_student_ticket() {    GIVEN.i_want_to_watch_a_general_movie();    WHEN.i_purchase_a_student_ticket();    THEN.the_final_price_should_be(8);  }  private void i_want_to_watch_a_general_movie() {    pricer.startPurchase(119, Day.MON, true, false);  }  private void i_purchase_a_ticket() {    pricer.addTicket(35, false);  }  private void i_purchase_a_student_ticket() {    pricer.addTicket(35, true);  }  private void the_final_price_should_be(float i) {    float finalPrice = pricer.finishPurchase();    assertThat(String.format(The final price %d should be equal to %d, finalPrice, i),                     finalPrice, is(equalTo(i)));  }  private MoviePricerTest GIVEN = this, WHEN = this, THEN = this, AND = this, WITH = this;}```### Mocks, Stubs and Fakes ...oh my!A unit test should be limited in scope of execution, but the code under test may rely on databases, web servers, search engines, etc. The interface under test can be isolated by disabling behaviors or pretending that a resource exists. This is often done by employing mocks, stubs and fakes. Mocks stubs and fakes are all kinds of test double.Employing test doubles when coding unit tests enables the test to achieve that level of isolation that will- Fast execution- Expectations can be expressed in each test case increasing code readability- Easy clean up after each test and/or test suite - no external systems to reload/reset/reconfigure/restore/...etc.- Reduce the scope of causes for test failure to the code under test and/or the test- Isolated tests can be run in parallelCons to test doubles approach:- It can be a lot of work to set up the test doubles to effectively isolate complex tests. (This is a code smell. You should ask yourself if the design could be improved so that your system under test does not depend on as many collaborators.)- Its not always easy to find the points to isolate (this also points to a design problem in the code under test).- Code coverage scores are reduced when the only code that is run as part of a test is the code that is verified by the test.- Additional work to create a separate suite of integration tests.Recommended further reading:- [Growing Object-Oriented Software Guided by Tests - Steve Freeman and Nat Pryce](http://www.growing-object-oriented-software.com/)- [XUnit Test Patterns: Refactoring Test Code - Gerard Meszaros](http://xunitpatterns.com/)Recommended articles:- [Mocks Arent Stubs - Martin Fowler](http://martinfowler.com/articles/mocksArentStubs.html)- [Mocks, Fakes, Stubs and Dummies - Gerard - Meszaros](http://xunitpatterns.com/Mocks,%20Fakes,%20Stubs%20and%20Dummies.html)- [Mock Roles, Not Objects - Steve Freeman, Nat Pryce, et al.](http://www.jmock.org/oopsla2004.pdf)- [Hexagonal Architecture - Alistair Cockburn](http://alistair.cockburn.us/Hexagonal+architecture)- [Principles of Object Oriented Design (The SOLID Principles) - Uncle Bob Martin](http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod)Recommended viewing:- [Why You Dont Get Mock Objects - Gregory Moeck](http://www.confreaks.com/videos/659-rubyconf2011-why-you-don-t-get-mock-objects)- [The Deep Synergy Between Testability and Good Design - Michael Feathers](http://www.youtube.com/watch?v=4cVZvoFGJTU)- [The Magic Tricks of Testing - Sandi Metz](http://www.justin.tv/confreaks/c/2247122)### Unit tests vs. Integration TestsUnit tests and integration tests are intended to test behavior at different levels. Unit tests assert the correctness of small, focused parts of a system, such as a class. Integration tests focus on testing that behavior is correct across the larger system. Both are important for different reasons, and testing should be considered incomplete without both types. However, they should only be used on their appropriate levels.When we discuss unit tests, the important aspect is that we are showing correctness of our [SUTs (system under test)](http://xunitpatterns.com/SUT.html) behavior by isolating it from any collaborators it may have in the system. These collaborators could be such things as other objects in our domain that have behavior, or they could be external systems such as Velocity, the file system, the system clock, user input devices, etc.By doing this, we know that the only source of potential issues is our SUT, since we are replacing all of the other behavior in the process with our pre-defined [test doubles](http://xunitpatterns.com/Test%20Double.html). Our SUT can send messages to its [mocked](http://xunitpatterns.com/Mock%20Object.html) collaborators and assume that they will operate perfectly (since the actual implementations are tested elsewhere). This is also the reason that dependency injection becomes important in our testing approach. If an object has dependent collaborators that are hidden in its implementation, then we cannot replace them in our tests, and the design lessens our ability to test these objects well in isolation. This is overcoupling, when our object has too much dependency on the implementation of other objects. By replacing dependencies on the concrete implementations of a class with a reference to an interface in Java or via duck typing in Ruby, we remove this coupling.Value types do not have to be mocked in unit tests. Since true value types have no behavior, they cannot be the cause of behavioral issues in our tests. Of course this does not prevent the possibility that our SUT is interacting incorrectly with the value type. That, however, is an incorrect behavior in our SUT. This is similar to the notion that we should not be attempting to directly test private methods of our object. We should see the behaviors that we desire come about in our public interactions with the SUT, and our testing should also follow this approach. This allows the object to encapsulate its implementation details so that we are not dependent on its specific implementation.Integration tests are any tests where you want to test behavior that involves more than one object with behavior. This includes any external resource. In this case, we should not have _any_ mocks in our test.When should you have tests such as these if you could just test things at a unit level? Mocks enable us to assume that the collaborators behavior is exactly as our SUT needs. Since we cannot change (and therefore cannot improve) the behavior of external systems such as the file system API or the input API (and to some extent the Velocity API), it is not appropriate to mock/stub them out in our tests. We should be using real data in place.The [ports and adapters / hexagonal architecture](http://alistair.cockburn.us/Hexagonal+architecture) concepts help here. If we make adapters for all of our external resources, then we must only perform integration tests at that layer. Our adapter should be providing an abstraction that is appropriate to how our domain objects need to interact with the external system. This might mean that the same external system is actually exposed to our domain objects via more than one adapter, if this makes the abstractions more appropriate. An important realization to make is that even such resources as the system clock can be abstracted away in this approach. In this case, a generic clock interface is provided to suit the domains needs, and the default can be the system clock. However, to do isolated unit testing, a test double can be provided with a [fake](http://xunitpatterns.com/Fake%20Object.html) implementation of the clock logic. Then, tests can perform thread sleep logic, time-limited functions, and other related behaviors without actually having to wait for the wall clock time to elapse. The test double can simply tell the SUT that the time has immediately progressed as necessary for the tested behavior to be triggered.Generally, for new functionality, a high-level integration test should be written that attempts to use the full system and fails in an informative way. Then, the behavior necessary to accomplish that functionality should be built using unit tested additions to the design. Further integration tests will be necessary if external resources are needed, but should preferably only be necessary at an adapter level. Once enough unit-tested behavior has been added that the high-level integration test passes, then that aspect of feature should be complete.If integration tests are being added to test domain logic further and further into the system, that may be a sign of a leaky abstraction in our adapter level. Our domain logic is likely too tied to how the external system is implemented. If our design can be improved so that our abstraction of that external system is better suited to our domain, then that should be preferred over creating more and more heavy-weight, less focused integration tests.### FixturesA fixture is a class that will initialize a set of resources common to a number of tests and/or test suites.Recommended further reading - [JUnit FAQ ### 15](http://junit.sourceforge.net/doc/faq/faq.htm#tests_15) and [Simple Smalltalk Testing, Kent Beck](http://www.xprogramming.com/testfram.htm)### Tests with threadsThe first answer to the question, How do I add threads to my unit tests? is Dont do it. Because much of CXO relies on activities and activities are very concurrent there are unit tests in our code base that use threads. If you must use threads then use the ThreadFactory fixture as shown below. This fixture will ensure that all threads launched by the test are resolved before completing the test suite.```javapublic class SleepingOrphanTest {    protected static ThreadFactory tfactory = new ThreadFactory();    @BeforeClass    public static void setup() {        tfactory.setup(SleepingOrphanTest.class);    }    @Test    public void runRipVanWinkleThread() {        Thread t = tfactory.newThread(new Runnable() {            public void run() {                try {                    while (true) {                        Thread.sleep(1000);                        System.out.println(Zzzz....);                    }                } catch (InterruptedException ie) {                    throw new RuntimeException(ie);                }            }        }, Rip Van Winkle);        t.start();        try {            t.join(3000);        } catch (InterruptedException ie) {            assertTrue(ie.getLocalizedMessage(), false);        }    }   @Test   public void runThreadSpawningClass(){     Thread t = tfactory.newThread(new Runnable() {            public void run() {                ThreadSpawningThing thing = new ThreadSpawningThing();                 thing.doStuff();                 assertTrue( Some stuff happened., thing.stuffHappened() );            }        }, Spawning Thing Test);        t.start();       assertTrue( Spawned Threads that do stuff, SpawningThing.runningServiceThreadsCount() > 0 );       t.join(10);  //wait for the test thread to complete otherwise the test will likely never happen.   }    @AfterClass    public static void teardown() {        tfactory.teardown();    }```The above code is a test case that uses the ThreadFactory fixture to create a thread around the Runnable object needed for this test. The first test, Rip Van Winkle, starts a thread that will continue to run after the test completes. When the suite is complete the JUnit framework will call the teardown method and in turn call the teardown for the Thread fixture. This will attempt to shutdown every thread that was started by the test. The second test starts a thread to run a class that spawns threads, apparently daemon threads as they persist beyond the scope of the object itself. These threads will also be cleaned up by the fixture because they were launched by a thread created by the fixture. If any of these threads fail to shutdown in the teardown method an Assert is raised failing the suite with a stack trace for any threads still running.### Other Recommendations- Read [Effective Java by Joshua Bloch](https://www.safaribooksonline.com/library/view/effective-java-2nd/9780137150021/)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/java-coding-style-guide/",
    },
    {
      "title": "Code Review Normscontributors:  - name: Robyn Hammond (original author - former IBMer)",
      "text": "---title: Code Review Normscontributors:  - name: Robyn Hammond (original author - former IBMer)---[Code Review with GHE](../code-review-with-github-enterprise/) | [Code Review Norms](../code-review-norms/) |  [Code Review Checklist](../code-review-checklist/)In order to truly leverage the benefits of code reviews, a team must establish a solid set of best practices and norms. Providing high quality code reviews is not easy, and usually requires a lot of investment and thought into understanding how each line of code within a pull request (PR) may impact your code base.The following is a set of proven code review practices and norms:1. Everyone on the team does code reviews2. Review every line of code3. Two way practices4. Review the code, not the contributor5. Use automated tests and linters to catch little stuff6. Have lots of discussion and keep it in GitHub so that its documented and searchable7. The spirit of a code review is I challenge you to make this better not This is something that might work.> My view is that putting code up for review should be “This meets or exceeds the expectations for the team” and not “Is this good enough?” The key point being that the contributor has already done the thinking about what is important to the team and has worked hard to fulfill the expectations. The contributor should not be doing the least work possible and hoping the review process will guide them to the right answer. In a work team, thats easy because the team should already be talking about whats expected. In OSS, the effort of understanding whats expected falls more on the contributor. Does the project publish their expectations in a contributor guide? Can you look at other code to see what styles and practices are in use?  >> – Matt Lavin",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/code-review-norms/",
    },
    {
      "title": "Source Code Security",
      "text": "---title: Source Code Security---## IntroductionAn important aspect of security in Watson is ensuring we maintain the integrity of our source code by preventing malicious modification of that code that could expose our customers or IBMs data or destabilize an offering preventing it from being used by our customers as intended. Additionally it is important that we limit the distribution of especially valuable source code to only those who with a need-to-know.The mandatory requirements and recommended practices for managing source documented here are the entirety of the requirements and recommendations for Watson offerings (as documented in the scope section below). They are the official Watson interpretation and implementation of the requirements and recommendations from the IBM Source Code Asset Protection Team team as documented in the [Source Code Asset Protections community](https://w3-connections.ibm.com/communities/service/html/communitystart?communityUuid=554bd341-dda2-4e5e-abf5-a2bc634be130), the [SCM & Build Server Self-Assessment](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W759933699b91_4fda_b46f_069b0b69b67e/page/SCM%20and%20Build%20Server%20Self-Assessment) and the [SmartProtect tool](https://smartprotect.raleigh.ibm.com/Web/). Where external information is referenced that is in conflict with the information here the information on this page takes precedence.## Scope### The requirements and recommendations here apply to the following:- IBM proprietary source code[1](developer-guide/source-code-security/#ibm-proprietary-source-code) that is used to create any of the following IBM offerings or associated materials that is maintained in a versioned SCM repository such as github.ibm.com, RTC, SVN, etc.    - Any version of a service that is or will be part of the Watson Developer Cloud or any supporting tooling associated with that service (private experimental, public experimental and beta services are in scope).    - Any version of a Watson Offering that is or will be hosted in the [IBM Cloud Marketplace](https://www.ibm.com/marketplace/cloud/us/en-us).    - Any offering that is or will be available through Passport Advantage.    - Any demo or other supporting application specifically associated with one or more of the offerings above that is hosted in an IBM-managed SCM repository.### The following are not in scope:- Artifacts that are not maintained in an SCM repository.- Artifacts that are maintained in non-IBM SCM repositories such as github.com.- Source code that is not IBM proprietary.- Source code for custom solutions for specific customers.    - Important! This code may be subject to source code security requirements, they are just not managed under the requirements and recommendations on this page.- Non-application marketing or sales artifacts that are not part of a production offering.## Mandatory Requirements### Source Code Repositories1. Manage in-scope source code only in github.ibm.com. The only exception to this is legacy code that is managed in one of the following that will not be migrated to github.ibm.com:    - [Watsons RTC server](https://nsjazz.raleigh.ibm.com:8050/ccm/auth/authrequired)[2](developer-guide/source-code-security/#watson-rtc)    - [Git/Gerrit in the Watson Pittsburgh Lab](https://openblue.bigdatalab.ibm.com)[3](developer-guide/source-code-security/#watson-git-gerrit)### SmartProtect1. Track all in-scope source code with records in the [SmartProtect system](https://smartprotect.raleigh.ibm.com/Web/).1. For new offerings create the SmartProtect record and submit it for approval after the MMT has approved the offering (end of [Step 3: Operationalize the offering](agile/new-offering-definition/)).1. Maintain at least one SmartProtect record for each distinct offering. A single offering can be split into multiple records if there are distinct teams managing separate codebases that contribute to the offering.1. Use a separate SmartProtect record for shared components used by multiple offerings that are managed in a separate codebase from any one offering.1. Update the SmartProtect record and submit it for re-approval at least once annually.Note: Currently [Daniel Cox](http://w3.ibm.com/newbp/profile.html?uid=2D7394897) creates and manages all SmartProtect records for Watson. Please work with him to ensure your offering is properly tracked and managed in SmartProtect.### Build Systems1. Implement [SmartBuild monitoring](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/Source%20Code%20Monitoring/page/Overview) on all non-transient Watson-controlled build servers that access or store in-scope source code.    - Transient virtualized build systems that are created and destroyed with each build do not require monitoring.    - Implementing monitoring of the central Travis build server (currently at http://travis.innovate.ibm.com/) is the responsibility of the Toolbox@IBM team.    - SmartBuild monitoring includes two elements - Guardium agents and OS level logging - implement both.    - Implementation isnt complete until the build system is registered in the SmartBuild system and the `OS logging` checkbox on the `Protection` tab is checked and the status is shown as protected:        - When registering in SmartBuild:        - Make the server admin the person that is directly responsible for the builds.        - Use the bluegroup [`Watson-SmartBuild`](https://bluepages.ibm.com/tools/groups/protect/groupsgui.wss?task=ViewGroup&gName=Watson-SmartBuild). Ask one of the listed administrators to be added to the group.    - For implementation assistance ask on the #tron channel.1. Follow all applicable standard IBM server requirements such as ITCS104 including, but not limited to:    - Classify the server per ITCS104 requirements as Group 1 or Group 3.    - Register the server in the [Mixed Address Database (MAD)](https://w3-03.sso.ibm.com/services/security/ipaddress/home.action.wss).    - Register the server in [ITSAS](https://itsas.raleigh.ibm.com/itsas/).### Other Systems1. Do not store in-scope source code in any form on any servers that are not registered in SmartBuild.    - Dont setup file shares with access to in-scope source code even if those file shares have restrictive access control lists.    - Dont zip up in-scope source code and put it in Maven or any other library management system.### Crown Jewel Source CodeAny in-scope source code that has been declared as a Crown Jewel[4](developer-guide/source-code-security/#crown-jewel) asset with the IBM CISOs office has the following additional requirements:- Place the code in a private repository which contains only Crown Jewel code and whose access is limited to those with a need to know.- Track the inclusion of Crown Jewel code in offering by indicating the management of Jewel Code[4](developer-guide/source-code-security/#crown-jewel) in the appropriate [SmartProtect](https://smartprotect.raleigh.ibm.com/Web/) record.- Follow the access management approval and revalidation requirements documented in the SmartProtect tool.### Laptops & Workstations1. In addition to following all applicable standard IBM workstation requirements (ITCS300, mac@ibm etc), including full disk encryption, if a laptop has source code stored on it:    - Do not leave it powered-on and unattended.    - (Windows and Linux) Do not leave it in sleep mode as [full disk encryption is susceptible to attack](https://en.wikipedia.org/wiki/Cold_boot_attack) - instead use hibernate.    - (Mac) Enable [Find My Mac](https://support.apple.com/kb/PH22102) and keep it enabled.    - Require a password to access the laptop after power on or when restoring from hibernation (Windows and Linux) or sleep (Mac).2. Store source code only on laptops that meet all [ITCS300 requirements](http://w3-03.ibm.com/transform/sas/as-web.nsf/contentdocsbytitle/security+and+use+standards+for+ibm+employees). BYOD devices [are allowed](http://w3-03.ibm.com/transform/sas/as-web.nsf/9b24bc9335a10029852569660048c7b7/90af16513aa226048525769000543385?OpenDocument) to store source code as long as all ITCS300 requirements are met.Adapted from: [_Laptop Shutdown & Hibernate Guidelines_](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W591f471daa37_4d0e_b162_c3a4c07e0f9e/page/Laptop%20Shutdown%20%26%20Hibernate%20Guidelines)## Recommended Best Practices### Justification needed if not implemented (no deviation approval required)_Build systems and legacy source control repositories_1. Do not enable root or admin login. Use sudo enabled on individual accounts or enable key-based SSH where the key is given root privileges but the user associated with the key is logged.1. Disable or remove all daemons/services that are not essential.1. When security patches cannot be applied to a server (very rare!) implement additional controls to mitigate the risk.1. Limit operating system access to those with a need to manage the server.1. Protect any shared credentials carefully, changing them when someone with access to the credentials no longer requires it.1. Use encrypted channels for all connectivity to the server and where certificates are used do not use self-signed certificates - use IBM certificate authority issued certificates instead.1. Avoid using shared credentials when a user requires temporary access, instead create an account for that user with a reasonable expiration set.1. Implement [BigFix](https://w3.ibm.com/help/#/mac/us_imt/en/article/29083).1. Install and run antivirus_ Build systems_1. Use standard, hardened images for build farms.1. Set unique passwords when standing up a server from a standard base image.### Recommended where feasible_Build systems and legacy source control repositories_1. Place servers behind a restrictive boundary firewall._Legacy source control repositories_1. Delete in-scope source from the server after a build completes.## History, Approvals and Deviations### History| Version | Date | Change | Material || --- | --- | --- | --- || 1 | 2016.12.16 | Initial version | Yes || 2 | 2017.01.01 | Added approval of version 1, minor typos | No || 3 | 2017.01.29 | Relaxed requirement for code on IBM-only laptops to allow BYOD (confirmed this is OK with Kevin Mayfield) | No |### ApprovalsThese requirements, recommended best practices and other information on this page have been approved by Watsons BISO (Brand Information Security Officer) as indicated below:| Approved On | Approved Version | Approved By || --- | --- | --- || 2016.12.19 | 1 | [Ravi Mani](https://github.ibm.com/watson-security-operations/documents/blob/master/secure-engineering/approvals/SOURCE-Source%20Code%20Security%20Policy.eml) |Material changes require the approval of the Watson BISO or delegate.### DeviationsDeviations from any requirements listed on this page require approval of the Watson BISO (Brand Information Security Officer) or delegate. Deviations from recommended best practices do not require approval.| Deviation | Requested By | Approved On | Approved By || --- | --- | --- | --- || None  | ... | ... | ... |----1 IBM Proprietary source code is defined as:- A program, script, image, configuration file, markup language or other programming artifact created by a developer with a purpose of delivering a product, solution, offering, or technology for IBM business purposes.- Any IBM owned source code or related artifact commonly placed under configuration control that is used to produce and service IBM commercial products or other customer deliverables, except for open source code.- All source code that is subject to IBM Standard [C-S 0-6045-002](https://w3-03.ibm.com/standards/esisstds.nsf/0/E5FD60876972962585256999004E8A0C?OpenDocument).If the source code in question is IBM Confidential, it is more likely than not to be IBM proprietary source code.Adapted from: [_Source Code Asset Protection Guidelines_](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W591f471daa37_4d0e_b162_c3a4c07e0f9e/page/Source%20Code%20Asset%20Protection%20Guidelines)2,3 Watsons RTC server and the Git/Gerrit server in Wastons Pittsburgh lab have implemented the required [SCMON](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W591f471daa37_4d0e_b162_c3a4c07e0f9e/page/Source%20Code%20Monitoring) monitoring and other requirements for source code repositories.4 Historically IBM has used the term Jewel Code to designate extremely high value source code requiring special treatment. The CIOs office has more recently requested business units to declare Crown Jewel data assets with the recommendation that all offering source code be considered a Crown Jewel data asset. Watson has specifically chosen to not classify all source code as Crown Jewel. Instead it uses, but is not limited to, the following guidelines that were previously established for Jewel Code to inform any decision to classify Crown Jewel source code:- A targeted subset of source code if lost or stolen that will have a highly significant impact on IBM and customers.- Typically 1-2% of most critically sensitive source code representing 70% of IBM software value.- IBM would lose clear competitive advantage or superiority, or our customers‘ data would be at risk should a particular software component fall into the hands of a third party or competitor.Adapted from: [_Jewel Code Guidelines_](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W591f471daa37_4d0e_b162_c3a4c07e0f9e/page/Jewel%20Code%20Guidelines)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/source-code-security/",
    },
    {
      "title": "Branching",
      "text": "---title: Branching---Teams in Watson follow [GitHub Flow](https://guides.github.com/introduction/flow/) when delivering code. Fork & Clone > Branch > Commit > Pull Request. Pull Requests are reviewed [and merged](../../developer-guide/merging) by another Squad Member so we can ensure we comply with [separation of duties](https://en.wikipedia.org/wiki/Separation_of_duties) rules.This page will focus on organizational Best Practices around the second part of the flow: Branching and [GitHub Releases](https://help.github.com/articles/creating-releases/)## Overall StrategyNow that we need to deal with different deployment targets, we must be very clear about how we manage branching. As Product / Service Teams target IBM Cloud Public as their default, we need a strategy for how to deal with IBM Cloud Private (for those Product / Service Teams that deliver there). We collected data about how others deal with similar challenges. Were taking a page out of GitHubs own Playbook for our strategy.- IBM Cloud Public is the default deployment and updated weekly (at a minimum)- IBM Cloud Private deployable images are made available Quarterly (at a minimum)- Emergencies are deployed to all targets in lock step - full deploys, no patching- [GitHub Releases](https://help.github.com/articles/creating-releases/) are used when we release so we can always get back to a point in time (to deal with Security Updates). [Semantic Versioning](https://semver.org) should be used for all GitHub ReleasesThis strategy follows the spirit of the (Almost) Single Source with Dual Packaging declaration from the [Watson on ICP Manifesto](https://ibm.ent.box.com/s/eocled9gh4jl927hitkoorj57b62i49u).> Note: All diagrams should be _scaled_ to match the release cadence of your Product. They depict a Weekly Release Train for Public and a Quarterly Release Train for Private.## Required Branches### IBM Cloud Public#### Master- The As Is. For all of our teams, `master` should be whats currently deployed in IBM Cloud Public.- All Tests Must Pass. Your `master` branch must be deployable at all times- For those teams using a Weekly Release Train model, `master` is updated from `develop` every Wednesdayor- For those teams practicing Continuous Delivery, `master` is updated from `develop` continuosly#### Develop- If `master` is the As Is, `develop` is the To Be, `develop` is what will be deployed next to IBM Cloud Public- All Tests Must Pass. Your `develop` branch must be deployable at all times- For those teams using a Weekly Release Train model, push `develop` to `master` on Wednesdays. Never deploy on Fridays.- For those teams practicing Continuous Delivery, push `develop` to `master` when all tests have passed.#### Weekly Release Train Model![Branching - Update master from develop every Wednesday](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/branching/develop-to-master-weekly.png)#### Fork & Branch- Squad Members fork off `develop` and create short-lived branches and follow [GitHub Flow](https://guides.github.com/introduction/flow/)![Branching - Squad Members follow GitHub Flow - image from github.com](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/branching/github-flow.png)> ProTip: Short term means short term. According to some of the [best industry books](https://www.safaribooksonline.com/library/view/continuous-delivery-reliable/9780321670250/) (and some of our [favorite colleagues right here at IBM](http://w3.blueprint.sby.ibm.com/b_dir/blueprint.nsf/url/AB291383?OpenDocument)), those that excel at this are committing many times a day, having each (tiny) commit reviewed quickly, and opening a PR with all of the commits every day...#### Aspirational Goals for branchingIf we were to directly copy how GitHub works, then we wouldnt even have a `develop` branch. All changes would go in `master` and `master` would be deployed on every change. We recognize this is _aspirational_ for many product teams today, this is how they work at GitHub, and its what all teams should be aspiring to achieve...### IBM Cloud PrivateFor those Products / Services / Solutions that are delivering deployable content to IBM Cloud Private, we will follow the industry standard pattern that GitHub uses for updating GitHub Enterprise from the GitHub Public codebase.> At least once a quarter, IBM Cloud Private will be updated with the latest codebase thats already deployed in IBM Cloud Public. [GitHub Releases](https://help.github.com/articles/creating-releases/) will be used to tag each update so that teams can get back to that point if needed (for security updates).#### Quarterly Release Train Model#### icp-master- On the last Tuesday (of the last full week) of the Quarter, `icp-staging` is pushed to `icp-master`- For all of our teams, `icp-master` should equal the latest release for IBM Cloud Private- All Tests Must Pass. Your `icp-master` branches should be deployable at all times- Create a GitHub release for `icp-master` (note: your CI/CD automation may do this for you)#### icp-staging- On Wednesdays, `icp-staging` is updated from `master`    - Two full weeks before the end of the Quarter, updates to `icp-staging` are switched off- All Tests Must Pass. Your `icp-staging` branch should be deployable at all times- All Teams should merge `icp-staging` to `icp-master` on a quarterly basis (at a minimum)    - For those Products releasing on a quarterly basis, Releases are expected at the end of the Quarter![Branching - Update icp-staging from master every Wednesday and update icp-master every quarter](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/branching/public-to-private-quarterly.png)### Security Vulnerabilities (IBM Cloud Public)- For those teams following the Weekly Wednesday Release Train model, most security vulnerabilities can be patched during the Release Trains- Code Blue Vulnerabilities must be merged in this order:    - `master` then `develop`    - This allows us to fix the emergency in IBM Cloud Public immediately and ensure that it will be included in the next Weekly Wednesday Release Train- For those teams practicing Continuous Delivery, just commit the security update to `develop` and then it will flow into `master` and into Production### Security Vulnerabilities (IBM Cloud Private)#### Security Updates for the Quarterly Pattern- Most customers will expect monthly updates where security vulnerabilities can be patched. New features are not allowed during monthly security updates    - Set your `icp-master` branch to the last GitHub Release Tag.    - Monthly security updates must be merged into `icp-master` after automated validation    - Create a GitHub release for `icp-master` (note: your CI/CD automation may do this for you)- `icp-staging` will be fed from `master` every week, so security updates delivered to `master` will automatically flow in.> Note: Code Blue Vulnerabilities follow the exact same pattern thats used for monthly security updates.Yes, this means that security vulnerabilties must be committed to multiple branches. To deal with this, all Teams should use pull requests and have a small group of committers for `icp-master`### Small Group of Committers- Each Team must restrict who can merge commits to `icp-staging` and `icp-master`- This ensures that we dont accidentally deploy new features into IBM Cloud Private mid-quarter (for those Teams releasing Quarterly)- `icp-staging` is almost exclusively used as a shakedown branch. Human beings should not be committing changes to `icp-staging`#### Aspirational Goals for ICP ReleasingAt least one of our Service Teams already out on IBM Cloud Private is updating Monthly and they aspire to move to bi-weekly. We recognize that this is aspiration for many of our Product Teams (and customer wishes). Please understand that you may have flexibility with your release cadence. Work with your Offering Manager to understand what boundaries you have...## N-3What does N-3 even mean in this new world?The answer is, unfortunately, _it depends_.For most Product Teams, were asserting that this means that we allow customers to upgrade to the latest release from N-3 releases back (instead of having to upgrade to each release as it comes out).We are not commiting to providing security updates for older Releases. If you want security updates, you must upgrade.The current thinking is to to use git tags (or GitHub Releases) to mark each release to IBM Cloud Private (Quarterly and any periodic updates for security updates).Where does _it depends_ come into play? We dont yet know. Based on our collective experience, weve all been in situations where a customer was promised something special.To keep things as simple as possible, the preference is to minimize branches and solve for the main use cases, rather than the edge cases.This use case will likely be the most contentious one. We welcome your comments and ideas...## IBM Cloud Dedicated- Dedicated Deployments should be updated in lock step with IBM Cloud Public.- Dedicated Deployments are deployed from `master`## Watson CI/CDTo ease the burden on Product Teams, unattended automated deployments are an absolute requirement. Get started with [Conan the Deployer here](../../developers/ci-cd/).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/branching/",
    },
    {
      "title": "Merging",
      "text": "---title: Merging---Teams in Watson follow [GitHub Flow](https://guides.github.com/introduction/flow/) when delivering code. Fork & Clone > [Branch](../../developer-guide/branching) > Commit > Pull Request. Pull Requests are reviewed [and merged](../../developer-guide/merging) by another Squad Member so we can ensure we comply with [separation of duties](https://en.wikipedia.org/wiki/Separation_of_duties) rules.This page will focus on organizational Best Practices around the last part of the flow: Merging.## The RuleNever merge your own work.Its really as simple as that.All Watson Squad Members must have someone else review and merge their work.Squad Members must never merge their own work and put it into Production.## Overall StrategyWhy? Several reasons.- Its been proven time and time again that Code Reviews prevent defects from entering our Systems.- Taking responsibility for merging someone elses work motivates you to perform a more thoughtful review.- It provides the lowest-cost way possible to implement separation of duties controls into our workflow without negatively impacting our Squad Members.- Separation of Duties is a non-negotiable requirement for selling software and services in regulated industries.## What its not- This is not a review board- This is not a heavyweight process- This does not take control away from the hands of the Squad Members- This doesnt require anything other than following [GitHub Flow](https://guides.github.com/introduction/flow/)- This does not drastically change how the vast majority of Squads have already been working",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/merging/",
    },
    {
      "title": "Code Review Checklistcontributors:  - name: Michael Barlock (original author - former IBMer)",
      "text": "---title: Code Review Checklistcontributors:  - name: Michael Barlock (original author - former IBMer)---[Code Review with GHE](../code-review-with-github-enterprise/) | [Code Review Norms](../code-review-norms/) |  [Code Review Checklist](../code-review-checklist/)## Better quality through Code ReviewsDoing a good code review is tough work. You should review code at a rate between [200-400 lines of code per hour](http://smartbear.com/SmartBear/media/pdfs/11_Best_Practices_for_Peer_Code_Review.pdf). In addition, you shouldnt review for more than 90 minutes per stretch. Together that means you and your team should, hopefully, be putting up code changes less than 200 lines of code, but no more than 250. For me, a code review follows a checklist that grows and changes with the team and project. Ive broken down my checklist into categories below## The Checklist### General- Is there an issue for the code and is it well documented with the problem?- Does the code function correctly and meet the acceptance criteria of the issue?- Is the code [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)? Could the code be refactored to be DRYer?- Are there any commented out lines of code? If so remove them.- Are you using loops where iterators would work? Always use iterators, less chance of bugs.- Is there any accidental logging?- Is there any code that doesnt add any value? Code that is probably left over from the creation.- Are there any obvious bugs?- Could libraries or native functions be used instead?### Adding dependencies- Does the dependency have a good license? MIT or apache2 are generally the good ones.- Is the project well maintained?- Does the project have a good community? Are a lot of people using it?- Does the maintainer respond to pull requests in a timely fashion?- Are there other dependencies out there that do the same thing? Are they better or worse (given all the criteria in this checklist)?- Does the code use the dependency correctly?- Could the use of the dependency code be better?### Testing- Are there test cases for all of the acceptance criteria?- Are there test cases for all of the important user value?- Are there test cases for all of the edge cases?### Interfacing with the User- Is the UI responsive?- Are there any media query edge cases? (Generally these are 1px areas where media queries overlap or dont have any)- Does the code match the designs?- Has a visual designer signed off on how it should look?### Performance- Are you using `position` where you should be using `transform`- Are the images being loaded too big? Could they be made smaller?- Is every line of code that the browser loads needed? Especially considering libraries.- Are all assets minified?- Are resources being cached appropriately?- Are too many database calls being made per request?### Maintainability- Do names (modules, variables, functions, etc...) have meaning? If you were to look at the code in 6 months, would you understand what the code was doing from looking at the names?- Is all the code easy to understand? I prefer easy to read and understand, clean code, over concise clever code.## Additional comments- If you touch a file, leave it better than you found it.- Run the code, dont just look at it.### UnderstandingIts important to note that when reviewing a change, you should understand everything that its trying to do. Just because code came from stackoverflow doesnt mean that it is correct or optimal. When you are performing a code review, hopefully, you are the person that is the gate between it going into production or not. When that code fails or crashes, everyone, especially the reviewer and writer of the code, are responsible for the outcome. Unless you understand what the code is doing and why, you cant catch the hard-to-find bugs that bite you at unexpected times.### Linting and coverageAll of my projects have linters for everything: code style, static analysis, performance, and even spelling. I also have (or try to have) 100% test coverage. Having these things in place give the reviewer a net to know that the code meets the projects style guides, are free of simple bugs to catch, and have test cases written that touch every line of code.---### Additional Resources- [Code Reviews presentation](https://apps.na.collabserv.com/blogs/a1a7a855-6311-4374-9080-c677ee61d927/entry/FEDucation_Code_Reviews?lang=en_us) by Michael Barlock | [Slides](https://pages.github.ibm.com/mbarlock/feducation-code-review/)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/code-review-checklist/",
    },
    {
      "title": "Scala Coding Style Guide",
      "text": "---title: Scala Coding Style Guide---## IntroductionThis is a living document, you may want to follow this page as we revise and improve this page.This wiki page documents the Scala coding style and formatting used on Scala projects. Coding conventions are important for many reasons. The [Oracle Code Conventions For Java](http://www.oracle.com/technetwork/java/codeconventions-139411.html#16712) lists some of the reasons:- 80% of the lifetime cost of a piece of software goes to maintenance.- Hardly any software is maintained for its whole life by the original author.- Code conventions improve the readability of the software, allowing engineers to understand new code more quickly and thoroughly.- If you ship your source code as a product, you need to make sure it is as well packaged and clean as any other product you create.## Ground Rules1. By far, the most important standard is to write readable code. The rules documented on this page are NOT hard-and-fast rules. If breaking a convention results in more readable code which better expresses its intent, then by all means, break the convention.2. Some of the conventions in this document must be strictly followed (sometimes for legal reasons). Such rules contain the word MUST in their description.3. Dont break a convention without a good reason for doing so (and as strongly hinted above, breaking a convention for code readability is a good reason). A convention is only good if it is used in the majority of the code written.4. Automate style conformation, starting as early in a projects development as feasible. Integrate into your projects build system and developmer environments a tool such as [ScalaStyle](http://www.scalastyle.org/) or [scalafmt](https://olafurpg.github.io/scalafmt/).> PROTIP: Writing readable, expressive code is more important thanconforming to a standard or convention.## Origins and relationship to other style guides- Many of the conventions and standards that we use for Java also apply to Scala. As such, we follow most of the guidance found in the [Java Coding Style Guide](developer-guide/java-coding-style-guide) unless specified on this page. In other words, this page overrides the Java Coding Style Guide for Scala projects, but it does not replace it.  - Unless otherwise stated in this document, we follow the [Community Scala Style Guide](http://docs.scala-lang.org/style/).## Conventions and standards### NamingIn addition to [the naming conventions listed in the community Scala Style Guide](http://docs.scala-lang.org/style/naming-conventions.html) and in the [Java Coding Style Guide](developer-guide/java-coding-style-guide) we follow these additional naming conventions for Scala projects.> PROTIP: If you find you are struggling with naming a class or method, look to [the standard Scala API Docs](http://www.scala-lang.org/api/current/#package) for inspiration### Constants- Per [the community Scala Style Guide](http://docs.scala-lang.org/style/naming-conventions.html#values_variable_and_methods),constant names should be in upper camel case (e.g. final val MyConstant)    ```scala    object Constants {      // [-1] Oops, Java style leaking into Scala      final val DEFAULT_FORCE_LEVEL = 10      // [+1] The Scala Way      final val DefaultForceLevel = 10    }    ```### Type Declarations and Type Aliases- In many cases you can exclude type declarations and let the Scala compiler infer the types automatically.    ```scala    // [-1] the type is obvious to both the reader and the compiler    val i: Int = 10    val bob: Person = Person(bob)    // [+1] cleaner    val i = 10    val bob = Person(bob)    ```- Include the type declaration when the type of a val or var is not obvious when reading the code. This is often true when assigning the result of a function to a val and the function returns a complex type.    ```scala    // [-1] what does tryToCreateComplexObject return?    val z = tryToCreateComplexObject(a, b) { _.toString }    // [+1] oh, thats what it returns!    val z: Try[Map[String, List[Int]]] = tryToCreateComplexObject(a, b) { _.toString }    ```- When defining compile-time constants, you MUST omit the type declaration. Otherwise, the Scala compilier will NOT produce a compile-time constant.    ```scala    object Constants {       // [-1] Ooops! This wont be compiled into a compile-time constant.       final val Name: String = Darth Vadar       // [+1] This will be a compile-time constant       final val Age = 12    }    ```- Create a type alias when returning a complex type from a function.    ```scala    // [-1] Thats hard to read, and I dont know what it represents    def goo: (Water, Int) => (Slime) => Try[Map[String, Slime]]    // [+1] Now I know what that is    type TryToCreatesGoo = (Water, Int) => (Slime) => Try[Map[String, Slime]]    def goo: TryToCreateGoo    ```- Sometimes you can create a type alias to add more semantic meaning to a type. For example, instead of using String for an ID, define a type alias for the ID that references String.  This improves readability and also makes it easy to change the IDs type in the future (you will only have to update the type alias to update all of the function and variable signatures).    ```scala    // [-1] What is the unit of measure for size? What is contained in the returned String?    def createStarship(name: String, size: Int): String = ???    // [+1] Much more expressive and easier to update in the future    type MegaTons = Int    type StarshipId = String    def createStarship(name: String, size: MegaTons): StarshipId = ???    ```## Code Blocks- Only include curly braces if a code block contains more than one line of code, or if you are creating an anonymous function on a single line. This applies to if expressions, for comprehensions, and functions.    Use indentation to indicate that the one line of code belongs to the function/if/for expression.    ```scala    // [-1] Curly braces are unnecessary    def sum(x: Int, y: Int): Int = {      x + y    }    if (someBooleanIsTrue) {      println(Hi Bob)    }    // [+1] More concise    def sum(x: Int, y: Int): Int = x + y    if (someBooleanIsTrue)      println(Hi Bob)    ```## Higher Order Functions and Pattern Matching- For container-like types (algebraic data types, monads) prefer using available higher-order functions (HOFs) instead of pattern matching.  - Pattern-matching is a fairly low-level tool and using higher-order functions is generally more expressive.  - Higher-order functions tend to be more concise than pattern matching, and are therefore usually easier to write.- Common container-like types that have many higher-order functions which should be used instead of pattern matching:  - [Option](http://www.scala-lang.org/api/current/scala/Option.html)    ```scala    // [-1] Using a pattern match instead of an available higher-order function    def toHoney(nectar: Option[Nectar}): Option[Honey] =      nectar match {        case Some(n) => Some(new Honey(n.freshness))        case None => None      }    // [+1] using the map higher-order function    def toHoney(nectar: Option[Nectar}): Option[Honey] =      nectar map { n => new Honey(n.freshness) }    ```  - [Try](http://www.scala-lang.org/api/current/scala/util/Try.html)    ```scala    // [-1] Using a pattern match instead of an available higher-order function    def responseFor(createdBatch: Try[Batch]): Try[Response] = Try {      createdBatch match {        case Success(b) => Response.created().entity(b).build        case Failure(e) => Response.status(500).build      }    }    //[+1] using map and recover higher-order functions    def responseFor(createBatchAttempt: Try[Batch]): Try[Response] =      createdBatch map { b =>        Response.created().entity(b).build      } recover {        Response.status(500).build      }    ```- Sometimes, using a pattern match is more readable. Thus, while you should prefer higher-order function, you can still use pattern matching in cases where doing so improves expressiveness.## Logging- Use [SLF4J](http://www.slf4j.org/) and [scala-logging](https://github.com/typesafehub/scala-logging), the Typesafe Scala wrapper for SLF4J.- Use Scala string interpolation instead of SLF4Js templating style. By using the Typesafe scala-logging library, there is no need to use the SLF4J template style and the Scala string interpolation reads much more naturally.    ```scala    logger.debug(sDownloading document from ${ur} using timeout ${timeout})    ```- If your team has a Logger trait, use it rather than directly creating a log instance    ```scala    import com.ibm.your-teams-product.Logger    class MyClass extends Logging {       logger.debug(MyClass created)    }    ```- If your team does NOT have a Logger trait, then use StrictLogging or LazyLogging from the scala-logging library    ```scala    import com.typesafe.scalalogging.StrictLogging    class myClass extends StrictLogging       logger.debug(MyClass created)    }    ```- Do not end log statements with a period. Periods tend to clutter log files and make them less readable. Additionally, most log statements are incomplete sentences.    ```scala    logger.debug(Something happened.)    // [-1] undesirable punctuation    logger.debug(Something else happend) // [+1] no ending punctuation    ```### Automated test conventions and standards## Unit tests vs functional testsThe difference between different types of tests is not always clear. This section attempts to clarify some of the differences.- Unit tests often fake things, and functional tests typically use real objects and endpoints- Unit tests are isolated while functional tests are not isolated- Unit tests should run fast- A single unit test should be focused- Functional tests validate acceptance criteria (at a minimum)- Functional tests usually test more than just the Acceptance Criteria- Functional tests grow and evolve beyond the Acceptance Criteria (for example, when defects are found)- Functional tests test the entire system, unit tests only test single units- Industry-wide functional tests are not typically run on every code submission due to time and infrastructure## Testing framework- We write Scala automated tests using [ScalaTest](http://scalatest.org/).## Testing styleScalaTest supports [different testing styles](http://scalatest.org/user_guide/selecting_a_style). Below are the styles that we use:- For unit tests, prefer [WordSpec](http://doc.scalatest.org/2.2.4/index.html#org.scalatest.WordSpec)- For functional tests, prefer [FeatureSpec](http://doc.scalatest.org/2.2.4/index.html#org.scalatest.FeatureSpec)- For tests that are not unit tests, but are also not functional tests,    prefer [WordSpec](http://doc.scalatest.org/2.2.4/index.html#org.scalatest.WordSpec)## Matchers- Mixin the base [Matchers](http://doc.scalatest.org/2.2.4/index.html#org.scalatest.Matchers) trait, which uses should verbs.- Do not use MustMatchers or ShouldMatchers (ShouldMatchers is deprecated).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/scala-coding-style-guide/",
    },
    {
      "title": "Watson Developer Guild Guide",
      "text": "---title: Watson Developer Guild Guide---This pages serves as your jumping off point for a wealth of information about how we build what we build in the IBM Watson organization.## Install an EditorFirst, install a good editor or IDE and then disable telemetry (IBM Security requirement)- [Visual Studio Code](https://code.visualstudio.com) - Security Requirement: [Disable Telemetry](https://code.visualstudio.com/docs/supporting/FAQ#_how-to-disable-telemetry-reporting) - [Atom](https://atom.io) - Security Requirement: [Disable Telemetry](https://discuss.atom.io/t/how-do-i-disable-the-metrics-or-tracking/24520)- [Eclipse](http://www.eclipse.org/downloads/)> Attention! Do not use Sublime. Believe it or not, Sublime is on the Do not Use [list](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Wae20f867b263_4104_a617_15981cf26055/page/Current%20Listing%20of%20G2O%20Software) due to a license issue.## GitHub & ZenHubNext, install and set up GitHub Desktop- [Delivering Code on GitHub Desktop](../../developer-guide/delivering-code/) (or just the [command line](../../developer-guide/delivering-code-command-line) if you prefer)- [Learn about GitHub](../../github)Install the ZenHub extension- [ZenHub](../../zenhub)- [Learn about using ZenHub to Plan and Track Work](../../planning-and-tracking-work/ongoing-delivery)## Bootcamps- [CodeRetreat](../../code-retreat/) - our boot/reboot/workout camp for learning the fundamentals of software development and design- [IBM Hackademy](https://pages.github.ibm.com/hackademy/) for learning how to deliver modern web experiences## Engineering PracticesMusts- [Code Review with GitHub Enterprise](../../developer-guide/code-review-with-github-enterprise)- [Branching](../../developer-guide/branching/)- [Merging](../../developer-guide/merging/)- [Legal Guidance](../../developer-guide/legal-guidance)- [Source Code Archival Process](../../developer-guide/legal-guidance/#source-code-archival-process)- [GHE Social Coding Ecosystem](../../ghe-social-coding-ecosystem/)Manifestos- [Agile Manifesto](http://agilemanifesto.org)- [Test Manifesto](../../developer-guide/test-manifesto)- [Performance Manifesto](../../developer-guide/performance-manifesto)- [SRE Manifesto](../../site-reliability-engineering/sre-manifesto)Shoulds(but, really, we cant think of a single reason to not do these things, always...)- [Automated Testing with Travis CI](https://whitewater.ibm.com/patterns/automated-testing-with-travis)- [Deployment Verification Testing](../../developer-guide/deployment-verification-testing/)- [Behavior Driven Development (BDD) with Cucumber](../../developer-guide/bdd-with-cucumber)- [Semantic Versioning](http://semver.org/)- [Google Style Guides (external)](https://github.com/google/styleguide)- [Google Java Style Guide (external)](https://google.github.io/styleguide/javaguide.html)    - [Eclipse Java Formatters (external)](https://google.github.io/styleguide/eclipse-java-google-style.xml)    - [IntelliJ Java Formatters (external)](https://google.github.io/styleguide/intellij-java-google-style.xml)- [Google Python Style Guide (external)](https://github.com/google/styleguide/blob/gh-pages/pyguide.md)- [Google JavaScript Style Guide (external)](https://google.github.io/styleguide/jsguide.html)- [Scala Style Guide](../../developer-guide/scala-coding-style-guide)- [Java Style Guide (old version)](../../developer-guide/java-coding-style-guide)## Cloud Engineering Guides- [Service Contract](https://pages.github.ibm.com/CloudEngineering/service_contract/)- [Cloud Builders Guide](https://pages.github.ibm.com/CloudEngineering/builders_guide/)- [System Architecture](https://pages.github.ibm.com/CloudEngineering/system_architecture/)## Continuous Integration / Continuous Delivery (CI/CD) / DevOps- [Cloud Toolchain As A Service](https://taas-home.w3ibm.mybluemix.net)- [Watson CI/CD](https://github.ibm.com/watson-continuous-delivery/Documentation/blob/master/README.md)- [Jenkins](https://taas-home.w3ibm.mybluemix.net/jenkins)- [Artifactory](https://taas-home.w3ibm.mybluemix.net/artifactory)- [UrbanCode Deploy](https://taas-home.w3ibm.mybluemix.net/urbancode-deploy)- [Wicked](https://taas-home.w3ibm.mybluemix.net/wicked) (Automated Open Source Clearance)## Watson Platform Guide- [Armada for Watson (Kubernetes)](../../developer-guide/armada-watson/)    - [Guidance](../../developer-guide/armada-watson/guidance/)    - [Collaboration](../../developer-guide/armada-watson/collaboration)- [Doctor Tooling](https://github.ibm.com/watson-foundation-services/tracker/wiki/Using-Bluemix-Doctor-tooling-in-Watson-Platform-Services) - Used to access systems in Production- [OpenVPN](https://github.ibm.com/tron/documentation/blob/master/openVPN/README.md) - Used to access systems in Staging, Development and Dedicated environments- [PagerDuty](../../developer-guide/get-access-pager-duty)- [Semantic Versioning](http://semver.org/)- [Deployment Verification Testing](../../developer-guide/deployment-verification-testing/)- [Behavior Driven Development with Cucumber](../../developer-guide/bdd-with-cucumber)- [Deploying with Docker containers](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W1e6642eaf1d6_456e_9c1f_1b95e4d3bbc0/page/Transitioning%20a%20WDC%20Service%20from%20VMs%20to%20Docker%2C%20Mesos%2C%20and%20Marathon%20%28e2e%20process%29)## Site Relibility Engineering- [SRE Manifesto](../../site-reliability-engineering/sre-manifesto)## Operational Support Systems (OSS)- [Operational Support Systems Guide](../../developer-guide/operational-support-systems)- [Notification Policy](https://ibm.box.com/s/kj38ws6tkr39qrjpo00sbnx7g2ilg783)## Building Cloud Services- [How to deploy as a Docker container](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W1e6642eaf1d6_456e_9c1f_1b95e4d3bbc0/page/Transitioning%20a%20WDC%20Service%20from%20VMs%20to%20Docker%2C%20Mesos%2C%20and%20Marathon%20%28e2e%20process%29)- [Services development guidelines](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db/page/Development%20Guidelines%20for%20Cloud%20Services)## Other Tools and Links...- How to purchase a [YourKit License](../../developer-guide/yourkit-license)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/index/",
    },
    {
      "title": "Commit Patterns",
      "text": "---title: Commit Patterns---## Patterns...Most teams use a number of patterns when delivering to GitHub. Check with your Squad to see which of these you use...# Commit Message FormatEach commit message consists of a header, a body and a footer. The header has a special format that includes a type, a scope and a subject:``` bash(): ```The header is mandatory and the scope of the header is optional.The goal of the commit message is to be human readable across a wide variety of devices and interfaces. Any line of the commit message cannot be longer 80 characters and [should preferably wrap at 72 characters](http://stackoverflow.com/q/2290016/57626).Where possible try to keep the bulk of the first line of the commit under 50 characters, however we realize this can be hard with the `():` prefix. This allows the message to be easier to read on GitHub as well as in various git tools.We allow a very minimal use of markdown within our commit messages. Primarily this relates to thefollowing elements: Bulleted lists. This should be obvious as the markdown version of such lists is very readable. Bold characters. Using `` or `` around a word for emphasis can helpful, although it should be done sparingly. Monospace characters. When embedded a identifier, such as a variable name, inside of prose, it may be more readable to use backticks ( ` ) around the identifier.# RevertIf the commit reverts a previous commit, it should begin with `revert: `, followed by the header of the reverted commit.In the body it should say: `This reverts commit .`, where the hash is the SHA of the commit being reverted.# TypeMust be one of the following: feat: A new feature fix: A bug fix docs: Documentation only changes style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) refactor: A code change that neither fixes a bug nor adds a feature perf: A code change that improves performance test: Adding missing tests chore: Changes to the build process or auxiliary tools and libraries such as documentation generation# ScopeThe scope could be anything specifying place of the commit change. For example `Training`, `StatusPage`, etc.# SubjectThe subject contains succinct description of the change: Use the present tense (Add server side CSV export vs Added server side CSV export) Use the imperative (Add server side CSV export vs Add CSV export to server) Capitalize the first word in your commit after the (): identifier A title is not a sentence – dont close it with a period Assume that your commit message will be rendered as plain text - dont use markdownWhere possible the subject should be under 50 characters. This isnt a hard and fast rule, but its a general guideline that allows support for as many tools as possible.# BodyJust as in the subject, use the imperative, present tense: change not changed nor changes.The body should include the motivation for the change and contrast this with previous behavior.#  FooterThe footer should contain any information about Breaking Changes and is also the place to reference GitHub issues that this commit Closes. If youre working on a larger issue that spans multiple commits its safe to refer to the issue in the footer, but you may want to squash the history before submitting your pull request.Breaking Changes should start with the word `BREAKING CHANGE:` with a space or two newlines. The rest of the commit message is then used for this.A detailed explanation can be found in the [AngularJS Git Commit Message Conventions][commit-message-format], which we largely inherit.# Developer Certificate of OriginAll contributions to IBM Watson&trade; Offerings must be accompanied by acknowledgment of, and agreement to, the [Developer Certificate of Origin](http://elinux.org/Developer_Certificate_Of_Origin), reproduced below. Acknowledgment of and agreement to the Developer Certificate of Origin _must_ be included in the comment section of each contribution and _must_ take the form of:``` bashDCO 1.1 Signed-off-by: {Full Name} ```Contributions without this acknowledgment will be required to add it before being accepted. If a contributor is unable or unwilling to agree to the Developer Certificate of Origin, their contribution will not be included.```Developer Certificate of OriginVersion 1.1Copyright (C) 2004, 2006 The Linux Foundation and its contributors.660 York Street, Suite 102,San Francisco, CA 94110 USAEveryone is permitted to copy and distribute verbatim copies of thislicense document, but changing it is not allowed.Developers Certificate of Origin 1.1By making a contribution to this project, I certify that:(a) The contribution was created in whole or in part by me and I    have the right to submit it under the open source license    indicated in the file; or(b) The contribution is based upon previous work that, to the best    of my knowledge, is covered under an appropriate open source    license and I have the right under that license to submit that    work with modifications, whether created in whole or in part    by me, under the same open source license (unless I am    permitted to submit under a different license), as indicated    in the file; or(c) The contribution was provided directly to me by some other    person who certified (a), (b) or (c) and I have not modified    it.(d) I understand and agree that this project and the contribution    are public and that a record of the contribution (including all    personal information I submit with it, including my sign-off) is    maintained indefinitely and may be redistributed consistent with    this project or the open source license(s) involved.```### Example Commit MessageHeres a sample commit message that adheres to our commit message guidelines:```(doc): Add GitHub Flow to the Developer GuideAdd GitHub Flow to the Developer Guide using GitHub Desktop so that the flow is as easy to understand as possible for users that are new to GitHub. Incorporates content from the Conversation Team’s command line GitHub Flow document.Closes watson/transformation-tracker#273DCO 1.1 Signed-off-by: George Champlin-Scharff ```> ProTip: adding closes or fixes in a commit message followed by the org/repo#issue-number will automatically close the issue once the Pull Request has been merged.## Frequently Asked QuestionsQ: Why do I need to have the `DCO 1.1 Signed-off-by` line in my commit message? The project isnt open source.A: Youre correct, right now most of these projects arent open source, but some may be in the future. When you put the line `DCO 1.1 Signed-off-by` in your commit youre making an assertion that you wrote the code. This make it easier for us to track down this information the future.Q: Is there an easier way to remember the commit format?A: Yes! You can [create your own `.gitmessage` template](https://robots.thoughtbot.com/better-commit-messages-with-a-gitmessage-template) that you can populate when you do a commit.# Helpful links[commit-message-format](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#)[angularcontributing](https://github.com/angular/angular/blob/master/CONTRIBUTING.md)[fork](https://help.github.com/articles/fork-a-repo/)[squashing](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages)# CreditsThis document is based off the contributing standards from [Angular](https://github.com/angular/angular/blob/master/CONTRIBUTING.md). We are thankful for their work in setting up good standards and norms of software development.The GitHub Flow image at the top of this page is a modified version of the one from [here](https://desktop.github.com)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/delivering-code-patterns/",
    },
    {
      "title": "PagerDuty Access",
      "text": "---title: PagerDuty Access---## Overview PagerDuty is an incident management platform that provides reliable incident alerting via Slack, email, push, SMS, and phone, as well as automatic escalations, on-call scheduling, and other functionality to help teams detect and fix infrastructure problems quickly.## Requesting a PagerDuty AccountIf you are part of a team that is on an On-Call rotation supporting your service(s) or if you need to create, or otherwise modify PagerDuty alerts you will need to request a PagerDuty account. The steps you must take are detailed at the following link [https://w3.ibm.com/help/#/article/pagerduty/pagerduty_license_request](https://w3.ibm.com/help/#/article/pagerduty/pagerduty_license_request)Once your PagerDuty account has been created you will receive a Welcome to PagerDuty… email with a link to confirm your account and login on the PagerDuty web portal.## PagerDuty Account Basic SetupOnce you have logged in to PagerDuty, navigate to your profile and configure your email and phone numbers and any combination of methods you would like PagerDuty to use to notify you.The choices are:- Voice - PagerDuty will call you and Read/Speak the alert information to - You can respond via the phone key pad- Text Message - PagerDuty sends you a text message for each alert - you can reply back to respond- Email - PagerDuty will send you an email for each alert - There is no respond option with email.- PagerDuty App - You can install the PagerDuty app to your Apple or Android smart phone from the Apple App Store or Android Play store.The PagerDuty App provides the best user experience and broadest level of functionality apart from the PagerDuty Web portal. The app will self-register with the PagerDuty service when you start it and login to it with your PagerDuty credentials. It must be allowed to run in the background on your phone to listen for push notifications.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/pager-duty-access/",
    },
    {
      "title": "How to purchase a YourKit License",
      "text": "---title: How to purchase a YourKit License---To purchase a license for [YourKit](https://www.yourkit.com) process do the following:- Send an email to rfqsw@shi.com asking for a quote for the software. Wait for an email with a questionnaire.- Complete and submit the questionnaire. Wait for the quote for the software indicating the purchase price.- Submit and received approval on an [expense pre-approval request](https://epa.w3bmix.ibm.com) for that amount.- Wait for a separate email from SHI indicating that the quote had been published. The email should include instructions for how to reference the published quote in BoND.- Follow the instructions there to submit a [request to purchase the software in BoND](https://w3-01.ibm.com/procurement/buyondemand/).- After all approvals are received and purchase completed, follow up with SHI to receive the actual license key.- Record the license key somewhere safe (and private)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/yourkit-license/",
    },
    {
      "title": "Secure Engineering",
      "text": "---title: Secure Engineering---Get the basics on Secure Engineering @ IBM by taking the [SECNG100](http://w3.ibm.com/learning/lms/Saba/Web/Main/goto/learningActivity?courseNum=SECNG100) short online course. It is required for all new members of Watson Innovations regardless of role. It is recommended for other Watson Innovations members as well, especially those in a technical or support position. You may need some basic instructions to help with navigating the education site to launch the course.- [Watson Innovations - Secure Engineering & PSIRT Blog](https://w3-connections.ibm.com/blogs/watsonsepsirt/)- [Secure Engineering Requirements](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db/page/Secure%20Engineering%20Requirements)- [Secure Coding Guidelines](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db/page/Secure%20Coding%20Guidelines)- [PSIRT](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db/page/PSIRT) (Product Security Incident Response Team)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/secure-engineering/",
    },
    {
      "title": "GitHub Flow - fork+branch+commit+pull",
      "text": "---title: GitHub Flow - fork+branch+commit+pull---Most teams in Watson follow [GitHub Flow](https://guides.github.com/introduction/flow/) when delivering code. There are a great many sites on the internet that overcomplicate a model that really just has four main steps.Heres how it all works with the command line tools. Theres a [GitHub Desktop](../developer-guide/delivering-code) version of this page. GitHub Desktop automates many of the steps youll find on this page...This document attempts to describe the process used to build and develop software within the Watson Conversation team. It is largely based off [the Gitflow branching and merging strategy](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow) and large portions of this document have been lifted from the [wea-conversational-ui CONTRIBUTING.md document](https://github.ibm.com/watson-engagement-advisor/wea-conversational-ui/blob/develop/CONTRIBUTING.md) (restricted access, apologies).## OverviewWatson Conversation endeavors to ship high quality reliable code frequently. This requires that all of the teams work together and that team members can easily move between different projects. A key mechanism to enable this is a high quality software development process. Our team has chosen a variation of Gitflow for our process.There are numerous writeups out there that make Gitflow more complicated than it needs to be. We recommend checking out the [Gitflow tutorials from GitHub](https://guides.github.com/introduction/flow/) and [Atlassian](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow) for common sense references. We have a couple of modifications that weve adopted to keep our options that we use to keep our code clean that will be discussed in this document.## Development BasicsDevelopment should be set up so project repositories have two long lived branches `master` and `develop`. We should endeavor at all times to have `master` represent code that is, or is currently on its way to, production. `develop` is where all changes except hot-fixes should originate. Over time, as we improve our ability for continuous delivery, the delta between `master` and `develop` will shrink.Teams should use a fork/branch/code/rebase/squash/pull-request process for accepting contributions. In short this process has the following steps:1. Fork: The developer first forks the repository that they wish contribute to by using the GitHub Fork function. This gives each developer their own space they can work in create test branches without polluting the main repository. In most cases this only needs to be done once.2. Branch: Within that fork, the developer creates a branch off the `develop` branch of the code. This helps to keep the changes isolated within that branch of code.3. Code: Fix that bug or build out your great new feature and test it out with unit tests.4. Rebase: It is the responsibility of the developer writing the code to ensure that their code is up to date against the current `develop` branch of the upstream repository. When there are changes to the upstream `develop` branch the developer should run a `git rebase` command to place their changes at the end of the history.5. Squash: In most cases, branches should be squashed down to a single commit using the `git rebase -i` command. There may be exceptions for very large branches, but those are exceptions.6. Pull Request: After rebaseing, squashing, and pushing the code back to your fork, the developer should issue a pull request to have it merged into the `develop` branch of the upstream project.> ProTip: [Install and configure GitHub Desktop](../github/00-getting-started/) before you start...##  Step 1: Fork the RepositoryWe try to keep the main source tree for our projects clean. This means that all developers working on a project should fork a project before beginning work. You can do this by clicking on the fork button in the upper right of the project page.To make things well use the notation of the remote called `origin` to point to your fork and the remote called `upstream` to point to the canonical repository. After youve checked out your fork you can create the `upstream` remote using the following command:  ```bash  git remote add upstream git@github.ibm.com/watson-engagement-advisor/wea-conversational-ui.git  ```You can get the URL by clicking on the Clone or Download ButtonIn most writeups of Gitflow, youll see that creating a branch is optional. If youve contributed to an open source project on GitHub, you likely had to create a branch because you didnt have repository write access. For consistency across all projects and just as a practice of keeping our repositories clean, we recommend that all developers work off their own fork.## Step 2: Create a BranchIn most cases, unless it is a _truly_ trivial change, you should [create or select an issue in wea-backlog](https://github.ibm.com/watson-engagement-advisor/wea-backlog) before starting your work. This helps us to track and manage all of the work going on across the team.Create a new git branch off of `develop`. For clarity across projects, we try to work with a [standard branch naming system](#-branch-naming-scheme) that helps us out when looking at pull requests, if you adhere to it youll get brownie points.  ```bash  git checkout -b fix/ISSUENUMBER-short-description develop  ```## Step 3: Code! Make your changes, including appropriate test cases. Added code should have close to 100% test coverage for statements, branches, functions, and lines. Some projects may use automated mechanisms to prevent commits with sufficient test coverage. Follow the project specific coding rules. These are often found in `CONTRIBUTING.md` Run a full build, including linters, unit tests and coverage reports, using the `gulp` command and verify that all tests pass. Commit your changes using a descriptive commit message that follows our  [commit message conventions](#commit). Adherence to these conventions  is necessary because release notes are automatically generated from these messages.  ```bash  git commit -a  ```  Note: the optional commit `-a` command line option will automatically add and rm edited files.## Step 4: Rebase Your CodeEnsure that your branch is based on the latest from the base repository:  ```bash  git fetch upstream  git rebase upstream/develop  ```  Note: the second command is only necessary if the first command retrieves an update on the `develop` branch.Functionally what this does is it makes it so all of your commits appear sequentially in history in project history, which makes it easier to understand diffs and also to parse out the commit log.## Step 5: Squash Your CodeIf you have made multiple commits, squash your changes into one commit (unless it is important to separate the changes):  ```bash  git rebase -i HEAD~#  ```Note: Replace `#` with the number of commits on the branch. This will enter an interactive mode which will allow you to squash your commits into one. See [squashing][squashing] to learn more.Functionally this operation compresses your set of commits into a single commit, which, unless your doing massive changes to the system, is exactly what you want. If youre doing many changes to the system, consider squashing sets of common changes together to make it easier to understand your commit history.## Step 6: Submit a Pull Request (PR) Push your branch to GitHub:  ```bash  git push -u origin fix/ISSUENUMBER-short-description  ```  Note: the optional `-u` flag enables tracking of your local branch with the new remote branch. In GitHub, send a pull request to the upstream projects `develop` branch, for example, `wea-conversational-ui:develop`. If changes are suggested then:   Make the required updates and commit them.   Re-run the test suite to ensure tests are still passing.   Squash your commits into one and force push to your GitHub repository (this will update your Pull Request):  ```bash  git rebase -i HEAD~#  git push -f  ```  Note: See above or [squashing][squashing] for more information on how to squash interactively. In most cases the person who is merging the code will want to use the `Squash and Merge` setting of GitHub. This avoids creating needless numbers of merge commits in the project history and generally simplifies the development process.## Branch Naming SchemeThe Watson Conversation team tries to adhere to a fairly standard branch namingscheme. This scheme is general in the form of:    BRANCHTYPE/ISSUENUMBER-short-descriptionThe `BRANCHTYPE` can be one of the following, which mirror [the `type` field inour commit message format][commit-format-type-field]. feat: A new feature fix: A bug fix docs: Documentation only changes style: Changes that do not affect the meaning of the code (white-space,  formatting, missing semi-colons, etc) refactor: A code change that neither fixes a bug nor adds a feature perf: A code change that improves performance test: Adding missing tests chore: Changes to the build process or auxiliary tools and libraries such  as documentation generationThe `ISSUENUMBER` should be the issue number from [the DevEnv issuesarchive][devenvissues].The `short-description` should be the general topic of the branch broken upinto a few words and separated by dashes; preferably it is all lower case.Heres a few example of branch names: A fix tied to issue 32 to correct to rotation of `bunyan.log` files:  `fix/32-bunyan-log-rotation` A new feature tied to issue 93 to introduce RVM: `feat/93-add-rvm` A minor documentation change to correct typos in `CONTRIBUTING.md` without an  issue: `docs/contributing-md-typos`Were not super strict on this, but it does help us understand what branches wehave on our local system and, we believe, speeds up overall development.## After your pull request is mergedAfter your pull request is merged, you can safely delete your branch and pull the changesfrom the main (upstream) repository: Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:    ```bash    git push origin --delete my-fix-branch    ``` Check out the `develop` branch:    ```bash    git checkout develop -f    ``` Delete the local branch:    ```bash    git branch -D my-fix-branch    ``` Update your `develop` with the latest upstream version:    ```bash    git pull --ff upstream develop    ```---### Patterns...Most teams use a number of patterns when delivering to GitHub. Check with your Squad to see which of these you use...## Commit Message FormatEach commit message consists of a header, a body and a footer. The header has a special format that includes a type, a scope and a subject:``` bash(): ```The header is mandatory and the scope of the header is optional.The goal of the commit message is to be human readable across a wide variety of devices and interfaces. Any line of the commit message cannot be longer 80 characters and [should preferably wrap at 72characters](http://stackoverflow.com/q/2290016/57626).Where possible try to keep the bulk of the first line of the commit under 50 characters, however we realize this can be hard with the `():` prefix. This allows the message to be easier to read onGitHub as well as in various git tools.We allow a very minimal use of markdown within our commit messages. Primarily this relates to thefollowing elements: Bulleted lists. This should be obvious as the markdown version of such lists is very readable. Bold characters. Using `` or `` around a word for emphasis can helpful, although it should be done sparingly. Monospace characters. When embedded a identifier, such as a variable name, inside of prose, it may be more readable to use backticks ( ` ) around the identifier.## RevertIf the commit reverts a previous commit, it should begin with `revert:`, followed by the header of the reverted commit.In the body it should say: `This reverts commit .`, where the hash is the SHA of the commit being reverted.## TypeMust be one of the following: feat: A new feature fix: A bug fix docs: Documentation only changes style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) refactor: A code change that neither fixes a bug nor adds a feature perf: A code change that improves performance test: Adding missing tests chore: Changes to the build process or auxiliary tools and libraries such as documentation generation## ScopeThe scope could be anything specifying place of the commit change. For example `Training`, `StatusPage`, etc.## SubjectThe subject contains succinct description of the change: Use the present tense (Add server side CSV export vs Added server side CSV export) Use the imperative (Add server side CSV export vs Add CSV export to server) Capitalize the first word in your commit after the (): identifier A title is not a sentence – dont close it with a period Assume that your commit message will be rendered as plain text - dont use markdownWhere possible the subject should be under 50 characters. This isnt a hard and fast rule, but its a general guideline that allows support for as many tools as possible.## BodyJust as in the subject, use the imperative, present tense: change not changed nor changes.The body should include the motivation for the change and contrast this with previous behavior.## FooterThe footer should contain any information about Breaking Changes and is also the place to reference GitHub issues that this commit Closes. If youre working on a larger issue that spans multiplecommits its safe to refer to the issue in the footer, but you may want to squash the history before submitting your pull request.Breaking Changes should start with the word `BREAKING CHANGE:` with a space or two newlines. The rest of the commit message is then used for this.A detailed explanation can be found in the [AngularJS Git Commit Message Conventions][commit-message-format], which we largely inherit.## Developer Certificate of OriginAll contributions to IBM Watson&trade; Offerings must be accompanied by acknowledgment of, and agreement to, the [Developer Certificate of Origin](http://elinux.org/Developer_Certificate_Of_Origin), reproducedbelow. Acknowledgment of and agreement to the Developer Certificate of Origin _must_ be included in the comment section of each contribution and _must_ take the form of:``` bashDCO 1.1 Signed-off-by: {Full Name} ```Contributions without this acknowledgment will be required to add it before being accepted. If a contributor is unable or unwilling to agree to the Developer Certificate of Origin, their contribution will notbe included.```bashDeveloper Certificate of OriginVersion 1.1Copyright (C) 2004, 2006 The Linux Foundation and its contributors.660 York Street, Suite 102,San Francisco, CA 94110 USAEveryone is permitted to copy and distribute verbatim copies of thislicense document, but changing it is not allowed.Developers Certificate of Origin 1.1By making a contribution to this project, I certify that:(a) The contribution was created in whole or in part by me and I    have the right to submit it under the open source license    indicated in the file; or(b) The contribution is based upon previous work that, to the best    of my knowledge, is covered under an appropriate open source    license and I have the right under that license to submit that    work with modifications, whether created in whole or in part    by me, under the same open source license (unless I am    permitted to submit under a different license), as indicated    in the file; or(c) The contribution was provided directly to me by some other    person who certified (a), (b) or (c) and I have not modified    it.(d) I understand and agree that this project and the contribution    are public and that a record of the contribution (including all    personal information I submit with it, including my sign-off) is    maintained indefinitely and may be redistributed consistent with      this project or the open source license(s) involved.```### Example Commit MessageHeres a sample commit message that adheres to our commit message guidelines:```bash(doc): Add GitHub Flow to the Developer GuideAdd GitHub Flow to the Developer Guide using GitHub Desktop so that the flow is as easy to understand as possible for users that are new to GitHub. Incorporates content from the Conversation Team’s commandline GitHub Flow document.Closes watson/transformation-tracker#273DCO 1.1 Signed-off-by: George Champlin-Scharff ```> ProTip: adding closes or fixes in a commit message followed by the org/repo#issue-number will automatically close the issue once the Pull Request has been merged.### Frequently Asked QuestionsQ: Why do I need to have the `DCO 1.1 Signed-off-by` line in my commit message? The project isnt open source.A: Youre correct, right now most of these projects arent open source, but some may be in the future. When you put the line `DCO 1.1 Signed-off-by` in your commit youre making an assertion that you wrote the code. This make it easier for us to track down this information the future.Q: Is there an easier way to remember the commit format?A: Yes! You can [create your own `.gitmessage` template](https://robots.thoughtbot.com/better-commit-messages-with-a-gitmessage-template) that you can populate when you do a commit.## Helpful links- [commit-message-format](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#)- [angularcontributing](https://github.com/angular/angular/blob/master/CONTRIBUTING.md)- [fork](https://help.github.com/articles/fork-a-repo/)- [squashing](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages)## CreditsThis document is based on one created for the Watson Conversation Team by Patrick Wagstrom (who based _that_ document on the contributing standards from [Angular](https://github.com/angular/angular/blob/master/CONTRIBUTING.md)). We are thankful for their work in setting up good standards and norms of software development.The GitHub Flow image at the top of this page is a modified version of the one from [here](https://desktop.github.com)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/delivering-code-command-line/",
    },
    {
      "title": "PagerDuty",
      "text": "---title: PagerDuty---## OverviewPagerDuty is an incident management platform that provides reliable incident alerting via Slack, email, push, SMS, and phone, as well as automatic escalations, on-call scheduling, and other functionality to help teams detect and fix infrastructure problems quickly.A description of PagerDuty can be found here:## PagerDuty accessTo get access to PagerDuty, follow the steps found [here](../../developer-guide/pager-duty-access/)## Slack IntegrationMembers of the IBM Watson Slack Workspace can now set up the updated PagerDuty Integration without help from an Administrator.The updated PagerDuty Integration allows you to acknowledge (and take ownership) of Incidents right from your Slack Channel. This requires a one time linking of your Slack and PagerDuty accounts, just follow the prompts, its super easy.![Slack Integration](https://www.pagerduty.com/wp-content/uploads/integration-guide-assets/Slack-1.png)To set up PagerDuty for Slack, follow the steps found [here](https://www.pagerduty.com/docs/guides/slack-integration-guide/)> ProTip> If you used the old PagerDuty Notification with your Slack Channel, youll need to remove your old configuration after you set up the new one. You can find your previous integration in the list found [here](https://ibm-watson.slack.com/apps/A0F81FMQW-pagerduty-notifications?page=1)## Watson Assistant Team PagerDuty alertsThe Master List of PagerDuty alerts can be referenced [here](https://github.ibm.com/watson-engagement-advisor/wea-support/wiki/Master-list-of-PagerDuty-alerts).Note: Going forward, there may be 2 sets of PagerDuty alerts for Watson Conversation to allow for different policies between Standard and Premium plans.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/pager-duty/",
    },
    {
      "title": "Legal Guidance",
      "text": "---title: Legal Guidance---## IntroductionThere is a wealth of information on [w3 Legal](https://w3-03.ibm.com/ibm/documents/corpdocweb.nsf/ContentDocsByTitle/Legal/) to help you with everything you could need. This page is meant to cover a few things that our Squad members deal with on a regular basis.## Source Code Archival processFor those teams working in GitHub Enterprise, they handle the [45 year archival process](https://w3.ibm.com/help/#/article/github_ent_ibm/github_security?requestedTopicId=github_support). The only thing you need to do to comply with IBMs Source Code Archival process is this: Do not delete repositories that contain code that has been released into IBM Cloud (Public or Private). Thats it.## Open Source- [Participating in Open Source Projects](https://w3.ibm.com/developer/opensource/)## Tools- [Tools you can use for development and testing](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/W3c6a35d8589e_4f9d_8510_fba9f861c0db/page/Tools%20you%20can%20use%20for%20development%20and%20test)## Copyright Statements in Source CodeThe following rules have been approved by Jeff Labaw for Watson to meet IBM copyright requirements under the [C-S 0-6045-002 standard](https://w3-03.ibm.com/standards/esisstds.nsf/0/E5FD60876972962585256999004E8A0C?OpenDocument). Copyright years should be modified as appropriate, guidance is available in the standard.Every  source code file that is not distributed outside of IBM must contain the following copyright statement as a comment at the top of the file:```java/  //                                                                   // IBM Confidential                                                  // OCO Source Materials                                              //                                                                   // (C) Copyright IBM Corp. YYYY, YYYY                                //                                                                   // The source code for this program is not published or otherwise    // divested of its trade secrets, irrespective of what has been      // deposited with the U.S. Copyright Office.                         //                                                                   //  /```Every Java source file that contains a public static void main(String[]) method (i.e. a launch-able Java program) must contain the following copyright statement as a package-visible static final variable:```javastatic final String IBM_COPYRIGHT =\n\nLicensed Materials - Property of IBM\n +(C) Copyright IBM Corp. YYYY, YYYY. All Rights Reserved.\n +US Government Users Restricted Rights - Use, duplication or  +disclosure restricted by GSA ADP Schedule Contract with IBM Corp.\n\n;```[Need details for non-java files to be covered here]Every Java JAR file must contain a copyright file (located at META-INF/COPYRIGHT) that contains the following text:```java Licensed Materials - Property of IBM (C) Copyright IBM Corp. YYYY, YYYY. All Rights Reserved. US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.```[Unclear if other archives need similar]Every source file that is distributed outside of IBM must contain the following copyright statement as close to the top of the file as practically possible (modify comment delimiter as appropriate):```java# ## Licensed Materials - Property of IBM## (C) Copyright IBM Corp. YYYY, YYYY. All Rights Reserved.## US Government Users Restricted Rights - Use, duplication or# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.## ```For cloud offerings a good rule of thumb is if the file is part of anything that makes it into a production deployment it will likely end up being distributed outside of IBM at some point so just treat it that way now. Examples of source files that fall into this category:- Shell or command scripts (.sh, .cmd, etc.)- Text-based resource files (.html, .css, etc.)- Text-based configuration files (web.xml, .properties, etc.)- Interpreted language files (JavaScript, Python, PHP, etc.)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/legal-guidance/",
    },
    {
      "title": "Watson AI Test Manifesto",
      "text": "---title: Watson AI Test Manifesto---## OverviewThe goal of testing is to find and eliminate problems when theyre at their cheapest to fix, to understand the quality of a system, and to help inform ship-readiness.The cheapest way to deal with bugs is to prevent them from being introduced in the first place. The most expensive way is to fix them after customers find them. We prefer the former, rather than the latter.The level of investment in testing should be driven by risk-tolerance. Investments in test _automation_ should be driven by willingness to spend time on something other than adding more features in the short-term in order to save time and increase team productivity/morale in the medium/long-term. While finding that balance is left to you and your Team, you should use established patterns to help guide you. As a picture is worth a thousand words, the Agile Test Pyramid from [Agile Testing: A Practical Guide for Testers and Agile Teams](https://www.safaribooksonline.com/library/view/agile-testing-a/9780321616944/) by Lisa Crispin & Janet Gregory, is the perfect place to start.Beyond traditional testing - we must also invest in the observability of our services [in production](https://www.youtube.com/watch?v=XBDfsiKDpFo) to have a more complete view of quality, enable effective monitoring and expedient problem determination, though thats largely beyond the scope of what will be covered here.### Minimum Requirement for Watson ServicesThe biggest overall requirement is that the Development Team can communicate to their Offering Manager a current view of the quality of whats being delivered, a confidence level in their assessment and the costs associated with increasing/decreasing risk so the business can make informed priority/investment decisions.  Your tests can act like a contract to help prove youve built the right thing, and that it works as expected.Teams must:- Have at least a set of _automated tests_ that are run as part of your [Continuous Integration](#continuous-integration) automation to validate builds and another set that runs as part of your [Continuous Delivery](#deployment-verification-tests) automation to validate deployments. If those dont give you enough coverage/confidence to ship your code, supplement with manual testing _as needed_ and endeavor to reduce or eliminate manual testing _as soon as is practical_.  - At least for builds that go to production, have documentation that those tests passed acceptably.---## Details### Summary:| Testing phase                                                        | How Tests Get Run                                                                                                                                                                  | Which Tests                                                                                                                                                                                                                                                                                  | Duration (rough guideline)                                                     ||:---------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------|| Before delivering code                                               | On developer systems as theyre developing code• Command-line (e.g. Gradle)• Editor/IDE                                                                                    | • [Unit tests](#unit-tests) associated with the code change (at least)• Other tests opportunistically/as needed                                                                                                                                                                          | (seconds), or a few minutes at most                                            || Build Verification Test ([BVT](#build-verification-tests))           | Continuous Integration automation (Ghenkins runs them locally from a worker ([pickle](https://github.ibm.com/ghenkins-project/documentation/wiki/Ghenkins-Infrastructure#pickles)) | • All [unit tests](#unit-tests) for the component being built (at least)• Other tests that dont have dependencies outside the build environment and dont unduly delay the CI build                                                                                                     | (a few minutes), ideally < ~ 30 mins, balance coverage / CI velocity as needed || Deployment Verification Test ([DVT](#deployment-verification-tests)) | Continuous Delivery automation (e.g. Hyboria DVT library runs tests remotely as a Kubernetes job)                                                                                  | • Tests of any sort (functional, integration, performance, resiliency/chaos, etc.) that require the service to be deployed into an environment• Tests that have other external dependencies that preclude them from running as part of BVT                                               | (90 mins) balance coverage / CD velocity as needed                             || Manual testing                                                       | _manually_: ad-hoc or by following defined scripts/plans                                                                                                                           | • Whatever tests arent automated• Those needed to validate production readiness for teams not yet ready for true [continuous delivery](https://en.wikipedia.org/wiki/Continuous_delivery) or those run outside the release cycle • UX Testing, Exploratory Testing, Test-fests, etc. | Varies                                                                         || Testing in production                                              | • Canary/Blue-Green deployments• Monitoring• Feature-flags• A/B Testing• Soak Tests                                                                                  | Based upon real customer traffic                                                                                                                                                                                                                                                             | Ongoing                                                                        |If youre looking for more details on ways to do this, see the rest of this document, ask in IBM Watson Slack #core-testops or #test-guild (general testing), #ghenkins (CI related testing), or #continuous-delivery (CD/DVT related testing)### Layers of defense against bugsFrom _most_ to _least_ long-term effectiveness:1. Team having the right skillset / experience, amount of sleep2. Clear requirements / design3. Bugs found before theyre checked-in to source control    1. Fast, easy-to-use test suite(s) developers can run ([see below](#fast-easy-to-use-test-suites-devs-can-run))    2. Test-driven development ([TDD](#test-driven-development))    3. Static code analysis tools ([see below](#static-code-analysis-tools))    4. Pair programming on _complex_ changes4. Automated build verification tests ([BVT](#build-verification-tests))5. Automated deployment verification tests ([DVT](#deployment-verification-tests))6. Code reviews7. Testing in production: invest in observability, monitoring, etc.8. Continuous Integration ([CI](#continuous-integration))9. Exploratory / manual testing / test fests (possibly high short-term ROI, more useful for extended releases, may waste considerable time med/long-term)#### Fast, easy-to-use test suite(s) devs can run Fast + easy = gets run often Easy to run _and_ easy to interpret results Could be _just_ the same tests as those in the Build Verification ([BVT](#build-verification-tests)) suite Could _also_ have other quick/targeted/granular tests and run the BVT ones right before youre otherwise ready to deliver code to SCM Provides some of the confidence needed to [refactor](https://en.wikipedia.org/wiki/Code_refactoring) code as warranted#### Test-Driven Development Write the tests for a method/class/feature _before_ you implement it and add more as you go. Keep coding until the tests pass and then [refactor](https://en.wikipedia.org/wiki/Code_refactoring) as needed. See [Wikipedia](https://en.wikipedia.org/wiki/Test-driven_development) for more info#### Static Code Analysis tools Tools that automatically scan source code to detect patterns historically associated with problems, e.g. `if x=3` instead of `if x==3` High ROI, if you invest up-front in tuning the signal-to-noise ratio / verbosity. Its easy to think the more the better, since obscure checks might find _something_, but with checks for obscure or not obviously problematic patterns, its easy to have too much of a marginally good thing. Dont spend time checking for things youre not committed to fixing right away. Choose anything from enabling warnings in an IDE to linters to more powerful things like [FindBugs](http://findbugs.sourceforge.net/) to heavyweight stuff like [SONAR](https://www.sonarqube.org/). Have developers run quick checks, have slower tests run as part of a CI build, in parallel with build/[BVT](#build-verification-tests).#### Code reviews A second set of knowledgeable eyes for each commit. More formal walkthroughs as needed for complex changes For more info see the [Code review page](https://pages.github.ibm.com/the-playbook/github/10-code-reviews/index.html) in The Playbook#### Test Guidelines, in general The more frequently they can be run, the easier it will be to correlate a problem with the code change that caused it, and the higher your return will be on the time it took to write it.    Generally speaking, we should be running nearly all our tests against every code change committed to SCM, unless theres some particular reason why some tests are problematic.	 Tests that take a relatively long time to run usually dont need to be relegated to some nightly / daily / weekly suite.         	 There are a variety of ways to exploit parallel test execution, both in Jenkins, and in various test runners.  If youre not sure how, ask in #ghenkins for BVTs or #continuous-deployment for DVT or #test-guild.         If despite parallelization, a particular test takes longer to run than youre willing to have your CI/CD job wait, there are other techniques to have them run more frequently than daily by balancing hardware usage, which commits get tested, and your desired feedback latency. The more granular your test cases are, the less time is usually needed to understand the real problem when one fails.  That said, if you deliver a granular new test and the code coverage doesnt change, there may be an existing test thats overly broad, or your test provides useful new info in case of a failure, or the new test may be truly redundant. Aptly named tests often dont require additional documentation.  A test that has a number in its name e.g. test12, has a code smell. If the name isnt enough, the test should have whatever additional documentation in its source so that the original test author isnt needed to debug a failure Remediate or cull flaky/intermittently failing tests, that cry wolf, or folks will get used to a world where tests often fail, which is particularly problematic if it undermines the CI/CD process.  If a developer gets a notification that a CI build has failing tests after their code delivery, theyre less likely to investigate if there were failing tests before the delivery.  If they do investigate (as they should!) - flaky tests make the job harder. Tests should have communal ownership, anyone should be able to _easily_ add/edit/delete from these, following whatever review process the team wants. Little friction to add tests correlates with more tests which is _usually_ good. Tests shouldnt always require all the dependencies available in a production environment - see [test types](#test-types) for more info Store the tests in the same SCM repo as the code that it tests, to make it easy to deliver code/tests together, and to make tests easy-to-find Tests that write to stdout/stderr even when they pass often make it harder to find real problems when they exist, particularly when being run as part of a large suite. When a test knows its failing, writing diagnostic info about the state of the test, or the system its testing, to stderr or a log file that gives insight into the root cause, can often make debugging much easier Bugs not found by the failure of an existing test should get a new test case by the time a fix is delivered If youve inherited or otherwise found yourself with a codebase that has far too few tests and youre not ready to take on a large effort to completely fix that, resolve at least to add tests for all new / changed code. Abstract away / parameterize deployment environment differences (Public/Private/Premium etc.) to make code/tests easily portable without overly complex customizations needed to deploy/run/interpret them. There are lots of test frameworks/tools to help you write/run tests, see [Common Test Frameworks/Runners](#snapshot-of-common-test-frameworksrunners)#### Build Verification Tests Runs automatically as part of [CI](#continuous-integration) in [Ghenkins](https://github.ibm.com/ghenkins-project/documentation/wiki/What-is-Ghenkins), or manually run by anyone on the team Balances speed with thoroughness as appropriate for its place on the critical path for code deliveries As with the build portion of a CI job, these _must always pass_ - when they dont _drop everything until theyre fixed._#### Deployment Verification Tests Hooked into your CI/CD deployment automation so tests can be run automatically as new code is deployed Results can help drive automated rollbacks or promotions of deployments to downstream environments. Having tests run inside containers in the same environment in which the service is deployed enables some sorts of tests that need access to APIs/file systems/logs that arent exposed to end-users, and makes it easy to coordinate their execution with deployments. In general, endeavor to have tests that exercise the product in a way that is as similar as is practical to how customers would do so, but you dont need to be verifying things like the connectivity of the cluster to the Internet. If youre _really_ doing Continuous Deployment, or Continuous Delivery feeding frequent albeit manually approved deployments to production, its particularly important to monitor the duration of your DVT tests, and exploit parallelism and flaky test culling as with [BVT](#build-verification-tests). Weve written and integrated a DVT helper library into Hyboria, to make it easy to have your tests (of any sort) run remotely, and feed their results to Jenkins plugins for analysis. For more info see the [DVT page](https://pages.github.ibm.com/the-playbook/developer-guide/deployment-verification-testing/) in The Playbook#### Continuous IntegrationTwo basic meanings, both are important:1. Developers should commit code to SCM daily, dont have branches diverge too long and hope a miracle occurs and everything works together when its all integrated big bang style right before you want to release.2. An orchestration system, e.g. Jenkins/[Ghenkins](https://github.ibm.com/ghenkins-project/documentation/wiki/What-is-Ghenkins), that can automatically detect code-checkins, build the changes, run build verification tests against the changes, and report results. Tuned for fast, concise, actionable feedback##### CI Notes: The CI build of a shared branch must _always_ pass. Delivering code that doesnt compile can be the beginning of a Bad Snowball. People will tend to ignore failure notifications if its always failing, and the number of failures will grow. Automate rejecting code that fails to compile if this becomes an ongoing problem. Leverage CI/SCM integration to send CI results from pull requests / pre-merged code builds/BVT into code reviews, as an automated code reviewer. If your code has dependencies on code outside your SCM repo, and youre interested in knowing if they make changes that would break you, add a line to _their_ CI job to call your CI job. Leverage Jenkins plugins that can make interpreting results easier than whats provided by your testing tool/framework. They may be able to tell you with which previous build a test started failing, make it easy to navigate large numbers of results, make it easy to sort tests by their duration to find opportunities to speed up the build, associate log snippets with particular tests, etc. Leverage Slack and/or Email plugins to deliver confirmation of success, or _actionable_, succinct failure reports to the people who need to respond, with as much info as is practical/helpful on whats needed.#### Code coverage There are generally good tools for measuring code coverage of [Unit Tests](#unit-tests) e.g [Jacoco](http://www.eclemma.org/jacoco/) Its harder to automatically measure functional/integration/[DVT](#deployment-verification-tests) tests of deployed systems, though it may be possible. More coverage may help _to a point_, after which the ROI approaches zero. e.g. `x=3; ... assert(x==3)` wastes time. The build-to-build change in code coverage may be more useful to track than any absolute number. If coverage goes _down_ as part of a code delivery - it may not be a problem, but its usually worth investigating. Good for finding areas devoid of tests, or to guide investment in new tests, not good at proving areas with demonstrable coverage have _effective_ coverage.#### Test TypesThere are lots of different test taxonomies. Its most helpful to refer them in three buckets, based upon _when_ they get run - the aforementioned [BVT](#build-verification-tests), [DVT](#deployment-verification-tests) and ad hoc/manual tests.Each of those buckets may have different kinds of tests and we need not get overly dogmatic about what goes in each, as long as the constraints around duration and resources required to run those buckets are respected. That said a few kinds of tests are worth calling out:##### Unit tests The most granular kind of test, shows how a small piece of code (method/class/etc.) works in isolation. Most of our tests should be these. These should probably be part of the  [Fast, easy-to-use test suite devs can run](#fast-easy-to-use-test-suites-devs-can-run) and the CI [BVT](#build-verification-tests), though the [BVT](#build-verification-tests) may have other sorts of fast, high-ROI tests, too. Generally written by developers while/before ([TDD](#test-driven-development)) code is developed Run in isolation: shouldnt require any external resources like other services, databases, etc. Those dependencies can be replaced with test doubles like [mock objects](https://en.wikipedia.org/wiki/Mock_object)##### Regression tests Generally used to describe a test that finds problems that didnt exist in the previous run. That describes most tests, so this isnt a very useful distinction, only mentioning it here because its commonly heard.##### Integration tests / End-to-end tests Testing the interaction of different subsystems Generally, but not always done as part of [DVT](#deployment-verification-tests) Good at catching lots of potential problems, bad at identifying the root cause of the problem Have far more unit tests than these, though if you have _no automated tests of any sort_ adding few of these can temporarily be very valuable.##### Performance / Scalability tests See [Performance Manifesto](https://github.ibm.com/watson-perfworks/PerformanceManifesto/blob/master/PerformanceManifesto.md)##### GUI Tests Tests that run in a browser using frameworks like [Selenium](https://www.seleniumhq.org/) that drive your GUI the way a user would can catch bugs automatically that would otherwise be hard to catch, but theyre also brittle. Minor changes to the service may break tests cases in ways that require substantial work to fix. If you do invest in GUI automation, generally do so to a much smaller degree than you do for [unit tests](#unit-tests) Tools like [Karma](https://karma-runner.github.io/2.0/index.html) and/or [Jasmine](https://jasmine.github.io/) may operate at a lower-level and be more practical, depending on your use case In an extended release cycle, invest when there is more stability, and choose user interfaces that you believe have a higher usage and long(er) shelf lives.##### Other Interesting Sorts of Tests (for more info, ask in slack or see The Internet) Contract tests Behavior-Driven Development: Particularly valuable if you get OM / proxies for end-users to participate in acceptance testing. Internationalization (i18n) Usability Exploratory Resiliency / Chaos#### Test Metrics The number of customer-found defects is negatively correlated with your testing effectiveness, though is also affected by things like the size of the customer base. It requires some effort to track, unless theyre all coming through some system e.g. APARs which does that for you. You can also come at this from another direction, by tracking the defects that are caught by tests. This will have an ongoing cost, e.g. a TESTFOUND label for defects, and getting groups of people to remember to consistently do a manual step in any workflow can be problematic. There may be ways to have your automation automatically create defect records for new failures. Obviously, this wont show potential defects that tests found before the code was delivered, which is where much of their value lies. It likely worthwhile to track at least one of the two above metrics. If there is any concern that your CI/CD automation is suffering due to the time testing adds, some metrics Jenkins makes easy-to-get:	 Duration of testing Stages	 Sum of the execution time for tests (provided by things like the JUnit plugin)	 Top N tests by duration	 Those last two together can inform opportunities to break apart / parallelize test suites If theres a problem of failures not being addressed quickly enough, there are Jenkins plugins that make it relatively easy to track	 number of failing tests	 average time to repair Simple metrics that Jenkins plugins may provide automatically, such as with which build a given test failure first appeared, may expedite problem determination#### Snapshot of Common Test Frameworks/Runners... that our teams are _already using_ in CI/Ghenkins Java: [JUnit](https://junit.org/), [TestNG](http://testng.org/), runners: [Gradle](https://gradle.org/), [Maven](https://maven.apache.org/) Scala: [Scalatest](http://www.scalatest.org/), [Scalatra](http://scalatra.org/guides/2.3/testing/scalatest.html) Golang: [Testify](https://github.com/stretchr/testify) Python: [Nose](http://nose.readthedocs.io/en/latest/testing.html), [pytest](https://docs.pytest.org/en/latest/) Javascript: [Karma](http://rspec.info/), [Mocha](https://mochajs.org/) AngularJS: [Protractor](https://www.protractortest.org/#/) REST / HTTP API testing: [RestAssured](https://github.com/rest-assured/rest-assured) [Postman/Newman](https://www.getpostman.com/) GUI: [Selenium](https://www.seleniumhq.org/), [saucelabs](https://saucelabs.com/), [pyresttest](https://github.com/svanoort/pyresttest)(python) Performance: [JMeter](https://jmeter.apache.org/), [Locust](https://locust.io/) and see also the Watson [Performance Manifesto](https://github.ibm.com/watson-perfworks/PerformanceManifesto/blob/master/PerformanceManifesto.md) [Behavior-Driven Development](https://en.wikipedia.org/wiki/Behavior-driven_development): [Cucumber](https://cucumber.io/), [RSpec](http://rspec.info/) (Ruby), [Jasmine](https://jasmine.github.io/) (JS), [Behave](https://github.com/behave/behave) (Python), [Capybara](https://github.com/teamcapybara/capybara) Shell: [TAP](http://testanything.org/) e.g. [BATS](https://github.com/sstephenson/bats)For CI jobs in Ghenkins that run automated tests, we looked to see which teams are using which test frameworks/runners. This info will give you a sense of which are popular, and to whom you might be able to reach out to get more info, or to leverage their tests as a guide._Actual usage in Ghenkins_, (In decreasing order of popularity) `Junit, cucumber, testNG, jmeter, scalatest, selenium, locust, protractor, rspec, karma, behave, mocha, nose, jasmine, rest assured, pytest, testify, capybara, scalatra-test, newman, postman, saucelabs, pyresttest` [details here](ghenkins_frameworks.md)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/test-manifesto/",
    },
    {
      "title": "OSS",
      "text": "---title: OSS---Operational Support Systems (OSS) mission is to ensure that all Watson and Cloud platform services adopt the OSS platform to provide a consistent experience for our customers by utilizing a common integrated Service Management toolset.  The OSS scope includes defining technology, workflows and tooling for the various modules that comprise of a Service Management platform. The modules are [Case Management](#case-management), [Incident Management](#incident-management), [Problem Management](#problem-management), and [Change Management](#change-management).## Case managementAll services are required to use the application ServiceNow as the case management tool. The Bluemix console will be updated to invoke ServiceNow APIs to get tickets created in the ServiceNow repository. The global support team will work case tickets in ServiceNow and if they need additional assistance, support will initiate a sync to GitHub to engage development/L3. This is a bi-directional sync.## Incident ManagementServiceNow is the platform to be used for Incident Management. ServiceNow will have integrations in place with the Event Management System (Netcool) critical for managing incidents. With the integration between Netcool and ServiceNow, incident records will be automatically created for correlated events in Netcool.Any actions taken by the TOC/GRE/SRE/Tribes will have to be recorded in the incident record. ServiceNow will also be integrated with PagerDuty so that escalations or notifications can occur from the incident record.## Problem ManagementProblem management workflow resides in ServiceNow. Upon closure of an incident, a problem record will be created and assigned to the service / [Root Cause Analysis](https://en.m.wikipedia.org.wiki/Root_cause_analysis) (RCA) owner. The RCA owner will perform the RCA (coordinated by an Availibility Manager (aka AVM)). Problem tasks (action items) are listed as part of the problem record. See the [RCA Policy](https://ibm.box.com/s/lv8h6ks1c58d86g48qelfxxee6pkxzg4) and [RCA Process and Guidance](https://ibm.box.com/s/m7y1xrohb6mzlsro7gysqu9dbepc494z) for more details. These tasks are sync’d up with GitHub so that developers can take action (without having to get a ServiceNow license).## Change ManagementRTC or ServiceNow are the only platforms to be used for Change Management. Change Requests created in either of these tools will be displayed on the Global Change Calendar that is accessed through ServiceNow. ServiceNow gets the RTC Change Calendar information by way of BlueMix Doctor and inherently from ServiceNow. The Change Calendars from both tools are then aggregated to the ServiceNow Global Change Calendar.  See [Change Management Details](../../developer-guide/operational-support-systems/Change-Management-Details) for more information.## OSS Core ServicesOSS provides the following core services: The [Technical Integration Point (TIP)](https://github.ibm.com/cloud-sre/world-of-tip/blob/master/README.md) is the integration point that specifies the interface that allows your services to interact with the OSS Platform. [ServiceNow](../../developer-guide/operational-support-systems/ServiceNow) is the integrated IT service management tool for Watson and Cloud Platform. The [Technical Operations Center (TOC)](../../developer-guide/operational-support-systems/Technical-Operations-Center) provides incident, problem, and availability management for Watson and Cloud Platform.## OSS OnboardingTo take advantage of the OSS services, your service must complete OSS onboarding.  The key activities are Enroll your service in [ServiceNow](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W72236921778c_44ea_b5ac_6d8bad99ac4e/page/Enrolling%20A%20Service%20for%20Ticket%20Management). The [cheat sheet for enrolling services](https://ibm.ent.box.com/notes/244045701906?s=rellzkqseom4i63tyzki5w2ci50aumcd) may be helpful. Integrate your service with the [Technical Integration Point (TIP)](https://github.ibm.com/cloud-sre/world-of-tip/blob/master/README.md) to send alert data from your service monitoring to ServiceNow and the TOC. Review the [Service Framework](https://pages.github.ibm.com/ibmcloud/Service-Framework/) and adhere to the [Transitions in Production](https://pages.github.ibm.com/ibmcloud/Service-Framework/30_productionchanges.html) requirements.     The Service Framwork requires your service is TOC enabled.  See [onboarding to the TOC](../../developer-guide/operational-support-systems/TOC-Onboarding) for more details. To assist in monitoring your service you can leverage New Relic.  See [New Relic User Guide](https://pages.github.ibm.com/newrelic/newrelic-guide/) for details. If you are using Prometheus, collectd, fluentd or Graphite to collect metrics, your metrics could also be consolidated to New Relic for alerting and dashboarding. Here is the [metric integration architecture](https://pages.github.ibm.com/newrelic/newrelic-guide/integration/Metricss-integration-5.5.html)## Service ContractIBM Watson and Cloud Platform is prioritizing stability and reliability within its Service catalog. To assist Services inthe journey of improving availability, the Service Engineering Foundation has been created to provide a roadmap ofincreasing maturity for Services to follow.  See Service Engineering Foundation [Service Contract](https://pages.github.ibm.com/CloudEngineering/service_contract/) for more details## EU CloudThe OSS team is committed to supporting IBMs European Cloud initiatives as discussed in the recent [EU Cloud Announcement](https://www.ibm.com/blogs/cloud-computing/2017/11/ibm-cloud-europe-control-data/).  In this announcement it was outlined that clients will have the ability to review and approve all non-EU access requests to their content if an instance requires support or access from a non-EU based employee.  Details of the EU exception are outlined in the [EU Exception Process Requirements](../../developer-guide/operational-support-systems/EU-Cloud-Exception-Process-Requirements)## ELKELK is the OSS implementation of ELK (Elasticsearch, Logstash, and Kibana).  In real-time ELK is loaded with all alert data processed through the OSS Netcool instance to ServiceNow.  The instance is open to tribes so they can see both real-time and historical alert data processed by OSS.  The link below is the OSS Git repository where you can learn more about ELK, ask questions or raise an issue.[The ELK Project](https://github.ibm.com/sosat/elk-help)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/operational-support-systems/",
    },
    {
      "title": "EU Cloud Exception Process",
      "text": "---title: EU Cloud Exception Process---# EU Cloud – Base Requirement EU Cloud requires that for operational / deployment purposes, access to EU client owned data and systems that host or process that data must be restricted to EU employees only. If non-EU employees need access to EU client owned data or systems hosting / processing this data a service must implement & utilize the ‘EU Exception process’. See Definition of customer owned data in the [EU Cloud Reference Material](https://ibm.box.com/s/kr2qmibq28tsw3e4gfj36t57uvf2kdlx) This requirement for EU Cloud and the exception process, spans all potential access points to EU customer owned data – i.e. Incidents, Changes, Tooling, etc. The EU Cloud requirement is defined as the set of in-scope services hosted in Frankfurt, Germany (Public & Dedicated) The use of EU Cloud Exception process must be transparent and demonstrable to clients that it is utilised only on an exceptional basis and does not become BAU operating practice. The baseline requirement for the upper limit of it’s use (e.g. used in x% of total operational activity), is presently being agreed with EU Offering Mgt. Utilisation of the Exception process is a mandatory requirement for EU Cloud, unless a service does not identify a case for non-EU based support.# EU Exception Process Details## Security & Access Management For EU Cloud & it’s exception process, adopting security & access standards are required to facilitate the requirement for centralized EU based access approval. USAM is agreed as the single entry point for EU Exception process management. The Exception process is dependent on each service having enabled the security configuration to differentiate the access rights needed for EU Cloud (where it has access to customer data); providing differentiation/fencing between EU and non-EU groups. The USAM group owner for a service, has to be EU based for those groups that relate to access against EU Cloud in Frankfurt. Prerequisites required to be followed by service teams and additional guidance on setting up USAM groups can be viewed in the [EU Cloud guidance for Tribes](https://ibm.box.com/s/wcih5d9nufxwenpzifb2lzwas8xhuiwx)## EU Exception Process Ownership is held by W&CP Operations, aligned to existing process ownership for Incident & Change. The process is enabled by centralised EU approvers (currently under establishment in Dublin), providing 24 x 7 coverage and utilising USAM to temporarily approve EU Cloud access for non-EU engineers when justified. The EU Exception process will facilitate the additional step for explicit client approval, that is a requirement for EU Cloud dedicated scope. Automation will be in place to orchestrate approvals depending on the EU Cloud scope - public versus dedicated.High-level steps involved in getting a non-EU user access to EU Cloud:EU Public: Identified non-EU user will raise a request in the USAM system against the service specific EU_EMERG group. Appropriate justification is provided in this USAM request(id: url: type: text: severity: ) Doctor tool picks this request automatically and routes the request to an EU exception approver EU exception approver reviews and acts on the request (approve/reject) Once privileged access is approved in USAM, Active Directory automation is triggered to record changes in LDAP, after which the non-EU user credentials will work to access the specific assets tied to the EU_EMERG USAM group.EU Dedicated: Identified non-EU user will raise a request in the USAM system against the service specific EU_EMERG group. Appropriate justification is provided in this USAM request(id: url: type: text: severity: ) Doctor tool picks this request automatically and routes the request to an EU exception approver EU exception approver reviews and acts on the request (approve/reject) If EU exception approver approves, Doctor then routes the request to client via the IBM Cloud console seeking their approval, depending on the EU access policy selected for their account Client approves or rejects the request. If approved, approval is recorded for audit purposes and Active Directory automation is triggered. If rejected, the rejection is recorded for audit purposes and the USAM request is rejected as well. Detailed demo of how the EU Exception process works has been recorded and available in the [EU Cloud repository](https://ibm.box.com/s/6uy0ce3ko3iqn9jvw78khp8e2qs0c1dt) Additional reference material is also available - [EU Cloud incident management flow](https://ibm.box.com/s/m14dd0nf9ms2vqtmmkv3nz980y3ypaub) and [EU Cloud change management flow](https://ibm.box.com/s/i1ezgokilcr5hcvrpu2tm2l30sniuzvm)[Operational Support Systems Home](../../../developer-guide/operational-support-systems)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/operational-support-systems/EU-Cloud-Exception-Process-Requirements/",
    },
    {
      "title": "TOC Onboarding",
      "text": "---title: TOC Onboarding---## How do I onboard my service to the TOC?Any tribe that wants to utilize [TOC services](../../../developer-guide/operational-support-systems/Technical-Operations-Center#what-are-the-services-available-from-toc) must TOC enable their service. Services become TOC enabled when they complete onboarding to the TOC:1. Enroll your service in [ServiceNow](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W72236921778c_44ea_b5ac_6d8bad99ac4e/page/Enrolling%20A%20Service%20for%20Ticket%20Management). The [cheat sheet for enrolling services](https://ibm.ent.box.com/notes/244045701906?s=rellzkqseom4i63tyzki5w2ci50aumcd) may be helpful.1. Integrate your service with [TIP](https://github.ibm.com/cloud-sre/world-of-tip/blob/master/README.md) to send alert data from your service monitoring to ServiceNow and the TOC.     See [TIP integration considerations](../../../developer-guide/operational-support-systems/TOC-Onboarding#tip-integration-considerations-for-toc) to understand what data values determine whether your alert flows to the TOC for processing.1. Complete the [Service Contract](https://pages.github.ibm.com/CloudEngineering/service_contract/) Production Readiness Criteria (PRC)      PRC includes and requires your service is TOC enabled      TOC enablement consists of [AVM enablement](../../../developer-guide/operational-support-systems/TOC-Onboarding#what-is-required-for-avm-enablement) and [Runbook enablement](../../../developer-guide/operational-support-systems/TOC-Onboarding#what-is-required-for-runbook-enablement)      TOC enablement is tracked for each service in the [scorecard](https://pages.github.ibm.com/cloud-sre/ToolsPlatform/scorecard-docs/scorecard_overview/)      [Click here](https://github.ibm.com/global-toc/TOC-Cloud-Onboarding/issues/new) to start the onboarding process. Include the name of your service as listed in [doctor scorecard](https://doctor.bluemix.net/\#/scorecard) and a contact to help complete the required enablement activities      If you have questions or need help, visit us in the [#toc-global](https://ibm-cloudplatform.slack.com/messages/C4BJ6N6SV) channel in the Watson Cloud Platform slack workspace.## What is required for AVM enablement?### Pre-requisites: Completed ServiceNow enrollment### Process: Service team completes a one-page enablement document, including a brief description of the service, key dependencies, slack channels, and key contacts AVM team reviews the service team’s ServiceNow enrollment and AVM enablement document AVM and service teams complete a “Mock CIE” (end-to-end test) AVM team assigns the service team an RCA coach AVM team provides Incident Management and Problem Management training### Completion: Accepted AVM enablement document TOC update of AVM enablement service status in doctor scorecardNote: If a service uses ServiceNow for Incident Management, TOC AVMs will be engaged for a CIE regardless of the AVM enablement status.## What is required for Runbook enablement?### Pre-requisites: Completed ServiceNow enrollment### Process:  Service team completes a one-page enablement document, including      Brief description of alert handling, key dependencies, slack channels, and key contacts     List of runbooks to delegate to the TOC engineers.  This may be none, some, or all of a service’s runbooks. TOC team reviews service team’s ServiceNow enrollment and runbook enablement document For delegated runbooks, TOC and service teams establish plan that includes     Runbook review/revision.  TOC team provides comments and service team makes mutually agreed to changes.  See the [TOC Runbook Requirements](https://apps.na.collabserv.com/wikis/home?lang=en-us#!/wiki/W856c27876ff7_4ca0_889b_a3e778df0231/page/TOC%20Runbooks) for reference.     Service-specific enablement.  TOC team completes service-provided access requests and training.     Alert flow configuration.  Service team delegates agreed to alerts to TOC.### Completion: Accepted runbook enablement document Accepted plan for any delegated runbooks (optional) TOC update of runbook enablement service status in doctor scorecard## TIP Integration Considerations for TOCYour service may use a common service like Bluemixs Marmot or a webhook to New Relic to facilitate integration with TIP.  Or your service may code directly to TIP using the [TIP API documentation](https://github.ibm.com/cloud-sre/tip-api). Both ways work to complete integration with the TIP and to send alert data from your service monitoring solution to ServiceNow and the TOC. Services submit their alert message using a common message format called a concern.  Assuming your service is [TOC enabled](../../../developer-guide/operational-support-systems/TOC-Onboarding#how-do-i-onboard-my-service-to-the-toc), the values of the following fields determine whether or not your alert flows to the TOC for handling: _console_ - toc indicates the alert may be processed by the TOC based on the value of other TIP concern fields _runbook&#95;url_ - URL to a UI that will show the runbook for this alert _runbook&#95;toc&#95;enabled_ - true indicates the specified runbook will be handled by TOC as a first responderThe values of the following fields enable functionality of the TOC console: _alert&#95;ui&#95;url_ - a URL to a UI that will show this alert [Operational Support Systems Home](../../../developer-guide/operational-support-systems)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/operational-support-systems/TOC-Onboarding/",
    },
    {
      "title": "Technical Operations Center",
      "text": "---title: Technical Operations Center---## What is TOC?The Technical Operations Center (TOC) is an org within the Cloud CTO office. The mission of the TOC is to provide: Best in class Incident Management Availability and problem management with a focus on reducing MTTR (Mean Time to Recover) Continuity of services along with a clear internal communications channel for all Cloud offeringsThe TOC has engineers and Availability Managers 247 to provide: Timely alert and incident resolution Data capture Communications with the goal of improving short and longer term availability.## What are the services available from TOC? 247 Alert monitoring     Periodic Alert analytics providing insight into inconsistencies and false positives Runbook Execution (if TOC is enabled) 247 Availability Management driving incidents (CIEs) to closure     Tiered internal Communications providing messaging clarity to execs and dependent offerings     RCA co-ordination Triage outage escalations to Cloud from internal teams## TOC Services - 247 Alert Monitoring### Value: TOC can address any of your alerts that tribes are being paged out for today. This saves valuable developer/devOps time. Trained staff monitoring alerts via the shared console with 247 coverage. Monitor for alert action. Act if action not taken. Engage Availability Managers during incidents and assist in incident resolution and cross coordination with other services during major outages. Periodic alert analytics are performed. At a service/offering family level, deeper insights on alerts to highlight inconsistencies, repeat alerts, false positives etc to enable service teams to reduce noise and get to true actionable alerts. Know offering dependencies in cloud (dependency tree buildup is WIP). This will enable notification to services if a dependency is down and save developer time.### What is needed from services? Integrate your service with [Technical Integration Point (TIP)](https://github.ibm.com/cloud-sre/world-of-tip/blob/master/README.md) to send alert data from your service monitoring to ServiceNow and the TOC. Complete [onboarding to the TOC](../../../developer-guide/operational-support-systems/TOC-Onboarding#how-do-i-onboard-my-service-to-the-toc) so my service is considered TOC enabled as required by the [Service Framework](https://pages.github.ibm.com/ibmcloud/Service-Framework/).## TOC Services - Runbook Execution### Value: Services identify alerts for which TOC engineers are enabled to be first responder 247. This saves valuable developer/DevOps time. If tribes/services would like TOC to take action on clearing alerts, runbooks are required to be provided to the TOC. Services can start with enabling the TOC with clearing basic alerts and can add alerts that require deeper system level access over time, thus increasing the alert addressing rate by TOC and freeing up more of your DevOps time. Can offload DevOps members from performing routine daily operations, where automation is not available/possible.### What is needed from services? Complete [runbook enablement](../../../developer-guide/operational-support-systems/TOC-Onboarding#what-is-required-for-runbook-enablement) as required by the [Service Framework](https://pages.github.ibm.com/ibmcloud/Service-Framework/).## TOC Services - Availability Management### Who is an AVM?The Availability Manager is a skilled resource whose primary role is to be engaged during customer impacting incidents and drive the incidents to closure, ensuring the right skilled resources are engaged in mitigating/resolving the incident.### Value: TOC has a central pool of Availability Managers with a 247 global presence. During major widespread outages, the AVMs will perform cross platform co-ordination. Individual service teams need not staff availability managers, allowing offerings to put more resources into dev/devOps instead of incident management     Some tribes may continue to have AVMs/ERMs who have deeper tribe level expertise to drive root cause and improvements Tiered (Tier 1 and Tier 2) Incident communications to dependent offerings and execs providing message clarity on impact. AVMs will drive and co-ordinate RCAs. Work with DevOps and other appropriate teams to drive a full and thorough investigation in to an incident. Provide management visibility into aging RCAs### What is needed from services? Complete [AVM enablement](../../../developer-guide/operational-support-systems/TOC-Onboarding#what-is-required-for-avm-enablement) as required by the [Service Framework](https://pages.github.ibm.com/ibmcloud/Service-Framework/).[Operational Support Systems Home](../../../developer-guide/operational-support-systems)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/operational-support-systems/Technical-Operations-Center/",
    },
    {
      "title": "Service Now",
      "text": "---title: Service Now---## ServiceNowServiceNow is IBMs new service management platform for Case, Incident, Problem, and Change Management.Go to the [ServiceNow Community](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W72236921778c_44ea_b5ac_6d8bad99ac4e) for instructional videos, enrollment instructions and testing information.Other ServiceNow links: ServiceNow [Cheat Sheet](https://ibm.ent.box.com/s/ydul42dsy9tmvf1rwfqp216xbx2y0s3j): The purpose of this document is to provide training and access to critical resources for IBMers, thus empowering users to work tickets within ServiceNow. Enroll a Service for Support: [Service Now Enrollment](https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/W72236921778c_44ea_b5ac_6d8bad99ac4e/page/Enrolling%20A%20Service%20for%20Ticket%20Management) [Enrollment Cheat Sheet](https://ibm.ent.box.com/notes/244045701906?s=rellzkqseom4i63tyzki5w2ci50aumcd) Details on completing the ServiceNow enrollment form[Operational Support Systems Home](../../../developer-guide/operational-support-systems)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/operational-support-systems/ServiceNow/",
    },
    {
      "title": "Change Management",
      "text": "---title: Change Management---Change Management, according to ITIL definition, is the process of requesting, analyzing, approving, developing, implementing and reviewing a planned or unplanned change within the IT Infrastructure. The process begins with the creation of a Change Request and ends with the satisfactory implementation of the change and the communication of the results of that change to all interested parties.The intended scope of the Change Management Process is to cover ALL of the IBM Cloud Platform (One Cloud) computing systems and platforms. Primary functional components covered in the Change Management process include Hardware, Software, Database, Application and System Configurations, to name a few. The notion being that ALL platform changes are recorded in the IBM Change Tool.RTC or ServiceNow are the only platforms to be used for Change Management. Change Requests created in either of these tools will be displayed on the Global Change Calendar that is accessed through ServiceNow. ServiceNow gets the RTC Change Calendar information by way of BlueMix Doctor and inherently from ServiceNow. The Change Calendars from both tools are then aggregated to the ServiceNow Global Change Calendar.## MethodsIn ServiceNow, there are two methods by which to create a Change Request - Manually through the ServiceNow Portal or automatically through the Tokenized Access API. For clients wanting to experiment with the API, users may request a token to one of three environments - Dev, Test and Production. Before any user can request a Production token, it is a requirements that they have already requested a Dev or Test token.To use the API, the service team must be enabled to use the Automated Changes. Initially, all services have this enabled on their service because it is the intent of Change Management to move to a Notification Model of conducting changes and away from the Change Review Board (CRB) Model.## RequirementsTo assure the proper visibility and transparency of changes being proposed to the IBM Cloud Platform, there is required information and deployment readiness criteria in place to assure the changes are executed efficiently and effectively. To meet the requirements, all Change Management records are to be compliant with this Change Management Policy.All Change Requests contain required information to be input into the system using either an exposed API to the change tool or through a manual entry form on the tool portal. Below are listed some required inputs to create a change request: Created by – Requestor (auto-fill) Assigned to – Implementer Priority – 1 Critical, 2 High, 3 Moderate, 4 Low, 5 Planning Change Type – Standard or Emergency Configuration Item – Service to be changed Environment – Location(s) Explanation of Impact During Change Implementation Purpose/Goal Description/Plan Planned Start Date/Time, Planned End Date/Time Production Readiness Y/N EU Managed Y/NAll Change Requests, prior to approval, must meet the following Production Readiness criteria: All test cases executed (Testing summary & results) Pretested and validated Rollout/Back out Plans with steps to be taken Peer Reviewer Teams/Names Post-deployment verification plans and results Up to date Operational Guides/Runbooks are created/updated (as needed) Application Monitoring tested, sending info to Kafka bus, and included in deployment Resilience/Destructive Testing Plan and resultsIf the request fails to meet the production readiness requirements, has the automation box unchecked, is considered an Emergency request, will cause disruption of service, or will be executed against an EU Managed environment, the request is considered an exception and will be required to go through the CRB._In the event a planned change will be disruptive, the request must be reviewed by the Change Review Board to assure proper oversight of planning, scheduling and communication to impacted users or customers._## Change Review Board (CRB)_Change Review Board Chair_The Change Review Board is currently staffed with the following [members](https://w3-connections.ibm.com/wikis/home?lang=en#!/wiki/Wfba9e56cc40c_4bb2_8805_e05bdeb2105f/page/Change%20Requests%20for%20Deployment%20Zones?section=Determining%20required%20Review%20Me). For EU Managed change requests, this staff will include a member of the EU for approvals. Attendance/representation is required._Meeting Times_For staging and production environments, the CR review boards take place 3 times a week, at 11:00 ET on Mondays, Wednesdays and Fridays.Note that the meeting might get rescheduled to later during the day (due to conflicts) and your window start should NOT be immediately following the CR review board meeting.## Change Management Optional ServiceNow usage for Change Management is currently optional.[Operational Support Systems Home](../../../developer-guide/operational-support-systems)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/operational-support-systems/Change-Management-Details/",
    },
    {
      "title": "Armada for Watson - Cluster info per environment",
      "text": "---title: Armada for Watson - Cluster info per environment---# Public Production## Dallas||||||---|---|---|---||prdwat-dal10-cruiser2 | Shared | 2ceff3fc1e214d66a1400ca632c61e59 | env: pprd||prdwat-dal13-cruiser4 | Blue Umbrella | 305179407eaa462699a75bb7235c3e7c | env: blueprd||prdwat-dal10-cruiser5 | DlaaS | 01184860e7f949858455c16dba568a71 | env: dlaaspprd5||prdwat-dal13-cruiser6 | NEW PROD | 92b302be76394883a0557ae4173eb35e | env: pprd6|## Washington DC||||||---|---|---|---||prdwat-wdc06-cruiser1 | shared | a82466650df344038ba06521a79f6c76 | env: wdcprd|## London||||||---|---|---|---||prdwat-lon02-cruiser1 | shared | 34f451e38335407b881013a050d75c1f | env: lonprd|## Frankfurt||||||---|---|---|---||prdwat-fra02-cruiser1 | un-managed||||prdwat-fra02-cruiser2 | Shared | 3366a2cc9aa849db9e0d718d80be9f04 | env: fraprd|## Sydney||||||---|---|---|---||prodwat-syd04-cruiser3 | Shared | 74fc13672bc843bf8d8af4595a2fcb8d | env: sydprd|## TokyoNot Deployed# Staging||||||---|---|---|---||stgwat-dal10-cruiser3 | Shared | 6fe80fbf5c704f7a9f5d0614943120e7 | env: pstg||stgwat-dal10-cruiser4 | DLaaS | ed70ee8a536f4549a76fcfa0dc59411b | env: dlaaspstg|# Development||||||---|---|---|---||devwat-dal12-cruiser7 | Shared | 9047bcd1ea574319aa86450b532b62e2 | env: dev||devwat-dal12-cruiser9 | Blue Umbrella | 0c19833cdc804796b07d3f75e2dad94b|||devwat-dal10-cruiser10 | DLaaS | c1cc5c42fe4147d68a58c9592d8e8c63 | env: dlaasdev||devwat-dal10-cruiser13 | DLaaS | 1d4a8c5dac3c4c5885f28d5e9d705f9c | env: dlaasdev13||devwat-dal12-cruiser14 | watson security testing | 9aed2f46eec34dd18cc2c3bc62ed7845|||devwat-dal13-cruiser15 | DLaaS | 29e73170e5b942c3a0f47e12df64e291 | env: dlaasdev15||devwat-dal13-cruiser16 | Blue Umb. New | e4db3e5ea59e4e51ac6645eae5d4679c | env: bluede# Dedicated Now Clusters## Cisco|||||---|---|---||dedcis-dal10-cruiser2 | 89b68f0898cd4b10ac32600d4b362235 | env: cisco|## Thomson Rueters|||||---|---|---||dedtr-dal13-cruiser1 | 9eef532baf154dd98e63f9c9ffa6c979 | env: tr|## Credit Mutual|||||---|---|---||dedcm-par01-cruiser1 | 63bde92b95a6443c90cd64e945818c57 | env: cmpar||dedcm-fra02-cruiser1 | 5a2b1bfe5f224403b1bc63f7f44fd7a2 | env: cmfra|## Softbank||||---|---||dedsb-tok02-cruiser1 | 05cea71f30ad4a3f950a2a6e005e44db|## SK Holdings||||---|---||dedsk-seo01-cruiser1 | ea2e6b2312404d80aaf00eaf0d685d3a|# Dedicated Next Clusters## AT&T|||||---|---|---||prod288-dal10-cruiser2 | b65e02f9a90948cb8d67d1636b619950 | env: prod288|# IBM KoreaNot Deployed",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/armada-watson/environments/",
    },
    {
      "title": "Armada Deployments for Watson",
      "text": "---title: Armada Deployments for Watson---## Armada Watson vs Armada retailArmada deployments for Watson follow the same deployment model as Armada retail. The Bluemix CLI with the Container Service plugin is available to administrators to manage clusters. It will be available to all users when we move to using IAM to authenticate with clusters rather than Service Account tokens.## Armada Watson Network TopologyConnectivity from Kubernetes workers back to the Kubernetes master servers (carriers), the Armada API servers, and the Containers Tribe Docker Registry:[![Connectivity from the Watson Kubernetes Workers to Armada Infrastructure](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/armada-watson/watson-armada-connectivity.png)](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/armada-watson/watson-armada-connectivity.png)### Watson High Availability on Armada## Initial rollout and Single Availability ZoneThe initial rollout of Armada will be in single Data Center/Availability Zone in each Hub location (Dallas, Washington DC, Frankfurt, London, Tokyo, Sydney).High Availability for Watson services in this deployment topology is defined as at least 3 instances (pods or collections of pods) per public multi-tenant service and at least 2 instances per premium single tenant service. [Kubernetes will automatically attempt to schedule your pods on distinct nodes](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/).## Armada Availability Zone Deployment Topology for Hubs and SpokesSoftLayer is enhancing the networking between data centers in the Hubs and relabelling three of the DCs in each Hub as Availability Zones in the style of AWS AZs (fault isolated domains with low latency, high bandwidth network connectivity).The Armada team has documented the recommended deployment topology for the new Availability Zone model that is coming from SoftLayer in the[Armada Architecture Hub-n-spoke Section](https://github.ibm.com/alchemy-containers/armada/blob/master/architecture/architecture.md#hub-n-spoke-architecture)In spokes, the High Availability criteria listed above for Single Availability Zone will apply for Watson Services.In Hubs, High Availability for Watson Services is defined as at least 3 instances (pods or collections of pods) per public multi-tenant service and at least 2 instances per premium single tenant service. [Kubernetes has support for zones](https://kubernetes.io/docs/admin/multiple-zones/), and will attempt to distribute your deployments evenly across all the Availability zones in the cluster. This assumes that there are adequate resources to schedule your pods in each zone.## Armada High Availability in an MZRArmada will achieve High Availability with no single point of failure in a MZR. All the components of Kubernetes, including masters running in multiple availability zones. Details on this are available in the [Armada Architecture documentation](https://github.ibm.com/alchemy-containers/armada/blob/master/architecture/architecture.md#recoveryha).Watsons workload in Armada will be spread across availability zones. Kubernetes will schedule pods across availability zones by default for Deployments that do not use Persistent Volume Claims, as long as there are resources available in each zone.Armadas ALB (Application Load Balancer aka Front Door or Ingress) is configured to run in each availability zone.IBM Cloud provides a Global Load Balancer function (sourced from the Third Party Vendor Cloudflare) which will be used to send requests to each Availability zone that is up.NOTE: Once inside the cluster, Kubernetes does not do zone aware routing. Requests that enter the cluster through an ALB in a particular AZ will not necessarily be serviced by application pods in that AZ.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/armada-watson/armada-watson/",
    },
    {
      "title": "Armada for Watson - Collaboration",
      "text": "---title: Armada for Watson - Collaboration---### Watson Slack> Note: Access to cloud platform slack is no longer required. See the shared channels below....- [#wdc-kubernetes](https://ibm-watson.slack.com/messages/C1J20B2TB) - Watsons channel where teams collaborate and share expertise around Kubernetes and Armada.- [#armada-watson](https://ibm-watson.slack.com/messages/C531XQDC0) - A channel shared between the Watson team slack and the Containers Tribe slack where we can ask questions of the armada team and negotiate new features. Please keep the traffic to a minimum so that the Armada team can reliably know when we really need help.- [#conductors](https://ibm-watson.slack.com/messages/C54H08JSK) - ERMs from Watson should have access to this channel so that they can interact with SREs from the Armada team.### Kubernetes Cluster support## Development and Staging supportThe development and staging environments are technically production environments for the Armada team. However, unless there is an issue there thats blocking a critical change for Watson going to production, then we should raise issues in slack and/or in GHE.Issues in GHE can be [created here.](https://github.ibm.com/alchemy-containers/armada/issues/new?title=&body=WATSON:%0A%0A%0A%0A%0A%0A%0A%0A%0A%0AAttention:%20@jschoudt%20@njlevier)## Production SupportServices or applications running on the cluster will be supported by the service teams SRE staff. NOTE: Some teams dont yet have SRE resources assigned. The dev team is the SRE team for these services.The Cluster itself is supported by the Armada SRE (aka Conductors) team. The flow agreed to between the Watson and Armada SRE teams is depicted below. The intent is to be passing around tickets or monitoring events that are generated. We use PagerDuty for everything, so there should be no slack notification or emails flying around.Any issue in production should be handled via PagerDuty. Instructions are in the Watson SRE wiki here:[Instructions for Paging Out Armada SREs on call (aka Conductors)](https://github.ibm.com/watson-foundation-services/tracker/wiki/How-to-Page-Out-the-Armada-team-for-Kube-issues-in-production)![Containers Flow](https://pages.github.ibm.com/the-playbook/resources/images/developer-guide/armada-watson/SREContainersFlow.png)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/armada-watson/collaboration/",
    },
    {
      "title": "Armada for Watson - Guidance",
      "text": "---title: Armada for Watson - Guidance---## Getting access to Kubernetes ClustersAccess to Watson Kubernetes clusters is requested via USAM (https://usam.svl.ibm.com:9443/AM/). Once you have received access through USAM, you will use the Bluemix CLI withe the IBM Container Service plugin to login and obtain a Kubernetes Configuration file. Under the covers, USAM roles are synchronized with IAM access groups. So you can login with your W3ID credentials and you can use IAM capabilities like API Keys.The USAM System is `Armada-IdMgmt`. When you initially request access, please use your W3ID as the user id for this system.  This is your full email address - your shortname will not be accepted.Please review this wiki to learn more about gaining access to Watson kubernetes clusters.- Non-EU: https://github.ibm.com/Watson/deploys/wiki/P:-Armada-Cluster-Namespace-Access-and-Security#non-eu-armada-clusters- EU Mananged: https://github.ibm.com/Watson/deploys/wiki/P:-Armada-Cluster-Namespace-Access-and-Security#eu-managedAdditional documentation for Conan CD support for USAM/IAM is available (https://github.ibm.com/watson-continuous-delivery/Documentation/blob/master/technical/usam-iam-conan-integration.md).Once you have requested access to a namespace it will require your managers approval as well as namespace owners approval. Techical approvers have been identified for each namespace.After the USAM update has been approved, a periodic process will pickup the changes and synchronize the USAM role membership with the corresponding IAM Access Group membership. The IAM Access Groups for each namespace are setup when the namespace is created, so once the IAM Group has been updated, access will be available. The requester will receive a note from USAM when this process has run.## Namespaces and team setupRequests for new namespaces in our clusters or for changes in namespace quotas should be opened in the [Deploy Team GHE repo.](http://ibm.biz/Watson_Deploy_Squad_Request). If you cant access that GHE repo, you can request access in the [Deploy team Slack channel.](https://ibm-watson.slack.com/messages/C1HAQR94Y).## Bluemix CLI and IBM Container Service plugin and Kubernetes kubectl CLI setupUser will need to follow the instructions to access Watson Kubernetes clusters just as they would any IBM Container Service retail cluster. [Instructions are in the public IBM Cloud Container Service Documentation.](https://console.bluemix.net/docs/containers/cs_cli_install.html#cs_cli_install). There are instructions there for installing the Bluemix CLI and the Kubernetes kubectl CLI.The cluster name to use in the Bluemix CLI command `ic ks cluster-config ` can be found in the [environments](../environments/).## Docker ImagesIn time, there may be a set of standard base images produces for all of David Kennys org. In the meantime Watson Security has agreed that we can use the Ubuntu 16.04 docker images as a base image. These images are updated regularly with security patches. Additionally, since we should NOT run more than one process per container in kubernetes and we wont have remote access such as sshd running in the containers, the normal security hardening that is run for VMs or Bare Metals is not required.The platform team will not produce base images for use with Kubernetes, please use a Ubuntu-based image. See our examples for how we would recommend building docker images for Kubernetes.## ExamplesThe examples previously provided for the Netflix/CSF stack have been updated.- [Hello World](https://github.ibm.com/watson-foundation-services/csf-hello-world)- [Hello World Sidecar](https://github.ibm.com/watson-foundation-services/csf-hello-world-sidecar)- [Hello World KubeDNS](https://github.ibm.com/watson-foundation-services/csf-hello-world-kubedns)## LoggingArmada uses [fluentd](http://www.fluentd.org/) to collect logs from containers and ship them to our IBM Logmet instance(s).The basic approach for capturing container logs is to capture stdout/stderr from the containers. This works by default, without additional configuration required by the container/pod owner. File based collection isnt supported at this time.Logs from clusters in development are flowing to https://logmet.stage2.opvis.bluemix.net/ into the ```Watson-Platform-CSF-Staging``` org and the ```dev``` space. If you dont have access to this org and space, ask in #wdc-logging in the Watson slack.See [Watson Developer Cloud Operational Visibility Documentation](https://pages.github.ibm.com/watson-foundation-services/operational-visibility/) for more details.There are three fields in the logging output that should help you to filter for your container/pod/namespace logs in logmet:- ```kubernetes.container_name_str``` e.g. csf-hello-world- ```kubernetes.namespace_name_str``` e.g. user-jschoudt- ```kubernetes.pod_name_str``` e.g. csf-hello-world-1463229935-hfn3cSee [Watson Developer Cloud Operational Visibility Documentation](https://pages.github.ibm.com/watson-foundation-services/operational-visibility/) for more details.More detail coming soon## MetricsNOTe: This is all about metrics for Watson artifacts in Kubernetes (namespaces, pods, containers, services, etc.). The metrics for node utilization, networking, filesystem usage on the nodes, etc is all collected and monitored by the Armada team. The Watson team doesnt have access to these metrics. The Armada team is working on the getting Watson access to this for debugging purposes.### Base Container Metrics for CPU and MemoryArmada uses the standard [Kubernetes components](https://kubernetes.io/docs/user-guide/monitoring/) to collect resource metrics from containers. Armada then ships them to our IBM Logmet instance(s).Metrics from cluster in development are flowing to https://metrics.cperf.opvis.bluemix.net/ into the ```Watson-Platform-CSF-Staging``` org and the ```dev``` space. If you dont have access to this org and space, ask in #wdc-metrics in the Watson slack.  NOTE: This is the same org/space where our logs flow, so if you have access to logs, then you have access to metrics.See [Watson Developer Cloud Operational Visibility Documentation](https://pages.github.ibm.com/watson-foundation-services/operational-visibility/) for more details.### Metrics CollectedThe metrics available are:- ```container-metric-cpu_num_cores```- ```container-metric-cpu_usage```- ```container-metric-cpu_usage_pct```- ```container-metric-memory_current```- ```container-metric-memory_limit```### Graphite NamingTo see metrics for your namespace/pod/container:1. Open the [metrics UI web page](https://metrics.cperf.opvis.bluemix.net/)2. Ensure that you are in the ```Watson-Platform-CSF-Staging``` org and the ```dev``` space. (NOTE: This isnt the default usually.)3. Click the open folder icon and select the NEW button on the right side of the Search bar.4. Mouse over the green bar on the top left of the blank area.5. Select Add Panel | Graph from the menu6. Click on the title (no title by default) and select edit.7. Click on the Select Metric button at the bottom of the graph.8. Select the metrics prefix crn then v1 then dev then public then containers-kubernetes then us-south then a_IBM36626 then your cruiser (main cluster in dev is cruiser 1).9. Choose a metric to graph.10. Choose the container you want to graph that metric for. (wildcards are allowed in this string, so ```user-jschoudt_``` would show the specified metrics for all the containers in the ```user-jschoudt``` namespace).### Container identifier formatAfter you select the metric you want to graph, the last selection will be a single element with a name formed like:    namespace_pod_POD_containeridFor example:    crn.v1.dev.public.containers-kubernetes.us-south.a_IBM366226.cruiser1.container-metric-memory_current.ddqa_ddqa-deployment-jegerlow-43184335-1tc41_POD_34aabcfc340cdd74d439fd10c41afe71b6bf1e911d09c13537ec113f7fe2b526## Custom MetricsCustom metrics can be pushed via two options. Option 1 is the supported option today.### Option 1 - StatsDThis option is documented in the normal guidance for [CSF Operational Visibility](https://pages.github.ibm.com/watson-foundation-services/operational-visibility/metrics/logmet-migration/).StatsD is packaged using the sidecar pattern. This pattern, when leveraged via Kubernetes multi-pod support, allows for separation of concerns between containers and resource isolation to reduce the complexity in allocating and managing resources. This is a change from our previous model in Mesos/Marathon, where multiple processes were run in a container and managed via supervisord.NOTE: Please dont confuse the statsd sidecar with the CSF Netflix Sidecar. Both use the sidecar pattern, but they are distinct containers.See the read me and examples in the [statsd sidecar github repo](https://github.ibm.com/watson-foundation-services/kubernetes-statsd-sidecar) for usage details.The [csf-hello-world](https://github.ibm.com/watson-foundation-services/csf-hello-world) example is instrumented using StatsD and configured to push metrics to logmet.The [csf-hello-world-sidecar](https://github.ibm.com/watson-foundation-services/csf-hello-world-sidecar) is also instrumented with StatD.### Option 2 - PrometheusPrometheus is the industry/community standard way to collect metrics and generate alerts for Kubernetes. The Armada team is using Prometheus to gather metrics and monitor the Kubernetes cluster. However, they are not collecting application-level metrics from pods, containers, etc. that Watson runs. They need to keep their use of Prometheus separate from ours to keep the separation of concerns between cluster management and application clear.We are working to get the use of Prometheus by Armada consumers established as an architecture pattern in the CTO-led architecture guild. This is the first step to building a pattern where there is an owner who will manage Prometheus for consumers such as Watson.In the meantime, if services teams want to run Prometheus they can do so. Support for prometheus is the responsibility of the service team. I am working on a sample/pattern for this in the [prometheus branch of csf-hello-world](https://github.ibm.com/watson-foundation-services/csf-hello-world/tree/prometheus). This pattern will include shipping metrics from Prometheus to IBM LogMet for longer term storage and wider availability.## Container Image Building and DeploymentThe Tron team manages tooling for [continuous integration](https://github.ibm.com/ghenkins-project/documentation/wiki) and [continuous deployment](https://github.ibm.com/watson-continuous-delivery/Documentation/blob/master/README.md).For Tron support, please see their support [documentation](https://pages.github.ibm.com/tron/support/).### Continuous Integration (CI)Containers for services running in Armada should be built and continuously integrated using [Ghenkins](https://github.ibm.com/ghenkins-project/documentation/wiki).### Docker RegistryThe Tron team manages a central Pay as You Go IBM Cloud account, called Red Sonja. Within that account, Watson Service teams will create namespaces for each Docker registry, and then store their Docker images within those Docker registries and namespaces.There are separate instances of the IBM Cloud Docker Registry for IBM Cloud Stage (aka YS1) and IBM Cloud Production. Additionally, in production, there are distinct registries per region. (e.g. There is a registry for US-SOUTH, a different registry for EU-GB, and a different registry for EU-WEST, etc). These regional registries are NOT replicated. You must allocate namespaces and push images to them individually. IBM Cloud Registries exist in Hub locations in the IBM Cloud Hub/Spoke datacenter topology. There are no registries in spokes.This [document](https://console.bluemix.net/docs/containers/cs_regions.html#regions-and-locations) provides more information about IBM Cloud Container Services.#### Docker registry limitationsBecause the Red Sonja account is a Pay as You Go account, there is not a limit on the size of Docker images.#### Docker registry by Watson environmentsIn all Watsons development, staging, public production and dedicated production environments, we use IBM Cloud Public Docker registries. Watson uses the IBM Cloud Docker registry that is closest to the particular Watson production environment. (Closest geographically and in terms of network latency and bandwidth.) As noted above, this follows the hub and spoke topology for IBM Cloud.NOTE: Our dedicated dev env is in Tokyo today. This may be an issue for connection to us-south or ap-syd registries. Yet another reason we need to move our dedicated dev environment out of Tokyo.#### Docker registry namespacesNamespaces in the IBM Cloud Docker Registry are allocated to customers on a first come first served basis. When Watson Service teams [on-board](#using-watson-ci-and-cd) to the Red Sonja account, they should land-grab the namespaces they want to use in all registries.#### Network connectivity for Docker registryThe IBM Cloud Docker Registries live on the public internet. Watson will need to configure outbound access to these registries. The proxy should preserve the SSL Certificate exchange between the Client in Watson (e.g. Kubernetes or Docker) and the IBM Cloud Docker Registry.#### Promoting imagesImages are created in Ghenkins and pushed to the public Docker registries. Since we use the same registries for dev, pstg, and production environments there is no longer a need for image promotion logic. However, this requires extra care from the development teams with respect to versioning. Pushing an image for use/testing in dev/staging will make it visible in production as well. Always avoid the use of latest when deploying. And take care not to over-write an image version that is in use in production.#### Image versioning and the use of latestThe use of the latest tag in Docker is encouraged for referencing base images. Referring to a base image in the Dockerfile for your image should use the latest tag to ensure you always have the latest security updates and bug fixes when you build/test. e.g. `FROM wdcloud/wdctomcat:latest`.The use of latest is discouraged for deployments. In fact, the use of versions at all is discouraged. We use an immutable identifier, the sha256, of the image. Since this hash is computed from the image content, even if someone pushes a new image from dev with the same version tag used in production it will not change production.#### IBM Cloud account and registry namespace ownershipAll container registries that Watson uses will be in the single IBM Cloud Red Sonja account. This will facilitate security having a single view of all our images via Vulnerability Advisor and other tools.For now, this means that all teams will be able to see/access other teams docker registry namespaces. There is functionality in the registry coming in late 2017 to allow for IAM to be used to control who has access to what namespaces in the registry.### Continuous Deployment (CD)Containers, built in Ghenkins, for services running in Armada should be deployed using [Hyboria](https://github.ibm.com/watson-continuous-delivery/Documentation/blob/master/README.md). Hyboria can be run in two ways: on a local workstation (Hyboria-CLI) for testing your deployment scripts or in an emergency on a remote server (Hyboria TaaS Jenkins) for automated deploymentsDeployments to Armada CANNOT be done in Ghenkins, and must be done using Hyboria.### Using Watson CI and CDFollow the Tron provided on-boarding [instructions](https://github.ibm.com/watson-continuous-delivery/Documentation/blob/master/on-boarding/README.md) to enable your Watson service team to use the Watson CI/CD solution, including Ghenkins, the Red Sonja IBM Cloud account, and Hyboria.### Persistent StorageA persistent volume claim is a request for storage that can be initiated by the cluster user or cluster admin. After the user creates a persistent volume claim, a persistent volume with the requested storage size and storage class is created. This persistent volume is mounted and bound to the persistent volume claim. The user can mount the persistent volume claim on a container to persist data across pod restarts or share data between pods.## File Storage VolumeThe NFS file storage that backs the persistent volume is backed by SSD flash storage arrays at higher IOPS levels with disk level encryption for data-at-rest and clustered in order to provide high availability for your data. The file storage claim can be mounted to a container in a pod to ensure that data is available even if the pod crashes or shuts down.Creating a persistent volume claim to provision NFS file storage.NOTE: Cluster users dont currently have permissions to get or describe storage classes due to an [issue in Kubernetes](https://github.com/kubernetes/kubernetes/pull/40881). Step 1 and 2 are informational and the output provided should give you the information required to complete Step 3.1. Review the available storage classes. Armada Container Service provides three pre-defined storage classes so that the cluster admin does not have to create any storage classes.> `kubectl get storageclasses````$ kubectl get storageclassesNAME                         TYPEibmc-file-bronze (default)   ibm.io/ibmc-fileibmc-file-gold               ibm.io/ibmc-fileibmc-file-silver             ibm.io/ibmc-file```2. Review the IOPS of a storage class or the available sizes.> `kubectl describe storageclasses ibmc-file-silver`The parameters field provides the IOPS per GB associated with the storage class and the available sizes in gigabytes.```BRONZE:Parameters: iopsPerGB=2,sizeRange=20Gi,40Gi,80Gi,100Gi,250Gi,500Gi,1000Gi,2000Gi,4000Gi,8000Gi,12000Gi,type=EnduranceSILVER:Parameters: iopsPerGB=4,sizeRange=20Gi,40Gi,80Gi,100Gi,250Gi,500Gi,1000Gi,2000Gi,4000Gi,8000Gi,12000Gi,type=EnduranceGOLD:Parameters: iopsPerGB=10,sizeRange=20Gi,40Gi,80Gi,100Gi,250Gi,500Gi,1000Gi,2000Gi,4000Gi,type=Endurance```3. Open your preferred text editor and create a configuration script to define your persistent volume claim and save the configuration as a .yaml file.```apiVersion: v1kind: PersistentVolumeClaimmetadata:  name: mypvc  annotations:    volume.beta.kubernetes.io/storage-class: ibmc-file-silverspec:  accessModes:    - ReadWriteMany  resources:    requests:      storage: 100Gi``` Understanding the configuration script components> `metadata: name:` - Enter the name of the persistent volume claim.>> `metadata: annotations:` - Storage class defines the IOPS per GB of the host file share for the persistent volume that the persistent volume claim requests.>  ibmc-file-bronze: 2 IOPS per GB.>  ibmc-file-silver: 4 IOPS per GB.>  ibmc-file-gold: 10 IOPS per GB.>>Note: If no storage class is specified, the persistent volume is created with the bronze storage class.>> `spec: accessModes:` - Access modes define the way that the persistent volume claim can be mounted to a worker node.>  ReadWriteOnce (RWO): The persistent volume can be mounted to pods in a single worker node only. Pods that are mounted to this persistent volume can read from and write to the volume.>  ReadOnlyMany (ROX): The persistent volume can be mounted to pods that are hosted on multiple worker nodes. Pods that are mounted to this persistent volume can only read from the volume.>  ReadWriteMany (RWX): This persistent volume can be mounted to pods that are hosted on multiple worker nodes. Pods that are mounted to this persistent volume can read from and write to the volume.>>> `resources: requests/storage:` - Enter the amount of storage to create on an NFS file share in gigabytes. Available sizes are 20Gi, 40Gi, 80Gi, 100Gi, 250Gi, 500Gi, 1000Gi (1 TB), 2000Gi (2 TB), 4000Gi (4 TB). For the bronze and silver storage classes, 8000Gi (8 TB) and 12000Gi (12 TB) sizes are also available. If you choose a size other than one that is listed, the size is rounded up. If you select a size larger than the largest size, then the size is rounded down.4. Create the persistent volume claim.> `kubectl apply -f deploy/kube-config/mypvc.yaml`5. Verify that your persistent volume claim is created and bound to the persistent volume object. This process can take a few minutes.> `kubectl describe pvc mypvc` Your output should look similar to the following:```Name: mypvcNamespace: defaultStorageClass: Status: BoundVolume: pvc-0d787071-3a67-11e7-aafc-eef80dd2dea2Labels: Capacity: 100GiAccess Modes: RWXEvents:  FirstSeen	LastSeen	Count	From								SubObjectPath	Type		Reason			Message  ---------	--------	-----	----								-------------	--------	------			-------  3m		3m		1	{ibm.io/ibmc-file 31898035-3011-11e7-a6a4-7a08779efd33 }			Normal		Provisioning		External provisioner is provisioning volume for claim default/my-persistent-volume-claim  3m		1m		10	{persistentvolume-controller }							Normal		ExternalProvisioning	cannot find provisioner ibm.io/ibmc-file, expecting that a volume for the claim is provisioned either manually or via external software  1m		1m		1	{ibm.io/ibmc-file 31898035-3011-11e7-a6a4-7a08779efd33 }			Normal		ProvisioningSucceeded	Successfully provisioned volume pvc-0d787071-3a67-11e7-aafc-eef80dd2dea2  ``` 6. To mount the persistent volume claim to your pod, create a configuration script and save the configuration as a .yaml file.  ```  apiVersion: v1kind: Podmetadata: name: mypodspec: containers: - image: nginx   name: mycontainer   volumeMounts:   - mountPath: /volumemount     name: myvol volumes: - name: myvol   persistentVolumeClaim:     claimName: mypvc``` Understanding the configuration script components> `metadata: name:` - The name of the pod.>> `volumeMounts: mountPath:` - The absolute path of the directory to where the volume is mounted inside the container.>> `volumeMounts: name:` - The name of the volume that your are mounting to your container.>> `volumes: name:` - The name of the volume that you mount to your container. Typically this name is the same as volumeMounts/name.>> `volumes: name: persistentVolumeClaim:` - Enter the name of the persistent volume claim that you want as your volume. When you mount the volume to the pod, Kubernetes identifies the persistent volume that is bound to the persistent volume claim and enables the user to read from and write to the persistent volume.7. Verify that the volume is successfully mounted to your pod.> `kubectl describe pod mypod` The mount point is listed in the Volume Mounts field and the volume is listed in the Volumes field.```Volume Mounts:     /var/run/secrets/kubernetes.io/serviceaccount from default-token-tqp61 (ro)     /volumemount from myvol (rw)...Volumes: myvol:   Type:	PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)   ClaimName:	mypvc   ReadOnly:	false```Removing Resources and Persistent VolumesYou can manually remove resources from a cluster when you no longer needed them. In addition, most resources are automatically deleted when you remove the cluster that the resources are associated with. However, you must manually remove persistent volume claims before you remove a cluster. Removing a persistent volume claim permanently deletes any data that is stored, so confirm that your data is backed up and that you removed any pods that are mounted to the persistent volume claim. Due to the monthly billing cycle, a persistent volume claim cannot be deleted on the last day of a month. If you delete the persistent volume claim on the last day of the month, the deletion remains pending until the beginning of the next month.Remove an individual resource or several resources by running the delete command.Examples:> `kubectl delete pod mypod`>> `kubectl delete pvc mypvc`>> `kubectl delete pod,service,pvc my_pod my_service mypvc`## Object Storage Bucket> Coming Soon## Block Storage Volume> Coming Soon## Getting Help### SlackThere are two main channels to get support for the clusters. #wdc-kubernetes - Service teams should use this channel first to try to get help from kube admins or other service teams. #armada-watson - Use this channel only if you have to interact with Armada team for support.### Github Deploy Repo (http://ibm.biz/Watson_Deploy_Squad_Request) - Use this repo for kubernetes namespace related requests - new namespaces, quota changes, USAM approval changes, new test clusters or special hardare requests such as GPU.  This is NOT A TROUBLESHOOTING repo.  Also please dont assign anyone unless you were instructed to do so. Tracker Repo (https://github.ibm.com/watson-foundation-services/tracker/issues) - Use this for opening issues to troubleshoot kube issues.  Please provide as much detail as you can and tag with Kubernetes.  Also please dont assign anyone unless you were instructed to do so.## Helpful linksGeneral Cluster info and links  (https://github.ibm.com/Watson/Watson-Cognitive-Platform/wiki/Watson-Armada-Cluster-Info)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developer-guide/armada-watson/guidance/",
    },
    {
      "title": "Slack - Best Practices",
      "text": "---title: Slack - Best Practices---[Overview](../../slack)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Best Practices](../../slack/best-practices)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Integrations](../../slack/integrations)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Audio & Video Calling](../../slack/slack-calls)Slack is at its best when used as an _internally-public_ collaboration tool. As teams continue to adopt modern practices, especially [social coding](https://whitewater.ibm.com/field-guide/practices/social-coding), [DevOps](http://calmedia.atlanta.ibm.com/agile_academy/courses/agile_devops_deployment/index.php?id=4388194968001), and [whole-team collaboration](https://w3-connections.ibm.com/blogs/chill/entry/A_whole_team_approach_to_discovery_and_delivery?lang=en_us), these recommended best practices become essential to supporting the transparency and cross-role collaboration thats needed to successfully deliver modern products in modern ways.## The Dos and Donts of SlackWhile Slack provides an informal communication channel that works to break down barriers between teams, it should still be treated as an extension of your physical work space. Everyone is expected to adhere to IBMs [Business Conduct Guidelines](https://w3-03.ibm.com/ibm/documents/corpdocweb.nsf/ContentDocsByTitle/IBM+Business+Conduct+Guidelines) while using Slack. Always keep in mind that on the other name of a screen name and avatar is a coworker.### Do 3rd party tools (like Giphy) can aid in decreasing barriers to communication and increasing the sense of community in a team, but we do not curate the content. If one of these tools returns something inappropriate, please delete it. Encourage public over private discussion. Slack works best as a public (to IBM) archive of knowledge and communication. Moving discussions in to public forums will allow others to learn. Respect timezones and availability.   We have coworkers throughout the world in our Slack room, they may not share your timezone.   While Slack feels real-time when everyone is on at once, it also functions as an asynchronous communication platform; if someone doesnt respond immediately they may be busy. Dont expect an immediate response at all times Set up integrations to push project updates in to Slack. Work with your [rooms admin](slack) to do so.   GitHub integrations for issues updates, pull requests, comments, etc…   ZenHub for pipeline changes, estimation changes, etc…   Travis for automated testing and deployment pass/fail Try to keep the conversation to a single thread so the entire thread can be referenced as a URL in tools such as Github or Aha.### Dont Dont include [IBM Confidential](https://w3-03.ibm.com/ibm/documents/corpdocweb.nsf/ContentDocsByCtryTitle/United+States~Corporate+classification+and+control+of+IBM+information+-+Frequently+Asked+Questions/) information in your communication _unless you are in a [Whitewater tiered room](slack)_ Dont use `@channel`, `@here`, or `@mention` someone unless the targets of those notifications absolutely positively must drop everything they are doing and take action against your message at that very moment. All do so regardless of timezone.   `@channel` will notify _everyone in a channel even if they are not logged in_   `@here` will notify _everyone currently logged in and active in a channel_   `@mention` will notify _the mentioned individual_ Dont rely on Slack to store files indefinitely. All files that need a permanent home should be placed in [Box](http://ibm.box.com/) or [GitHub](http://github.ibm.com/) Dont share [Protected Health Information (PHI)](https://en.wikipedia.org/wiki/Protected_health_information), [Personally Identifiable Information (PII)](https://en.wikipedia.org/wiki/Personally_identifiable_information), or [Sensitive Personal Information (SPI)](https://en.wikipedia.org/wiki/Sensitive_personal_information) in Slack. If you suspect PHI, PII, or SPI has been shared in Slack, unintentionally or otherwise, please immediately send an email to [Watson Security/Jericho/IBM@IBMUS](mailto:wmssec@us.ibm.com?Subject=Potential%20Security%20Incident%2C%20Watson%20Slack) and copy your manager. Indicate that a potential security incident may have occurred in the Watson Slack room. Your manager and the Watson Security Team will work together to help you determine whether an incident has occurred and, if so, what the next steps are required to remedy the incident.   IMPORTANT: Our primary concern is not to place blame or get anyone in trouble, but to determine the depth of any incidents that may occur and contain them as quickly as possible. If you see something you are unsure of, it is safer to report it to the Watson Security Team than to not do so. They are here to help protect both you and IBM. Please give the Watson Security Team your full cooperation, and please do not take any action to contain or remediate an incident unless doing so under the direction of the Watson Security Team.### Channels  Channels are the life-blood of Slack. Thanks to Slack Enterprise Grid, we have new options when creating public Channels. They are:  Public: Public channels are shared within a single Slack Team (nothing changed for Public channels with Slack Enterprise Grid). Any member of the team can find, join, and participate in a Public channel. (e.g. http://ibm-watson.slack.com/messages/watson-cambridge)  Shared (Multi-Team): Slack Enterprise Grid allows us to share Public channels with a specific set of IBM-owned Slack Teams. Ask in your #general channel how to create a Multi-Team Shared Channel.  Shared (IBM Global): Slack Enterprise Grid allows us to share Public channels with every other IBM-owned Slack Team. Anyone in the company can find, join, and participate in the channel. Ask in your #general channel how to create an IBM Global Shared Channel. (e.g. http://ibm-cio.slack.com/messages/slack-at-ibm)  Naming Conventions  When discussing namespacing, the following pattern should be used, replacing `` with its relevant value: `--`. In order to support self-directed teams, open communication channels, and channel discovery, the following best practices are recommended:   Use as few acronyms as possible when naming channels   Each product should have a public channel where all team communication about a project takes place, namespaced in the following way:     [Watson Engagement Advisor](https://github.ibm.com/watson-engagement-advisor) - `wea`     [Watson Explorer](https://github.ibm.com/Watson-Explorer) - `wex`     [Watson Discovery & Exploration](https://github.ibm.com/watson-discovery-and-exploration) - `wda`     [Watson Services](https://github.ibm.com/watson-services) - `wdc`     Multiple parts of [Watson](https://github.ibm.com/Watson) - `wts`     WCTS - `wcts`   Many groups across IBM are adopting the [Spotify Squad](http://blog.crisp.se/2012/11/14/henrikkniberg/scaling-agile-at-spotify) model. It is recommended that even with this model that most product specific communication happen in a _product channel_. Rooms based on this model should adhere to the following:     Squads       Public       Prefixed with ``     Tribe       Public       Prefixed with ``     Chapter       Public       Prefixed ``     Guild       Public       Prefixed ``   When integrating aspects of [ChatOps](http://blog.crisp.se/2012/11/14/henrikkniberg/scaling-agile-at-spotify), especially integrating Code, DevOps (test, build, and deploy), and Track & Plan notifications in to Slack, should adhere to the following:     All notifications must be available to everyone who has access to the products public channel     Notifications should post inside the products public channel or within a sibling public channel suffixed `int`   Channels meant for discussing general topics (such as `development-standards` or `whitewater`) should be public and not include acronyms in their name   Channels specific to a given site (New York, Austin, Tokyo, etc…) should be public and should clearly indicate what site theyre associated with (in name or as a suffix to the channel).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/slack/best-practices/",
    },
    {
      "title": "Slack - Integrations",
      "text": "---title: Slack - Integrations---[Overview](../../slack)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Best Practices](../../slack/best-practices)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Integrations](../../slack/integrations)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Audio & Video Calling](../../slack/slack-calls)Slack is at its best when its at the center of a network of [integrations](https://slack.com/apps), each providing their own information into the chat stream. The [ambient awareness](https://en.wikipedia.org/wiki/Ambient_awareness) generated by the stream of information in Slack, especially from integrations, helps to provide users with an almost omnipresent knowledge of their team members and project status.There are two basic types of integrations, incoming integrations that send data into a Slack channel, and outgoing integrations which send data out of a Slack channel.As Slack Teams may contain IBM Confidential content, for any given channel, at any point in time, there are some rules to follow.## Internal IBM Integrations and BotsBased on the new [security standard](https://pages.github.ibm.com/it-standards/main/2015/01/24/itss.html), integrations and bots created by our Squads can be added to channels that may contain IBM Confidential data as long as those channels do not cover “sensitive” topics.An example of _non-sensitive_ IBM Confidential data: possible features in the upcoming version of Watson Conversation new launch date for our Discovery ServiceAn example of a _sensitive_ data would be: Discussions of acquiring (public company) Acme corp. or How to position the slight earnings miss in next weeks earnings announcement or The recovery outlook for Watson Health patient John Smith.Internal IBM integrations and bots can be hosted in IBM Bluemix and use IBM-created services in the Bluemix catalog.### Requesting Integrations> Note: This section is specific to the IBM Watson Slack Team. Ask in your #general channel how to request an Incoming WebHook Request...Incoming IBM Integrations Incoming WebHooks can be created by anyone in the IBM Watson Slack Team, you just have to request one here: [Incoming WebHook Request](https://ibm-watson.slack.com/apps/A0F7XDUAZ-incoming-webhooks)Outgoing IBM IntegrationsBots and Apps can be connected with outgoing Integrations with the following restrictions: Outgoing data _must_ be encrypted. You _must not_ send data to third-parties (Google, Microsoft, etc) Bots and Apps _must_ be IBM-hosted (Bluemix Public/Dedicated/Premium, or hosted on the 9.x network) You _must not_ use third-party services in the Bluemix catalog You _must not_ allow raw channel data from Slack to be available to IBMers outside of Slack You _must not_ allow raw channel data from Slack to be available to third parties Integrations _may not_ be used in private channels that are used for sensitive data/topics/conversations. You _must_ update the Channel Purpose to state that there is an outgoing integration deployed and you _must_ include a link to a page with details about your outgoing integration. All bots _must_ announce themselves when invited into a channel and in that announcement provide a link to a page with details about themselves. To request an integration to be used with an IBM-created Bot or App, open an issue: [Outgoing Integration Request](https://github.ibm.com/Watson/slack/issues/new?title=Internal%20IBM%20Integration%20request)## Third-Party Integration Requirements Integrations _may_ post information one-way in to Slack. Integrations _may_ provide slash commands (such as `/giphy`) if and only if that is the only information they are able to receive from Slack. Integrations _must_ be work appropriate. Integrations _may not_ have access to the full Chat history unless that history _only_ resides in a server that is secured and approved to hold IBM Confidential information. This is very common for most chat bots, so unfortunately most of them are not allowed. Integration endpoints (especially WebHook endpoints) _must_ be kept secret and _may not_ be shared amongst multiple individuals (but _may_ be shared amongst multiple integrations if they are kept secret). Consider integration endpoints as secret and secure as a password. Integrations _must_ be configured by the Slack administrators and _only_ the Slack administrators. Integrations that require a specific users login to configure and use are unfortunately not available. This also means that integrations can only be configured for channels the Slack administrators have access to. Integrations _must only_ be used for the purpose they were requested for. General-purpose integration endpoints will not be granted (except in the case where an incoming WebHook is needed, in which case that integration will be monitored to ensure it only provides information related to its initial request). The [Slack@IBM FAQ](https://ibm.biz/slack-faq) has a [list of approved integrations](https://w3.ibm.com/help/#/article/slack_admin/permit_integrations) that should be checked to see whether an integration can be made available.### Configured and Approved IntegrationsA number of integrations are pre-approved and can be requested simply. In addition, we have a number of configurations already configured and ready for use.### Configured ApplicationsThe following integrations are already configured and available for use throughout Slack: [Giphy](https://slack.com/apps/A0F827J2C-giphy) - Animated GIFs, can be used via the `/giphy` slash command [Screenhero](https://slack.com/apps/A0F7XDVHB-screenhero) - Screen sharing and voice chat for Slacks Screenhero application. Requires a Screenhero account (registration currently closed as features are folded in to Slack) [Twitter](https://slack.com/apps/A0F7XDW93-twitter) - Automatically expand tweets pasted in [Calls](https://get.slack.help/hc/en-us/articles/216771908-Making-voice-calls-in-Slack) - One-to-one and group voice and video calls### Approved IntegrationsThe following integrations have been approved to be individually configured: [GitHub](https://slack.com/apps/A0F7YS2SX-github) - Configurable for incoming information for both GitHub Enterprise and public GitHub [Travis CI](https://slack.com/apps/A0F81FP4N-travis-ci) - Configurable for incoming information for both Travis Enterprise and public Travis [ZenHub Enterprise](https://ibm.biz/zenhub-install) - Configurable through an incoming WebHook. An administrator will need write access to the requested repository in order to configure [Jenkins CI](https://slack.com/apps/A0F7VRFKN-jenkins-ci) - Configurable for incoming information [PagerDuty](https://slack.com/apps/A0F81FMQW-pagerduty) - Configurable for incoming information [Twitter](https://slack.com/apps/A0F7XDW93-twitter) - Configurable for incoming tweets from a specific user account## Requesting an IntegrationIn order to expedite Slack integration requests, please [file an issue](https://github.ibm.com/watson/slack/issues) on https://github.ibm.com/watson/slack with the following information: What integration you would like to have enabled What channel you would like the integration configured for (for multiple channels, multiple integration points will need to be created) If applicable, how you would like the integration configured If requesting a WebHook, where the information will be coming from (this will allow us to determine if a WebHook is appropriate and secure)Once an issue has been filed, one of the Watson Slack admins will follow up with the requester with next steps.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/slack/integrations/",
    },
    {
      "title": "Watson Announcements Channel",
      "text": "---title: Watson Announcements Channel---### OverviewWeve set up an IBM-wide Shared Channel on Slack Enterprise Grid that Watson Platform Leaders can use to provide IBMers with the latest and greatest information about what weve released.> ProTip: Absolutely, positively, do not pre-announce anything. This channel can be seen by all IBMers (including our Sellers) and is not approved for IBM Confidential Material.### Accessing the ChannelThe channel can be joined by any IBMer, but only a select few can post anything in the channel.- [https://ibm-watson.slack.com/messages/watson-announcements](https://ibm-watson.slack.com/messages/watson-announcements)### Request Posting RightsOpen an issue: [Slack Annoucements Channel Posting Request](https://github.ibm.com/Watson/slack-annoucements-channel-requests/issues/new?title=Posting%20Rights%20Request)### Posting TemplatesAs the channel will be an official communications tool for us, we need to maintain alignment around annoucements. Please use these patterns...## Minor Release/Sprintly Release/Tell IBMers Service Name / Epic or Feature / Release status / Link to blog post> Discovery Service / Entity Disambiguation v1 / GA> https://apps.na.collabserv.com/blogs/152f58a2-3bb3-4992-86a7-c56ad4bbd21c/entry/Entity_Disambiguation_v1_Release_in_Watson_Discovery_Service?lang=en_us Always add a link to internal (or external) blog post You can include where to go for questions (slack channel #watson-products-help, #watson-services-help, etc)      Dont forget that people cannot reply to you in the announcements channel!  Its extra important that you provide a method (channel, email, Community, etc.) that they can access for follow up questions.## Major Release/Quarterly Marketing Release/Tell the worldALL OF THE ABOVE, PLUS... Link to Seller Enablement Registration/Playback (event central link) Link to Technical (aka T3) Enablement Registration/Playback (event central link) Link to box folder with other marketing collateral, if applicable External Blog Post",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/slack/watson-announcements-channel/",
    },
    {
      "title": "Slack - Audio & Video Calling",
      "text": "---title: Slack - Audio & Video Calling---[Overview](../../slack)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Best Practices](../../slack/best-practices)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Integrations](../../slack/integrations)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Audio & Video Calling](../../slack/slack-calls)Slack has added both audio and video calling to Slack EnterpriseWorking with the CIO and the CISO teams, weve gotten Slack audio and video conferencing [approved](https://github.ibm.com/Whitewater/Slack/blob/master/security-assessments/videoconference.md) for IBM Confidential conversations - this is a GREAT solution for Squad-based video conferencing. You can call a single person, or add up to 15 people to a single call.Call Basics- To call a someone, open a Direct Message and click the phone handset icon at the top of the Slack window.>ProTip: All calls start as audio only, to switch to video, click the camera icon in the call Window- To add people to an existing call, click the [+] icon in the top right of the call window.- You can initiate a multi-person call by starting the call from a multi-person direct message.> Please note that Slack limits you to 15 people per callAdvanced Features- The Slack support site has great documentation about using audio/video calling: [Making calls in Slack](https://get.slack.help/hc/en-us/articles/216771908-Make-calls-in-Slack)",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/slack/slack-calls/",
    },
    {
      "title": "Admin Guide",
      "text": "---title: Admin Guide---Welcome to the life of a Slack Admin for the Watson AI Organization. Weve got a few rules we have to adhere to. They are:- You must not add IBMers in China, Taiwan, or any of the countries on D1 National Security list (Armenia, Azerbaijan, Belarus, Cambodia, China, Georgia, Iraq, Kazakhstan, North Korea, Kyrgyzstan, Laos, Libya, Macau, Moldova, Mongolia, Russia, Tajikistan, Turkmenistan, Ukraine, Uzbekistan, Vietnam)- You agree to periodically (at least once per week) review the [Third Party Tooling Request Board](https://zenhub.ibm.com/app/workspaces/third-party-tooling-59946c4d3e7ced0b8213aad6/boards?repos=28235,171362,189789,212237) - assign the issue to yourself when working on something.- Automation handles the bulk of adding users, but there are always requests for special cases    - Do not add anyone to Slack that has not opened an [access request](https://pages.github.ibm.com/the-playbook/tools/onboarding/#slack)    - All requests must be approved by a manager from the Watson AI team they are working with. Just have the manager approve via a comment.    - Do not add any users that have not been approved by a manager reporting up through Beth Smith (or one of the Global dotted-line managers)If in doubt, ask for help in the [CIO Tools Watson Admin Channel](https://ibm-watson.slack.com/messages/C2D72HVCP)- Non-IBMers can only be added to Private Guest Channels as Multi-Channel Guests and only have access to the specific guest channels for the associated project with the external company- Private Guest channel names must end with -guest (e.g. company-name-guest)Sharing Channels to other IBM-owned Slack Workspaces requires additional permissions. Ask for help on Slack if needed...",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/slack/watson/admin-guide/",
    },
    {
      "title": "Boo! I’m a Secret Page!",
      "text": "---title: Boo! I’m a Secret Page!---Youre not supposed to know about me. Sneaky, sneaky!",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/secret/boo/",
    },
    {
      "title": "Watson AI SRE Manifesto",
      "text": "---title: Watson AI SRE Manifesto---Authors: Gareth Holl, Chris BrockVersion: 1.2Last Updated: June 27, 2017This manifesto is divided into 3 major focus areas:- Availability/On-call - Monitoring, Alerting, and On-call Operations- Engineering - Efficiency and Automation Improvements- Customer Service - Assisting clients with the use of our services## Availability/On-call Focus> For an SRE to execute successfully for their given service(s), theyfirst need to define what an outage or client impact means for theirservice(s).### PagerDuty_What should you be doing?_- When going on-call, test your phone can receive a test alert and is audible.- React with urgency to all alerts that suggest downtime or impact (eg Pingdom alerts):    - An impact of 2 minutes or longer requires a CIE, so contact ERM on duty        - ERM page out: [https://bluemix.pagerduty.com/services/P62JX31](https://bluemix.pagerduty.com/services/P62JX31)            - For more details about ERM Call-out process:        https://github.ibm.com/watson-foundation-services/tracker/wiki/Emergency-Response-Manager-Call-out-Process    - A self-resolving alert is NOT an excuse to just ignore a high severity alert.    - Engage your Dev team if you need help understanding the impact.    - Continuously document diagnostic and recovery actions in the Incident Management tool (soon to be ServiceNow).- Its your responsibility to restore service. Do so before trying to find the exact root cause or being worried about preserving evidence during the incident/impact.    - Engage your Dev team or any dependent team immediately if you cannot restore service timely.- If impact is caused by a deployment/update action, consider rollback immediately, assuming this will not make the situation worse.- Own and drive post mortem/RCA effort for each high severity incident.- Commit to on-call rotation a minimum of 1 week out of every 8 weeks.- Drive your Mean Time To Acknowledge (MTTA) to a goal of 5 minutes or less.- Drive your Mean Time To Resolution (MTTR) to a goal of 30 minutes or less.- Drive your Escalated High Urgency Incidents to a goal of 0.- Drive to a self-sufficiency of 70% or greater resolution of PD alerts without engaging Development.### Consumption Monitors (Watson Status page)> There are a set of consumption monitors, each running as a python based Bluemix app that> exercises their corresponding Watson Service every minute in PPRD. Status and latency data> from this consumption monitor is primarily used to feed the Bluemix Estado app which generates> Consumption Availability reports for all Bluemix catalog services.> This does NOT include Provisioning availability data.Watson Status URL: [https://watson-status.mybluemix.net/](https://watson-status.mybluemix.net/)_What should you be doing?_- Check the Status page at the beginning of your shift- Use the Status page frequently during your shift, especially if there are hints of a problem.- If there is failure count above zero, drill into the service and its event IDs to find out why a monitor check(s) failed.- Report indication of a failure in SRE Slack channel and any follow-up actions … be transparent.- Know where your consumption monitors live in GHE and where the monitoring apps are running.### Provisioning Monitors (Estado Internal Status and Cloud Status Reports pages)> The Estado application automatically monitors services that are added> to the Bluemix catalog. This is totally independent of the individual> Consumption monitor Bluemix hosted apps.  _What should you be doing?_- Check the Cloud Status Reports page: [http://bluemix-service-monitor.rtp.raleigh.ibm.com/](http://bluemix-service-monitor.rtp.raleigh.ibm.com/)- Check the Estado internal status page: [http://estado.ng.bluemix.net/internalstatus](http://estado.ng.bluemix.net/internalstatus)    - The caveat is that it will only show the last provisioning incident.- Check for PD Alerts for Watson CSB Tests (Jenkins based) if Estado is showing provisioning failures:    - Use Kibana to dig for failures related to any CSB alerts.- If no CSB alerts and no failures/errors found in application logs for backend service for the same time frame as what Estado is showing, then pursue with the Bluemix team:    - Within the CloudPlatform Slack team, post in the \#provisioning-issues channel.### Service Health Checks_What should you be doing?_- At a moments notice, you need to be able to test your service is available AND functional.    - You need to understand what it means for your service to be functional!- Run pre-built cURL commands from command line, Postman, or scripts that can exercise the available endpoints for your service:    - Service availability is not just a 200 response code. Key features need to work and be responsive.    - Test the availability of your service in multiple regions, preferably by using a single script that can exercise the service across all regions, independent of Bluemix.- Test provisioning capability using Bluemix console, or Jenkins based CSB tests, or a pre-built script.- See Engineering section for tooling work that automate health checks discussed above.### Kibana and Grafana (Logmet)_What should you be doing?_- Use saved queries in Kibana to examine DataPower logs for your endpoint URIs.    - You need to have your endpoints documented for easy recall.- Use saved queries in Kibana to examine application logs for each of your CLOUD\_APP names.    - You need to have your CLOUD\_APP names documented for easy recall.    - There are likely other key fields for your service, for example bluemix-plan-id which can help distinguish between standard and premium services.- Document a base line for error responses for your service:    - Use Kibana to understand the average numbers of requests for a given period.    - Use Grafana to examine key metrics for your service to understand average load patterns.### Specific Monitoring Systems_What should you be doing?_- Eureka    - Know the VIP name(s) for your service, eg. VOYAGER-DIALOG    - Know how many instances of your service are expected to be registered with Eureka and ensure it has the expected number of instances reported UP    - Consider exploiting checkEureka.sh script to list instances and state information rather than relying on the UI which does not refresh automatically:        - [https://github.ibm.com/watson-foundation-services/wdc-support-tools](https://github.ibm.com/watson-foundation-services/wdc-support-tools)- Uptime    - Know what Uptime checks exist for your service.    - Use edit mode to obtain the URL being used as the healthcheck.- Seyren    - Know what Seyren checks exist for your service.    - Understand the thresholds and ensure they are linked to PD services of appropriate severity.- Jenkins    - Understand what jobs exist that exercise/test your service or the service demo.    - Know how to manually kick off a job to get more immediate feedback, but first determine any potential impact to manually running it.- Custom Dashboards:    - Know how to view your services app/instances within the Marathon UI.    - Know how to view your services VMs via Asgard and SoftLayer Portal.    - Exploit the RnR Internal Dashboard, if relevant to your service.    - Exploit the NLC QA Dashboard, if relevant to your service.- Pingdom    ([http://stats.pingdom.com/vv2vfum5kj7n](http://stats.pingdom.com/vv2vfum5kj7n))    - Use the Pingdom dashboard to see an external view of service availability.    - Understand what Pingdom checks exist for your service(s).        - Uptime checks for the Consumption Monitors        - Uptime checks for Demos### Estado Grafana Dashboard> All availability data from the consumption monitors and provisioning> checks is consumed by Estado and available to review either in line> chart form or in raw form via the Bluemix deployed Grafana:- Platform and Service Availability:    [https://9.39.221.141:6870/authenticate\#/dashboard/db/platform-and-service-availability](https://9.39.221.141:6870/authenticate#/dashboard/db/platform-and-service-availability)- Estado Service Plan Consumption Raw Data:    [https://9.39.221.141:6870/grafana/all/\#%2Fdashboard%2Fdb%2Festado-service-plan-consumption-raw-data](https://9.39.221.141:6870/grafana/all/#%2Fdashboard%2Fdb%2Festado-service-plan-consumption-raw-data)_What should you be doing?_- Daily (first thing in the morning) reviews of the Watson specific Platform and Service Availability graphs.- Report availability drops in SRE Slack channel and start an investigation.- Use the Estado Service Plan Consumption Raw Data graphs to pin-point exact time of failures, attempt to align with failure events visible via the Watson Status page (see point \#2 above).- Switch to Kibana to isolate DataPower log message and/or application log message related to failure point.### IBM Cloud Ops Platform / Bluemix Doctor (alternative to Grafana for Estado data)> This web interface offers a scorecard for all Watson services and arguably makes it easier to check historical availability data for consumption and provisioning monitors.- Bluemix Doctor: [https://doctor.bluemix.net/\#/scorecard/Watson%20Technology](https://doctor.bluemix.net/#/scorecard/Watson Technology)_What should you be doing?_- See Estado Grafana Dashboard section above### Service Demos_What should you be doing?_- Know where the Jenkins job is that tests the demos- Know how to access the Bluemix Dashboard that allows you to restart    the Bluemix App for your Services Demo### SRE Key Metrics_What should you know about your service?_- Know that your services availability agreement is at or above 99.5%.- Know your services actual availability … how many minutes of outage for the last week/month.    - Define and plan your Error Budget in partnership with your Development team.- Know how many high severity alerts you get per month (is it increasing or decreasing and why?).- Know your PagerDuty Mean Time To Acknowledge (MTTA)- Know your PagerDuty Mean Time To Recovery (MTTR)- Understand how MTTR (and MTTA) affects your Availability percentage    - Including delays in acknowledging the alert.- Are there any trends (up or down) for your metrics?## Engineering Focus> Continuous improvement and the ability to scale require an SRE todocument their actions and processes, create tooling that drivesautomation and efficiency, and tune everything from monitor thresholdsto runbooks.### PagerDuty_What should you be doing?_- Maintain an on-call schedule. Validate weekly and confirm overrides.- Adjust escalation policy layers to meet response expectations. Also need 3 levels of escalation:    - Level 1: SRE teams PD Schedule    - Level 2: First Line Dev Mgr and [sre-watson-CIE Emergency Response Manager](https://bluemix.pagerduty.com/schedules#P6DLLOA) Schedule.    - Level 3: Second Line Dev Mgr.- Align monitoring checks with appropriate PD service severity.- Provide manual page out options per service.- Conform to naming conventions:    - Team: Watson SRE - service\_name    - Service: \[env\] service\_name - monitor\_type - Sev 1|2|3|4    - Escalation Policy: \[env\] service\_name - High|Low Severity Policy    - Schedule: sre-watson-service-name- Integrate your PD Services with the TOC:    - From your service, click Integration tab, click New Extension, and add URL:        - https://www.isie.ibmcloud.com/hooks/pd?token=60751f7966b5c3dacadccf7053ac57f8### Consumption Monitors_What should you be doing?_- Look for opportunities to improve the consumption monitors to ensure they continue to reflect your services availability as accurately as possible, exercising as many functions as possible within given polling frequency.    - Partner with your development team.### Service Health Checks_What should you be doing?_- Have instances of your service pre-deployed within the different Bluemix regions and record their details, in particular, sets of working credentials.- Pre-building cURL commands that exercise the available endpoints for your service:    - Exploit Postman to save and share a collection of pre-built cURL commands.- Create tooling (scripts) to check service availability (is it functioning and responsive?):    - Include smarts to check multiple functions/features of the service or a set of components making up a service offering.    - Provide ability to test the service in multiple regions.    - Ensure minimal to no input required.    - Tool should report overall findings quickly and precisely.- Create tooling (scripts) to check provisioning capability:    - Tool should exploit CF command line to test provision, bind, unbind, and un-provision broker functions.- Document existence and usage of health check options.- Maintain all health check tooling and documentation in GHE so it is available to others to exploit.### Kibana and Grafana (Logmet)_What should you be doing?_- Create queries in Kibana to examine DataPower logs for your endpoint URIs.- Create queries in Kibana to examine application logs for each of your CLOUD\_APP names.- Create a Kibana Dashboard based on some of your saved queries.- Create a Grafana Dashboard that highlights key metrics for your service.    - Use the metrics from your services Seyren checks to build a Grafana Dashboard.- Document the existence and usage of the Kibana/Grafana queries and dashboards saved for your service(s).- Repeat for each Dedicated environment (note they may not yet be migrated to Logmet).### Specific Monitoring Systems_What should you be doing?_- Eureka:    - Customize checkEureka script to provide output specific to your service.    - Customize checkEureka script (or otherwise) to automate the ability to set instances for your service to OUT\_OF\_SERVICE and return them to service.- Uptime:    - Tag your Uptime checks so you can easily list all in one view and quickly check status.    - For Eureka based Uptime checks, it is preferred that you use Minimum instances in UP state and hard code the number of expected instances, instead of selecting  Validate ALL instances are UP, because the later will not catch the case where an instance is removed from Eureka.- Seyren:    - Consider creating duplicate Seyren checks with more aggressive thresholds that can be linked to a low severity PD alert to provide an early warning that something more serious may be looming.- Jenkins:    - If you dont already have one, consider creating a healthcheck job that potentially exploits health check tooling/scripting (see engineering point \#3 above) you may have created for your service.- ElasticAlert    - Ensure your service has checks looking at frequency of certain response codes (eg. 500s, 429s) and the latency of your service for a given sliding window.        - Use multiple checks with different thresholds to allow for an early warning lower severity alert that may allow proactive work to avoid hitting the more severe threshold.### Deployment_What should you be doing?_- It should NOT be the SRE teams primary responsibility to deploy or update the service or its components. This task should be owned by the Development team.- With the above said, you should still understand how to deploy, scale, and update your service.    - Understand the impact to your running instances and whether your deployment process has any disruptive characteristics, even if only for inflight requests.    - Know how to backout/rollback a deployment.    - Document the current deployment processes.- Partner with Development to enhance/automate the deploy/update process using standard tools like Jenkins or UCD.- Know the Change Request and Deployment Request process for Public and Dedicated accounts.    - Create templates to improve efficiency of the CR/DR approval process for the types of deployment/updates usually performed for your service.### Runbooks_What should you be doing?_- Create runbooks that allow every PD alert to be actionable.- Link a runbook to each PD alert:    - Embed the URL within the description of the PD Service.- Enhance and update existing runbooks.- Look for opportunities to automate runbooks partially or completely.- Pursue ways to eliminate repeat alerts and therefore the need for the original runbook.- Consolidate all runbooks (playbooks) and store in a single location for your service.## Customer Service Focus> As an SRE, youre all about the availability of a service to the IBMclient. This means not only working with our internal systems to keepthem operational, but also directly helping our clients so they getvalue from our services._What should you be doing?_- Meet or exceed response time objectives for ticket handling:    - [https://www-01.ibm.com/software/support/acceleratedvalue/SaaS\_Handbook\_V18.pdf](https://www-01.ibm.com/software/support/acceleratedvalue/SaaS_Handbook_V18.pdf)- Provide technical assistance for Watson services and drive each client issue to resolution.- Direct clients having coding issues to DeveloperWorks or StackOverflow forums.- Contribute to the Knowledge Base for each service.- Check support coverage is available and adequate hand offs are performed.- Ensure that you provide exceptional support to our customers. Specifically, our ticketing system gives our customers an opportunity to rate their support experience upon the closure of their ticket.",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/site-reliability-engineering/sre-manifesto/",
    },
    {
      "title": "How we Work...",
      "text": "---title: How we Work...---### Product Planning- Maintain a continuously prioritized roadmap in Aha with 12-18 mos of Hills and Epics that are aligned with strategy and mission  - Once a Quarter, the team will run a roadmap workshop. Hills and Epic proposals will be reviewed by the Leadership team.- Plan and prioritize ONLY based on ACTUAL CAPACITY (capacity is determined by the previous quarters average velocity times amount of full sprints in quarter)- Offering Managers will continuously review and triage Aha Ideas Portal and promote appropriate ideas to Epics for potential inclusion in the product roadmap- Conduct regular refinement sessions to refine Epics - Define MVPs before the next quarter (e.g. Q3 MVPs are defined in Q2)- Once quarter is in progress and MVPs are defined and prioritized then no new items should be added and the plan should not change. If new priorities must be added per executive leadership request then there are two options to add new priorities - ALL MANDATES MUST GO THROUGH THIS PROCESS, NO EXCEPTIONS:  - If new priorities are added other priorities must be removed - 1 comes in 1 comes out; 2 come in 2 come out  - If new priority is large or highly impactful then the entire quarter should be replanned but ONLY within the REMAINING CAPACITY- Aha Epics will be pushed into GHE/ZenHub Assistant planning repository for further sprint planning and Squad Backlog Refinement - A new Epic column/pipeline will be added to the Assistant repository for the Aha Epics- User flows should be linked in the Aha Epic and stored in a Box folder that all can access- Technical Foundation work that is not tied to a Roadmap Epic (Keeping the Lights on, bug fixing, etc) will be tracked under a single Technical Foundation Epic. This will allow the team to quickly understand how much of their budget they’re spending here.### Squad Backlog Refinement- Squads will groom the highest prioritized Epics that have been pushed from Aha to ZenHub- Squads will write user stories in ZenHub to implement the Acceptance Criteria found in the Epic  - All user stories must be a child to an Epic- Squads will estimate the effort to implement each user story and add points to those stories in ZenHub- Squads will prioritize the backlog in preparation for Sprint Planning- Squads will have 1-2 Sprints worth of backlog for Sprint Planning. DO NOT groom further out because shit will change### Sprint Planning- Squads will calculate their current velocity using ZenHub velocity report- Squads will pick one continuous improvement item from their retrospective to put in their sprint plan- Squads will add ONLY enough user stories to fit within their velocity to their next Sprint milestone - no more planning beyond capacity  - Stories should be sized small enough to be able to be completed within a Sprint- All work is assigned to a ZenHub Milestone this is your Sprint Plan- Once the Squad has committed to a Sprint Plan, the content of that Sprint Plan should not be changed externally or internally:  - New blocking defects must be addressed  - Other new issues are prioritized into the backlog to be worked on as soon as the next Sprint  - If an issue must be pulled into the current Sprint then:    - The lowest priority item of equivalent size must come out of the plan    - Worst case scenario (aka the Nuclear Option) is the entire Sprint is re-planned, but that should be done at the beginning of the Sprint### Daily Standup - 15 minutes- Have a daily Scrum meeting that is no more than 15 minutes long and focused  - Three and only three questions are asked and answered:    - What was done yesterday?    - What is being done today?    - What is blocking you?### Daily Scrum Master Standup - 15 minutes- Scrum Masters attend Scrum Master Standup covering only blockers and/or dependencies- Three and only three questions are asked and answered:  - What is your Squad blocked by?  - Are you, or will you be, blocking other Squads?  - Do you need the help of any shared resources within the team### Daily Director Standup - 15 minutes- Scrum Masters that are blocked (or blocking) attend Daily Director Standup covering only blockers and/or dependencies- Three and only three questions are asked and answered:  - What is your Squad blocked by?  - Are you, or will you be, blocking other Squads?  - Do you need the help of any shared resources within the team### On the last day of the Sprint- Hold a whole team Sprint Review- Each Squad holds their own Retrospective- Each Squad plans for their next Sprint### End of Sprint Demo - 1.5 hrs- All Team Members attend the Watson Assistant End of Sprint Demo on the last day of the Sprint and present the Squads completed Sprint work:- OM presents the Epics that were worked on and provides context- Scrum Master provides overview of Sprint Plan- Squad members present work completed against the Sprint PlanRefer to the Playbook for how to hold a Retrospective and Sprint Planning...https://pages.github.ibm.com/the-playbook/### Next Steps: Planning schedule- Daily Product Roadmap Refinement - OM to schedule- Daily Squad Backlog Refinement - Scrum Masters to schedule- Daily Scrum Master Standup - Chief Scrum Master to schedule- End of Sprint Demo - OM to schedule- Monthly Segment Leadership Product Review - OM to schedule- Quarterly planning workshop - End of the 1st month of each quarter - OM to scheduleAll events (meetings) end the moment their allotted time is up. ",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/watson/assistant/",
    },
    {
      "title": "Departing Team Members",
      "text": "---title: Departing Team Members---Before you leave the Watson Team, there are a few things youll need to take care of.Box.comDocuments and folders have owners, before you leave, make sure you assign new owners for _all_ of your Watson-related content.- Departing Team Member: [How Do I Change The Owner Of A Folder?](https://community.box.com/t5/Collaboration-and-Sharing/How-Do-I-Change-The-Owner-Of-A-Folder/ta-p/149)- Manager Help: [How can we recover files that were owned by a former IBMer?](https://w3.ibm.com/help/#/article/box_troubleshoot/missing_folders)GitHubGitHub Repositories have owners, before you leave, make sure you change owners of _all_ of your Watson-related repos.- Team Member: [Transferring a repository owned by your personal account](https://help.github.com/articles/transferring-a-repository-owned-by-your-personal-account/)- Team Member: [Transferring a repository owned by your organization](https://help.github.com/articles/transferring-a-repository-owned-by-your-organization/)- Manager Help: There is no process to recover private repositories owned by former IBMers.Slack- Team Member: Youll lose access to ibm-watson.slack.com 24 hours after leaving the team. If youre moving to a partner organization, have your current Watson Manager request friends and family access for you _before_ bluepages is updated.- Manager Help: Request access by following the process on the [onboarding page](../../onboarding/).",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/onboarding/departing-team-members/",
    },
    {
      "title": "Watson Platform Guide",
      "text": "---title: Watson Platform Guideweight: 1---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developers/watson-platform-guide/",
    },
    {
      "title": "Watson Developer Guild Guide...",
      "text": "---title: Watson Developer Guild Guide...weight: 4---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developers/watson-developer-guide/",
    },
    {
      "title": "Secure Engineering",
      "text": "---title: Secure Engineeringweight: 3---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developers/secure-engineering/",
    },
    {
      "title": "Watson CI/CD",
      "text": "---title: Watson CI/CDweight: 2---",
      "tags": "",
      "url": "https://pages.github.ibm.com/the-playbook/developers/ci-cd/",
    },
  ]
};
